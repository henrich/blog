<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on Forget me not...</title>
    <link>https://henrich.github.io/blog/categories/debian/</link>
    <description>Recent content in Debian on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Sat, 30 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://henrich.github.io/blog/categories/debian/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>jcodingsのunblockを出した</description>
    </item>
    
    <item>
      <title>サポート終了コンポーネントのアーカイブ削除に寄せて</title>
      <link>https://henrich.github.io/blog/2019/03/26/%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E7%B5%82%E4%BA%86%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%82%A2%E3%83%BC%E3%82%AB%E3%82%A4%E3%83%96%E5%89%8A%E9%99%A4%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/26/%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E7%B5%82%E4%BA%86%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%82%A2%E3%83%BC%E3%82%AB%E3%82%A4%E3%83%96%E5%89%8A%E9%99%A4%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6/</guid>
      <description>先日、ミラーアーカイブからDebian7とDebian8のサポート終了コンポーネントが削除されました。すると、Docker使ってる人やCircleCI使ってる人が「ぎゃー！」と叫び始めたという。どうも背景を理解されてる方は少ないようなので、簡単にざっと説明を書きました（ユーザーならともかく、イメージを提供するベンダー側は把握しておいてほしいですけどね…）。
ベースイメージとしてDebian8 &amp;ldquo;jessie&amp;rdquo;を使っているという前提で話をします。
 Debian8はDebian9のリリースに伴って「oldstable」（旧安定版）という扱いになっています。oldstableはstableに比べて限定されたサポートの提供となります。そりゃぁでっかいリポジトリを複数バージョンに渡って長期間メンテナンスなんて難しいですからね。oldstable使ってる時点で色々制限が出てくる、ってもんです。ベストプラクティスとしては「ベースイメージのDebianはstableを使おう」です。  え？Ubuntu LTSだってでっかいリポジトリで長期間サポートしてるじゃん、って？…彼らは2000パッケージぐらいのmainコンポーネントはサポートしてるけど、その他の50000パッケージぐらいのuniverseはコミュニティに寄るサポート≒Debianその他から持ってくるよ、という状態なんですよ。知らなかったでしょ？  jessie-updatesコンポーネントが無くてビルドがー！という人：-updatesは「stableにおけるパッケージのうち、定期的な更新が必要なものを提供」という位置づけなので、jessieがoldstableになった時点で死んでます。外しちゃえばいいです。 (追記) http://security.debian.org/debian-security jessie/updates mainも削除…はしちゃダメです！ その行はセキュリティアップデートの取得です（取得先サーバーがsecurity.debian.orgでしょ？) たしかにjessie/updatesというところだけを見たら削除したくなるかもしれませんが、LTSサポートのセキュリティアップデートが降ってくるのを消したらアカンですよ…。 jessie-backportsが無くなってギャー！という人：-backportsは「stableへの新しいバージョンの移植」という位置づけのコンポーネントなので、jessieがoldstableになった時点で死んでます。なんで使ってんの？ということです。そもそも新しいバージョンが必要だ、というならoldstable使ってる時点で前提がおかしいですよ？まずはstableに移行しましょう  Debian9がでて早２年近く、そろそろDebian10の足音も聞こえてるので、開発側としてはいまさらDebian8に固執してほしくはない、というのが正直な所。ベースイメージのバージョン移行は計画的に…。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> tomoyo-toolsも一応unblockを出した。通らないかもしれないけど、一応そこまでdiffがでかくないよ―というアピール。  →ダメだった。そらそーか。  squid-deb-proxyは問い合わせてみたが特に反応がないが、週末だったので--deleyed 3でアップロードした。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今回はubuntu-keyringパッケージを題材に「full freeze期間に入ってしまったが、unstableにあるパッケージをリリース対象＝testingに入れたい」場合の手順をメモしてみました。
まず、testingにあるバージョンとunstableにあるバージョンの差分（diff）を生成します。今だとgit diffでも良さそうな気はするのですが、慣例的にはソースパッケージに対してdebdiffを使って作ります。ソースパッケージをdgetコマンドで取得し、.dscファイルに対してdebdiffコマンドを実行しています。ソースパッケージのURLはdistro trackerからコピペしていますが、別のやり方もあるでしょう。
$ dget http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-4.dsc \ http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-5.dsc $ debdiff ubuntu-keyring_2018.09.18.1-4.dsc ubuntu-keyring_2018.09.18.1-5.dsc &amp;gt; ubuntu-keyring.diff  diffが出来たので、これを元にunblockリクエストをバグ登録します。ツールとしてはreportbugコマンドを使うとウィザード形式で行ってくれるので間違いがなくて楽です。reportbugはreportbug &amp;lt;package&amp;gt;という形でパッケージを指定してバグ登録するのですが、今回のような場合はリリース関連の調整をトラッキングするための疑似パッケージ(psuedo package)であるrelease.debian.orgを指定します。
$ reportbug release.debian.org Detected character set: UTF-8 Please change your locale if this is incorrect. Using &#39;Hideki Yamane &amp;lt;henrich@debian.org&amp;gt;&#39; as your from address. Will send report to Debian (per lsb_release). What sort of request is this? (If none of these things mean anything to you, or you are trying to report a bug in an existing package, please press Enter to exit reportbug.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debootstrapにバグレポート来てたから確認したが、報告者がミスってるだけだった…</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>RCバグでunstableにuploadされてNEW queue待ちのがあったようなので、タグ付けした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>RCバグつぶし出来ないかなーと眺めて、squid-deb-proxy-clientにパッチを送っておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> cowbuilderを動かしてて、そういえばコイツ…というかpbuilderはbaseイメージ作成の際にdebootstrapを呼ぶな、という考えに至り、--cache-dirオプションが使えるのではないか？と思いつく。で、MergeRequestした。  その中でmanpageの--debootstrapオプションの設定が間違っていたようなので、こちらもMergeRequest  もう一つ、man pbuilderした時だったかにapt lineがftp.jp.debian.orgやftp.de.debian.orgを指定してたのでdeb.debian.org指定に変更のMergeRequest。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>LFのメーリングリストが復旧した。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> partman-lvmのregression修正、release managerからは「もう遅い」と言われてしまったが、アップロードされた。恐らくBug Squashing Partyのおかげ。 リリースノートの翻訳を始めたが、細かい所（entityで「svn」の文字が残ってるのが気になった）のでMerge Requestしたら速攻でMergeされた。 live-buildがbuster対応してない件、未だにアップロードされないのでバグ登録しておいた。patchはマージ済みなのに。  その日のうちにアップロードが来ました。よしよし  色々泣きそうになりながらubuntu-keyringパッケージに対して自分で仕込んだバグへの対応。バグレポートの指摘がありがたい。。。なんとかクローズ。  shellcheckを自動でkickするようにしたほうが良い気がしてきた…   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日のdebootstrap話で平松さんがarchitecture指定がDebianだと独特なのがあって混乱する（例: amd64）と仰っていたので、パッチ作成した。 birdfontのtestingへのmigrationを待って更新を押し込んだ。 libuninameslistはライブラリ更新だし、ということで作業はしたけどアップロードは見送り。 jcodingsの更新をアップロード  よく考えたらjruby-joniでのjcodings指定が上記の更新したバージョン依存であった…ミラーに来るのを待って明日更新しよう…。  tomoyo-toolsがリリースされてたのでこちらもアップロード  OpenChainの下調べで日本のワーキンググループのメーリングリストに参加しようとするもエラーが出るので、list ownerに問い合わせを送った…のだがエラーになって帰ってくるよ？
&amp;lt;openchain-japan-wg-owner@mail.linuxfoundation.org&amp;gt; (expanded from &amp;lt;openchain-japan-wg-owner@lists.linuxfoundation.org&amp;gt;): Command died with status 1: &amp;quot;/usr/lib/mailman/mail/mailman owner openchain-japan-wg&amp;quot;. Command output: mailowner script, list not found: openchain-japan-wg  そのうちページにも一切アクセスできなくなった…なんだこれは、ということでLFのアカウントを取って（というか取り直して？）、Jiraに報告した。
メーリングリストの案内についてはページを指すようにPull Request送った。
laptop（HP Elitebook G5 830）のBIOSアップデートを実施。UFEI画面から有線LAN経由でアップデートできるのは良い（Dockの方からは行けないのが残念）。一度処理途中で止まってしまい、電源強制切断からの更新のrevertと再アップデートしたのも中々ヒヤヒヤした。あとはDockとかのファームウェアのアップデートもしたいところだが、こちらはWindowsが無いとダメっぽいんだよな…。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Japan Linux Jamboreeでdebootstrapの話をしてきました。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> os-autoinstのtestでのrace condition bugの修正を先日NMUしてもらったのだけど、何故かbugが自動で閉じられてなかったので処理。  後で気づいたが、これi386でのビルドがまたコケてるね…それでか。  jruby-joniのバグがupstreamでようやく修正されたのでupload そういえばSoftware Design2019年4月号の画像を見かけたのでJPサイトに追加 JDimのtestがらみのissueにコメント  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Debian JPのミラーサーバ一覧、Ring Serverプロジェクトの部分を更新しておいた。</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/27/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/27/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>libhinawaをアップロードした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日のbirdfontの修正に漏れがあった（linksが修正されてなかった）ので対応。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontの依存関係を微調整するバグレポートが来てたので対応した。
W: birdfont source: inconsistent-appstream-metadata-license resources/linux/birdfont.appdata.xml (gpl-3.0+ != gpl-3+)  とあったが、これはどっちに揃えるのが良いのだろうね？</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>いつの頃からかデスクトップのapt updateがまともに働かなくなった。どうやらsquid-deb-proxy-clientがおかしい。
squid-deb-proxy-clientの中身を見てコマンドを実行。
23443 ? Ss 1:44 \_ tmux -u -2 -f /usr/share/byobu/profiles/tmuxrc new-session -n - /usr/bin/byobu-shell 23450 pts/2 Ss 0:00 \_ /bin/bash 22690 pts/2 S+ 0:00 | \_ /usr/bin/python /usr/share/squid-deb-proxy-client/apt-avahi-discover http://deb.debian.org/debian 22691 pts/2 Z+ 0:00 | \_ [avahi-browse] &amp;lt;defunct&amp;gt;  というようになったので、試しに引数なしで
23450 pts/2 Ss 0:00 \_ /bin/bash 24148 pts/2 S+ 0:00 | \_ /usr/bin/python /usr/share/squid-deb-proxy-client/apt-avahi-discover 24149 pts/2 Z+ 0:00 | \_ [avahi-browse] &amp;lt;defunct&amp;gt;  おお、defunct…。
この後、どうやらlaptopでもapt-cacher-ngが動いていて、こちらを消したら動くようになった。釈然としないので再度追試とかしてみるか…</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debian-mirror.sakura.ne.jpでのmuninでの監視で、ちゃんと動いてなかったのを放置していたのを直そうと思い立った。
You don&#39;t have permission to access /munin-cgi/munin-cgi-graph/sakura.ne.jp/debian-mirror.sakura.ne.jp/apache_volume-pinpoint=1550237708,1550928908.png on this server.  ということなので、いろいろ調べて http://munin-monitoring.org/wiki/MuninConfigurationMasterCGI を見てから
$ sudo apt-get install libapache2-mod-fcgid $ sudo a2enmod rewrite $ sudo a2enmod fcgid  としてから/etc/apache2/conf-enabled/munin.confを以下のように書き換え。
--- /tmp/munin.conf 2019-02-23 23:06:32.694400917 +0900 +++ /etc/apache2/conf-enabled/munin.conf 2019-02-23 23:06:41.302614319 +0900 @@ -11,7 +11,7 @@ ScriptAlias /munin-cgi/munin-cgi-graph /usr/lib/munin/cgi/munin-cgi-graph &amp;lt;Location /munin-cgi/munin-cgi-graph&amp;gt; - Require local + Require all granted &amp;lt;IfModule mod_fcgid.c&amp;gt; SetHandler fcgid-script &amp;lt;/IfModule&amp;gt;  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>MathLibreをいじっててlive-buildパッケージでbusterサポートが抜けてたのでMerge Requestした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimでのDebian向けの開発環境説明を修正した。 partman-lvmの修正がregressionを起こしてrevertされたので再チャレンジ  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/09/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/09/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>groonga 9.0.0 を deleyed 3 でアップロードした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> CONFIG_IMX_THERMALがマージされた CONFIG_ARM_ARMADA_37XX_CPUFREQがマージされた CONFIG_LEDS_PCA963Xは「アーキテクチャ限定したほうが良いんじゃね？」というサジェスチョン。 jdimをstretch-backportsにアップロードした。これもNEW行きかな？入ったらjdを削除依頼しないと。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/08/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/08/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> groongaとhinawa-utilsのアップロードが何故か上手くいかないようなので代理作業。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-misakiがサイト移転＆アップデートしてたので対応を。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> linuxパッケージのconfigをいじる作業の続き。Bug#920809とBug#918114がマージされた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> gem2debのテンプレートでruby-interpreterが入ってたのを削除するパッチがマージされた。リリースはまだ。 ubuntu-keyringパッケージのdebconf poの更新を取り込んだ。これ、次回からMerge Requestの方が良いような…  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-arubaのアップデート ruby-childprocessのissueに返信があったので、さらにコメント追記。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#918589がマージされた。 Bug#912597がマージされた。 ruby-childprocessパッケージ、upstreamが1.0.0を出してたので追随しようとしたらエラーになった。まずはissue登録しておく。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#917388がマージされた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimをビルドしたのでアップロードした。NEW queue待ち。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimのITPを投げた。Bug#920684が割り当てられました。 cdimage.debian.or.jpを先日9.7へのリンクに更新したけど、背景画像がhttpを参照しててmixed contentsになっていたので修正しといた。 PublickeyのSSPL記事について、Chrisの発言はftpmaster teamとしての発言である旨などを指摘して修正してもらった。 Maintainer Dashboardでsnapperのアップデートを見つけたので、放り込んだ。  backportsを忘れないうちに準備しておこう…と思ったら、なんかビルドできないな。なんでだっけな&amp;hellip;あぁ、backportsを加えてないからか。と気付くまでに時間を要した。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Internetwatchの記事の見出しが「「Debian GNU/Linux」に関する脆弱性が171件、第4四半期「JVN iPedia」への登録状況」と、Debianだけ危険みたいな感じだったので苦情を入れた。こんな感じ。
IPAの該当レポートについては、確かにDebianについての脆弱性数がトップであることは事実として記述されておりましたが、レポートの構成としてはサポートが終了するJava8、それからXSS脆弱性とバッファオーバーランについてが多くを占めています（それぞれ章立てされていました）。ここに全く触れていないことはどの様な意図があったのでしょうか。 「3. 脆弱性対策情報の製品別登録状況」の項にてDebianの脆弱性数が述べられていますが、DebianやUbuntuそしてRed Hat Enterprise Linuxの様なLinuxディストリビューションはWindows Serverなどとは違ってOSのみだけではなくLibreOfficeなどのオフィススイート、Firefoxなどのブラウザ、Tomcatなどのミドルウェア、Apacheなどのサーバーなどを全て含んで提供されています。Debianでの配布ソフトウェアパッケージ数はおおよそ5〜6万です。その背景を把握せずに、単純に「脆弱性が多い」とだけ見出しに書かれるのは、大変遺憾であると同時に、記事の薄さを指摘せざるを得ません。 今後の改善に期待したいと思います。失礼します。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#912597向けにMergeRequest Bug#832458でのCONFIG_SND_SOC_INTEL_BYT_MAX98090_MACH=mはすでにdeprecatedで代わりの奴が有効になっているのをコメント追加。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> experimental用に作業してマージされたパッチだけど、buster用にもいれたほうがいいかな、とおもったので別途MergeRequestを作った Bug#918589向けパッチを作成、テストビルドは無事通った Bug#918114向けパッチを作った。 ubuntu-keyringパッケージがいつまで待ってもNEW queueから出てこないので、ftpmasterにお手紙→入った  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> whizzytexのパッチをもうひとつ取り込み忘れてたので作業。まだtestingに前のが落ちてないので待ち。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 昨日のjdパッケージの削除依頼が実行されてた。早いなー。ruby-bcatパッケージの削除もその日のうちだったし。 systemdの脆弱性の話で「gccの-fstack-clash-protectionオプション指定してるディストリビューションは影響受けない」という話があって「これ、適用しないの？」と聞いたら該当のバグ登録を教えてもらった。subscribeして様子見しよう。 ubuntu-keyringパッケージのdebcont templateのレビューを反映した。なるほどなー  既に翻訳版を送ってくれた方々に「こっちでお願い」を送った  ubuntu-keyring、ubuntu-archive-keyringをtransitional package にすべきと言われてなるほどなーとなったので更新して再度NEW queueへ grcompiler、4.2.7以降のがテストこけちゃうのでtest failureをreportした curlが最新にならないかなぁ、というつぶやきを見かけたので、前のBTSのpushの意味も兼ねてバグ登録した fonts-sawarabi-minchoを更新 nadokaが古いままでwatchもエラーになっていたので、重い腰を上げて更新しておいた。前のメンテナの安井さんにも連絡済み。 whizzytexのパッチを取り込み忘れてたので作業。まだtestingに前のが落ちてないので待ち。 jruby-joniパッケージがFTBFSになってる？なぜだ… org.jcodings.exception.CharacterPropertyException: invalid character property name &amp;lt;graphemeclusterbreak=emodifier&amp;gt;と出てくるのでその辺りから検索したけど、よくわからんよね…issue登録だけしておいた  $ grep emodifier -r ./ ./src/org/joni/Parser.java: static final byte[]Grapheme_Cluster_Break_E_Modifier = &amp;quot;graphemeclusterbreak=emodifier&amp;quot;.getBytes();   気になったのでgem2debのテンプレートからruby-interpreterを削除するMRを送っておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDパッケージの削除を登録した  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/14/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/14/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>武藤さんがDDを引退されたので、その引き継ぎとしてmltermパッケージの今後のsponsor uploadを引き受けることになった。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> whizzytexパッケージをアップロード。作業自体は以前にあらかたしていた。
 問題だったのはautopkgtest。ファイルを開くだけでwhizzytex-modeを実行しないとテストの意味がないのでemacs --script test.el test.texのようにしてtest.elの中で以下のようにするなどした。  (find-file (nth 0 command-line-args-left)) (whizzytex-mode 1)   その後、どうやっても1つ目のテスト以外コケるな…と思ったら、もともとのtestfileファイルにtypoがあってtest.texとすべきところをtest.txtになってて、存在しないファイルなのでコケるという…ターミナル中で実行した時はbashの補完だったから気づかなかったよ… ruby-arubaパッケージをアップロード ruby-bcatへの依存、ずっと前から要らなくなっていたようだ…見落としてた。これでCIが通るようになるはず。 ん？ということはruby-bcatをRMしてもいいんじゃないか。ざっくりapt-rdependsした結果では依存はないし、codesearch.debian.netの検索結果もそれらしいものはない。grep-dctrlでも同様なので、RM依頼を登録  $ grep-dctrl -FBuild-Depends ruby-bcat -sPackage /var/lib/apt/lists/*Sources Package: ruby-aruba  libmojo-ioloop-readwriteprocess-perlパッケージが入ってくれたので、手元のos-autoinstをmaster HEADに更新。予想通りだが、i386でのエラーは変わらず…。
 ubuntu-keyringパッケージのdebconf template査読が返ってきてたので、mergeしないと…。
 だいぶ前にjdがクラッシュするよ、とlaunchpadの方でレポートがあった（けど、debianからsyncしてるだけだからあんまり見ないんだよね、launchpad…ログインするのも手間だし）のだけど、その後のreplyに何の返答もない。それでいて「Debian/Ubuntuのパッケージはメンテされてない」とか言いふらすのは止めてほしいよね…（こちらとしては、そもそも2ch（今は5chなんだっけ）の方で仕様変更が云々あって見ない＆使わない状態が続いてるのに加えて、upstreamに動きがないためにチェックする機会も無かったのだ）。で、forkだと思しきrepositoryの方では名称変更が検討されてたので、パッケージにしたいなーというのは伝えておいた。
  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> debootstrapにバグレポートが。  busyboxではdateのparseに失敗する、とのことだったのでそのチェックを追加 もう一つはInReleaseファイルの書式の方なので、もうちょっと検討する。Valid-Until: Tue, 15 Jan 2019 20:29:52 UTCのようにValid-Untilがあるのが普通と思ったが、Stretchだとないな…「存在しなければOKを返す」が必要そうだ。  DSA-4364-1が出た。お疲れ様でした。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 眠れなくなってしまったのでsnapperパッケージのミス修正とR3いれてアップロード もう月曜日だ！ということでdebootstrapのアップロードを上げる 某所の喧々諤々のメールのやり取りに辟易して「おまらディスカッション好きなの結構だがな、とっととコード書けやコラ」というメールを送ってしまう。ふー。 os-autoinstのperltidyの問題、バージョン間の非互換性によるものだった  で、amd64でのビルドは通ったのでi386でやったらまたも同じエラー…仕方がないのでチケットを上げた  先日のsecurity update、「前のパッチにノイズがー」と言われて「？？？」となったが、よく見たらgit-buildpackageによるpatchへの変更が入ってた…取り除いてsecurity-masterへアップロード。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>snapperパッケージのbug triage  報告から３年、moreinfoタグ付けて「もっと詳しくー」と書いたのに何も有用な話が無いバグを閉じた 「snapshotでディスクフルになるー」は、0.8.0からどうやら新しいオプションが増えて有用そうなので「これで解決しない？」と聞いてみる その過程でmanで書いてあることとconfigで書いてあることが違うのを見つけたのでpull requestして、パッケージの方に当ててアップロード  debootstrapの変更をpush ruby-なパッケージのtest failed、佐々木さんのblogにあった「test/ 以下で実行されることを前提として, 相対パスで必要なライブラリを読み込んでいたりする gem とか?」ということやね。  ということで、ruby-netrcパッケージについてrequire_relative に書き換えて実施してみる。あとで結果確認しよう…   昨日のos-autoinst、対象アーキテクチャを絞ったつもりで忘れてた…アップロード…ぬぉぉ i386アーキテクチャでFAIL: 01-test_needle.tとテストに失敗するぞ…、手元のsbuildでも同じだ…以前は問題なく通ってたのにどうなってんだ？
not ok 14 - found area is the original one too # Failed test &#39;found area is the original one too&#39; # at ./01-test_needle.t line 73. # got: &#39;944&#39; # expected: &#39;108&#39;  うーん。
とはいえ、upstreamでは直ってるかもしれないよな、と１年間タグが打たれてないupstream HEADをmergeしてビルドする…とテストがコケまくる。一つは依存関係のパッケージが無かったのでいれたのだけど、もう一つのMojo::IOLoop::ReadWriteProcessはパッケージ自体がDebianのリポジトリにない…仕方がないからdh-make-perlで手元で作ってITP(intend to package)して、アップロードした。
で、libmojo-ioloop-readwriteprocess-perlパッケージをテスト環境のchrootに突っ込んでビルドの様子見るか…としたら、やっぱりFAIL: 03-testapi.tとエラーが出る。
^* matches null string many times in regex; marked by &amp;lt;-- HERE in m/^* &amp;lt;-- HERE \.</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/05/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/05/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>倉敷さんのgoldencheetahパッケージの状況をヒアリング。
 libusb0.1に依存しているが、libusb0.1はもう古いからDebianから消したいよねという動きがある。 でもgoldencheetah側としては「マルチプラットフォーム対応してるので、壊したくないよね」なのでlibusb1.0に動くのは消極的 libusb-compatという「libusb1.0のwrapperで0.1相当の動きをする」のがあるから、これを使えば？という流れはある。  ただし、goldencheetahでは「使うようにしよう」というPRが来ているものの実装はされてない感じ Debian側もdeadからhalf-deadになるだけじゃね？というコメントもある。 個人的にはhalf-deadならいいじゃん、と思うけど… ちなみにlibusb-compatはDebianではパッケージになっていない  ついでの気晴らしにdebianディレクトリ以下をレビューしてmerge requestを送った。要点は以下の感じ  最新のdh12に更新、不要になったファイルやオプションを消す insecureなgitプロトコルやhttpをhttpsに置き換え debian/watchはv4形式にして簡易に書ける  cosmetic changesなわけだけど、パッケージの「メンテナンス」ってそんなもんですよ、っと。これが最初の「パッケージング」だと色々と技術的にどう対処するか？の問題を解く感じになる。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>“debhelper-compat (= 12)” is now releasedを読む。Rules-Requires-Root support when the field is set and dpkg-dev notifies debhelper that it supports the feature (requires dpkg-dev from Debian buster). Besides removing the need for (fake)root it can also remove about 3 invocations of debian/rules.との記述。Rules-Requires-Root: noのようにするとfakerootの起動とdebian/rulesの呼び出しが無くなって早くなるぜ、ということらしい。
試しにdpkg-devをBuild-Dependsにしてみたら
E: os-autoinst source: build-depends-on-build-essential-package-without-using-version dpkg-dev [build-depends: dpkg-dev]  あら。。。dpkg-dev 1.19.0からサポートのようなので修正。しかし、ビルドにroot権限が必要なパッケージのほうが少なさそうだから、これはnoをデフォルトにしてRules-Requires-Root: yesを明示的に宣言させるほうが良くないかね？と思ったので質問してみた→やはりそのようだ。しかし、それを実装するとなると対応パッケージが多数になってしまうだろうという懸念がある模様。
 上記の変更その他を加えてos-autoinstパッケージをアップロード。RCバグはseverityを下げておいた。 debootstrapパッケージ、夏に作業して放置してたMergeRequestを変更を追加してMergeした。git rebaseなんて初めて使ったぞ。反応を様子見してから月曜にでもアップロードするかな。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/04/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>倉敷さんがビルドマシンが家のNASで遅いという話をしていたので、CloudGarageさんの開発者支援制度でお借りしているホストを一台セットアップして渡した。外堀を埋める方向。</description>
    </item>
    
    <item>
      <title>debootstrapを速くするには</title>
      <link>https://henrich.github.io/blog/2019/01/04/debootstrap%E3%82%92%E9%80%9F%E3%81%8F%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/debootstrap%E3%82%92%E9%80%9F%E3%81%8F%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</guid>
      <description>debootstrapは最低限のDebian環境の作成に使われるツール。pbuilderやcowbuilder（とその環境を使うpiuparts）などのツールの裏側でも動くし、dockerイメージの裏側もコイツ。ちなみに環境構築にはリポジトリから必要なパッケージを取得してくるので、それなりに時間がかかる（しかも最初はaptも使えないのでwgetで取得するんだぜ？）。うーむ。
で、どうやって時間を短縮するか？というと、以下のような選択肢がある。
 ローカルミラーをセットアップしてそれを参照する ローカルプロキシをセットアップしてそれを参照する ローカルキャッシュをセットアップしてそれを参照する   1のミラーはまるっとDebianリポジトリをコピーするやり方。  クライアントが何十台、スペックによっては何百台とかあっても対応できる どのパッケージでもLAN内にあるので取得が早い でも、ミラーを構築するには最低でも数百GBのディスクを使うことになるし、更新も追随するとなるとそれなりにトラフィックが生じる ぶっちゃけオーバースペックすぎる。牛刀をもって鶏頭を裂く、的な。 あと、必ずそのミラー参照するようになるので、Laptopで作って移動したときには面倒になるかも 構築するならftpsync使おうね。他のツールはダメダメ。  2のプロキシはsquidなどのサーバーを立てるやり方。  取得したパッケージだけをキャッシュするのでディスク容量がミラーより格段に少なくて済む ミラーと同様に複数のマシンからも参照可能 debootstrap 1.0.96からsquid-deb-proxy-clientをインストールしておくと、squid-deb-proxyで立ち上げたプロキシサーバーを自動的に参照するようになる。apt-cacherなどだと一々プロキシがどこにあるのかを指定しないといけないので、squid-deb-proxyマジおすすめ  3のキャッシュは--cache-dirオプションを使って、適当なところにキャッシュしておいたdebパッケージを参照するやり方。`  debootstrap 1.0.97から実装済み。一台だけでやるならこれで十分。 --cache-dir=/home/henrich/tmp/cachedirというように、このオプションでは絶対パスで参照するのが必要。~/tmp/cachedirの様な指定はできない。   あと、リポジトリのミラーはdebootstrap 1.0.85からdeb.debian.orgを参照するようになっている。これはFastly提供のCDNだけど、個人的には自分が運用しているdebian-mirror.sakura.ne.jpを使っている。これは異常があったらすぐ気付くように、というドッグフーディングの側面もあるが、利用者がそんなに多くないので快適だということもある。もっと使っていいのよ？
最後に、記述時の最新であるdebootstrap 1.0.112はMr.FAIことThomas Langeさんのハックによってパッケージ依存関係の最適化（これもaptが使われてはいない）が図られているので、随分と時間が短縮されている。
結論：debootstrap 1.0.112以降を使おう。debootstrapはshell script＋embedded perlコードというアレなやつなので、環境依存が極小であり、どのバージョンでも動くよ。バグがあったら教えてくださいな。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Ultimate Debian DatabaseのBug search Cleaner viewから。
 xfce4関連パッケージがメンテナアドレスがaliothの消滅に伴う無効化されたもので、experimentalでは直ってるというしょーもない状態だったので状況を調査。  どうやら4.13というupstreamではdevelopment releaseな奴でアップデートしたからunstableに放り込むのがためらわれてるようだ fedoraとxubuntuはそれでも4.13リリースをぶち込んだ模様。 というのを踏まえて「どーする？」という質問を投げた→「わかってる、4.14がリリースされたらそれを入れる」という回答。んーしばらくは放置か…。  uglifyjsのFTBFS、experimentalでは直ってるよ、という話  semver（セマンティックバージョニング）でわかるように大幅に変更されてるから、依存関係で不具合でるんじゃね？という理由でexperimentalに隔離されているようだ では、ということでお手軽にapr-rdependesで依存パッケージの確認 emscriptenは内部に古い古いuglifyjs持ってるみたい… lavaはソース落としてみたけど、バージョン指定の情報は特に無し。 node-grunt-contrib-uglifyは新しいバージョンならサポートしてる node-uglifyjs-webpack-pluginも新しいバージョンならサポートしてる ruby-uglifierも新しいバージョンならサポートしている というのを踏まえると、node-grunt-contrib-uglify、node-uglifyjs-webpack-plugin、ruby-uglifierを最新バージョンにしてexperimentalに上げる、がいいのかな。    powermockがJava9ではビルドできないけど、新しいupstreamバージョンならOKよ、という話  やってみようとしたらビルドシステムからまるっと変わっていて（maven→gradle）、どうしようかな、というところ。gradle全然使ったこと無いのよね… Debian Wikiのページにあった。gradle-debian-helperパッケージをBuild-Dependsに加えて、debian/rulesでdh $@ -with buildsystem=gradle&amp;hellip;って間違ってるやん--buildsystem=gradleだよね…。   * What went wrong: A problem occurred configuring root project &#39;powermock&#39;. &amp;gt; Could not resolve all files for configuration &#39;:classpath&#39;. &amp;gt; Could not resolve org.springframework.build.gradle:propdeps-plugin:0.0.7. Required by: project : &amp;gt; No cached version of org.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ruby-netrcパッケージのバグのtriage。どうもテストケースがbuilddだと問題になるようだ（これは後に間違いだと気付く）。assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_pathが以下のような結果になる。
1) Failure: TestNetrc#test_missing_environment [/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/test/test_netrc.rb:203]: --- expected +++ actual @@ -1,2 +1 @@ -# encoding: ASCII-8BIT -&amp;quot;/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/.netrc&amp;quot; +&amp;quot;/build/.netrc&amp;quot;  &amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;なんて変わった値が放り込まれてしまっている?…と思ったら、これは「builddでのログ出力で置き換えてるだけ」なのか。手元でビルドする時はcowbuilderでやってしまっていたので、sbuild環境を用意するのにも時間が&amp;hellip;あれ？sbuildでも普通にビルドできちゃった。というか、builddでも以前にビルド自体は出来てるのか…。はてな？
バグレポートを再度よく読み、テスト部分を再確認。
def test_missing_environment nil_home = nil ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;] assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_path ensure ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;] end  default_pathでgrep…。
def self.default_path File.join(ENV[&#39;NETRC&#39;] || home_path, netrc_filename) end  あー、これだ。NETRCが存在しない場合にhome_path、つまりは上記のエラーになる環境では/buildが指定されてるのにもかかわらず、ビルドをしているDir.pwdは別、ということだろうな。さて、どういうふうにして回避するかね…
p nil_home p ENV[&amp;quot;HOME&amp;quot;] p Netrc.home_path  とすると
&amp;quot;/home/henrich&amp;quot; nil &amp;quot;/build/ruby-netrc-0.11.0&amp;quot;  が返る。あれ？予想と違う。home_pathは/build/ruby-netrc-0.11.0なのか。ENV[&amp;quot;HOME&amp;quot;]がnilであっても問題なし、ということを言いたいとすれば以下のようにするのが良さそう
--- a/test/test_netrc.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ubuntu-keyringパッケージの変更の続き。build時にもファイルチェックをするようにしたり。shellscriptではtempdir=`mktemp -d`のようにしてtempdirを指定したのだけど、makeでは$$tempdirが空になるので、$(CURDIR)/debian/tmp 決め打ちで逃げた…どうやるのがいいんでしょうねぇ？
autopkgtest実施時にパッケージの分割・リネームの結果、パッケージリポジトリに該当のパッケージがなくてパッケージを引っ張ってこようとしてエラーとなるという予想外のエラー。気付くまでにまたしても時間を要した。とりあえずsudo cowbuilder --login --inputfile a.deb --inputfile b.deb --save-after-execとしてchroot環境に入りapt install /buildd/a.deb /buildd/b.debなどとしてローカル環境に加えて様子見→エラー解消。やれやれ。しかし、これを失念してその後でpiupartsでパッケージチェックしたらdebconf関連ファイルがそのまま残ってるぞ、というエラーになって苦悶した（sudo cowbuilder --createしなおして対処）。
 パッケージを分割した インストールするkeyringをUbuntuのパッケージを参考にして変更した debconfで質問される /etc/apt/trusted.gpg.d にsymlinkを張るkeyringをUbuntuのパッケージを参考に調整した autopkgtestをまともなものにした build時にもautopkgtest相当が動作するようにした  今回の変更はこんな感じか。パッケージ分割で新しいバイナリパッケージが増えるからNEW queue待ちに。どれだけかかるのかな。。
そしてアップロード後もエラーを踏む。
Source-only uploads to NEW are not allowed.  なんと、そうだったのか。最近はarch=allパッケージとかも手元でビルドしたバイナリではなくbuilddでビルドしたものを、と思ってgit-buildpackageのオプションで--git-pbuilder-options=&amp;quot;--source-only-changes&amp;quot;などとしていたのが仇に。
 淡々とjcodingsパッケージをアップデート。 grcompilerに投稿されてたパッチをマージ。自分の作った地雷を踏むという失態を。  upstreamが4.3を出してるのだけど、これをマージした所ビルドも通らない代物だったのでそのまま放置してたのを忘れてパッチを当ててビルドが通らないものとして悩んでしまった。一旦debian/4.2ブランチを作ってこっちに。 で、全部終わってpushしようとしたらrejectされる…って他のメンテナが変更を加えてた。変更をgit format-patchして一旦逃してから全削除→git cloneして当て直し。そしてメンテナの作業ミスを見つけて直すなども。やれやれ。    </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ubuntu-keyringパッケージの変更の続き。Ubuntu側と内容を合わせる形に変更で、パッケージを増やしたり。.installファイルの指定が微妙でインストールされるファイルが被ってしまう問題、[0-9]*で数字だけ指定されるかと思ったら、そうでなかった。。。
keyrings/ubuntu-keyring-[0-9]*[!a-z]-archive.gpg usr/share/keyrings/  というようにした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 先日のMerge Requestに「amd64 specificで指定してるけど、これi386でも動くんじゃない？」というコメントがメンテナから来たのでx86指定に変更した→マージされました。 昨日のruby-loofahパッケージの更新で脆弱性修正したのだが、Debian9 &amp;ldquo;stretch&amp;rdquo;では変更をbackportしないといけない（まぁ、Debian Security Advisoryを出すほどでもない＝no-dsaと見なされる可能性もあるけど）。根本的な変更はword１個消すだけ＋XSS対策の追加コードだけだったので、作業してセキュリティチームに連絡だけしといた。 なんかKernelで問題が起きてるぞ、これは意図的なのか？というバグレポートを横目で見たので、以前の省電力化Kernel configパッチの影響であり意図的なものだということだけを伝えるreplyをした（changelogにきちんと書いたんだがな…）。その際、大元のFedoraでの変更をしたRHの人にCC入れておいた。 ubuntu-keyringパッケージを最新に更新。もうちょっと待とうかとも思ったのだけど、testが壊れたものをアップロードしてたのと前のアップロードの鍵はチェックでfailする謎の状態だったので。  次はUbuntu側とパッケージ名を合わせる変更を入れ込むかね…   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Debian10 &amp;ldquo;buster&amp;rdquo;リリースの障害となるRelease Criticalバグ一覧から簡単に直せそうなのを探して作業。
 ruby-slimパッケージ、New upstream version導入でFTBFS修正 ruby-sinatra-contribパッケージ、New upstream version導入でFTBFS修正 ruby-loofahパッケージ、New upstream version導入でCVE修正  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>１文字でFTBFSが直せるやつだったのでやっといた</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>たまたまbug reportを見かけてmerge request作ったほうが話が早い奴だと思ったのでやっといた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debian-installerのコンポーネントの一つ、partman-lvmでのバグ修正が含まれたパッケージがようやくアップロードされた。
もう一つ、重要なコンポーネントのdebootstrapの昨日の変更だけど、リリースマネージャーが難色を示しているのでamd64以外でもチェックすることに。
 手元の放置してたBBBを設定、参考ページを元に初期化し直し stretchベースのイメージをSDカードに。ちなみにxz圧縮したままで展開せずに書き込めるのでGNOMEなかなか優秀である。 ２つ前のバージョン（1.0.110~bpo9+1）のがstretch-backportsに入ってるので、そちらをインストールして stretch / buster / sid のchroot環境を作る。あとは各環境で dpkg --get-selections &amp;gt; distro.txt のようにしてパッケージ一覧を作成。次にunstableから debootstrap 1.0.112 を入れて同じことを繰り返し。この後で diff をとってそれぞれのchrootで違いが出てるのかどうかをチェックする、という流れ。しかし、SDカードへの書き込みは遅く、マシンも非力なためにめっちゃ時間が…  ちなみにBBB＝armhfアーキテクチャでも特に変化は見られませんでした。そりゃそうだ、と思うのですが…  あとはarm64アーキテクチャであるdebian.orgのporterboxマシンにsshログインしたものの、password設定わからず（どうなってるんだっけ？）sudo出来なかったのでこちらは明日以降で…  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debootstrapをアップデート。Mr.FAIのハックによってスピードが格段に速くなった。一応、前のバージョンと比較して取得パッケージの差異が無いのは確認済みだが、なんかregressionがあるのも嫌なので Planet Debian にも載ってるblogで告知もしておいた。</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>アップロードがrejectされてたので
$ dcut dm --uid 0x9394F354891D7E07 --allow fonts-mmcedar Uploading commands file to ftp.upload.debian.org (incoming: /pub/UploadQueue/) Picking DM Youhei SASAKI &amp;lt;uwabami@gfd-dennou.org&amp;gt; with fingerprint 66A4EA704FE240558D6AC2E69394F354891D7E07 Uploading henrich-1545485367.dak-commands to ftp-master  として佐々木さんのDM uploadを設定しておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>作業途中で夏から放置してたubuntu-keyringパッケージをアップロード。debconfを使ってデフォルトではtrusted GPG keyringとしては扱わないように変更。
さらにnew upstream release対応を手元で作成。Ubuntuでのrulesを見るとGPGファイルのチェックをしてたので、それを参考にしてautopkgtestを追加。いろいろGPGのオプションを指定する必要があった。
 --trusted-key &amp;quot;$trusted_keyid&amp;quot; のようにして署名鍵を信頼しないとエラーになる。通常なら自分のtrustdbに追加されてる感じだけど、テスト環境にはそんなのはないし、fetchするのもネット環境必須になってしまうので。もう一つの解としてはローカルに落としておく、だけど、それは大仰かな。 --no-auto-check-trustdb を付けないとtrustdbのチェックにやたら時間がかかるので  先日、camlimagesパッケージの変更をmerge requestしたのだけど、最小なテスト作っても意図通りにならなかったな、ということだけ覚えていたのでメモしておく。何をどうやったのか、は思い出したら書こう…
fonts-kanjistrokeordersパッケージをアップデート
久々にinstallation guide訳を更新。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> tdiary-contrib の tdiary-mode が Release Critical bug が出ていたのが解消できてないのをメーリングリストに投げたのだけど、実は依存パッケージ起因で tdiary-mode 悪くなかったという。直してもらってめでたしめでたし、なのだが、さらに elpa の管理下にしてもらうといいなーと言ったら佐々木さんがパッチ書いてくれて更新してくれた。言ってみるもんだね。 bundlerの git ls-files -z が何故使われるのか？という疑問。「git管理下にないファイルを含めないため」という理由では？という意見を頂いた。うーん、そうするとupstreamでのDirで置き換えは厳しいか…。かと言ってgitを使うのもsourceパッケージを展開してのautopkgtestではエラーになるよね…地道に対応するしか無い？それは負けな気がする…。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 水野さんのsilversearcher-agパッケージをアップロードした。  あわせてsalsa.debian.orgにリポジトリを追加し、権限を付与した さらにsilversearcher-ag-elも追加  birdfontパッケージをアップデートした  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-rspec-instafailパッケージをアップデートした ruby-childprocessパッケージをアップデートした twitterで不具合話を拾ったので、fonts-unfonts-coreパッケージをアップデートした  fontforgeコマンドの指定で Open(&amp;quot;UnDinaruLight.ttf&amp;quot;) のようにくくってやらないとエラーになることに気付くまでに時間を要してしまった…。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ruby-arubaパッケージをアップデートした。
autopkgtestが debian/control での Testsuite: autopkgtest-pkg-ruby 行を起点として実施される（実際は debian/ruby-tests.rake ファイルが実行されるのかな？）のだけど、この際に gemspec ファイルの中身が実行される。ところがここで git コマンドを使ってファイルの有無を確認するという形になってしまっていて、git への依存関係がないのでコケるという悲しい状態だった。
s.files = `git ls-files`.split(&amp;quot;\n&amp;quot;) s.test_files = `git ls-files -- {spec,features}/*`.split(&amp;quot;\n&amp;quot;) s.executables = `git ls-files -- bin/*`.split(&amp;quot;\n&amp;quot;).map{ |f| File.basename(f) }  しかもどうやらこれはbundlerの雛形がそうなってるという…何なんだRuby。daiさんに Dir 使うというのを教えてもらってパッチを作って対処、Bug#910953をクローズ。
diff --git a/aruba.gemspec b/aruba.gemspec index c6ac3e7..1581e98 100644 --- a/aruba.gemspec +++ b/aruba.gemspec @@ -40,9 +40,9 @@ With aruba &amp;gt;= 1.0 there will be breaking changes. Make sure to read https://gith EOS end - s.files = `git ls-files`.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> [jcodings]()と[jruby-joni]()のアップデート。jcodingsではメンテナアドレスを戻した際に書き間違えるというポカをやらかして、慌てて再アップロードした。jruby-joniはアップロード後にさらにupstreamが新しいバージョンを出しているようだったので、こちらは後日対処予定。 os-autoinst、arm* やら mips* などでテストがコケるのだが何故だろう？と思って手元のBBBでテストしたが、qemuを起動している時にメモリサイズが足らなくてqemuが立ち上がらずにテストが実行できずにエラーになってしまった…builddの方は問題なく動作しているので、手元での問題。ログでwgetがらみのエラーが出てたところがあったので、build-dependsに追加してみたが、はてさて。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>依頼を受けたので
$ dcut dm --uid 0xD22C1A883455D448 --allow fcitx-dbus-status fcitx-imlist gntp-send groonga growl-for-linux hal-flash libsylph sylfilter sylph-searcher sylpheed groonga-normalizer-mysql  として林さんのDM uploadを設定しておいた。</description>
    </item>
    
    <item>
      <title>HP Elitebook 830 G5で苦しむ</title>
      <link>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</guid>
      <description>debian-installerが何をやっても画面がブランクになってしまってDebianがインストールできないという。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontパッケージ、kfreebsd-i386とkfreebsd-amd64で同じエラー…。  rm debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf rm: cannot remove &#39;debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf&#39;: No such file or directory make[1]: *** [debian/rules:20: override_dh_auto_install] Error 1  なぜエラーになるのか？ debian/rules をちょっと直して様子見するか？…と思ったが、既にdebian/patchesで削ったのを準備済みだったのでアップロードした
 vmdk-stream-converter の tag push を忘れていた… libsql-splitstatement-perl を更新 libdbix-class-optimisticlocking-perl を更新 libdbix-class-schema-config-perl は Perlのバージョンアップに伴ってだろうか、モジュールが欠けてたので追加。  $ cat debian/upstream/metadata --- Archive: CPAN Contact: Brian Phillips &amp;lt;bphillips@cpan.org&amp;gt; Name: DBIx-Class-OptimisticLocking Repository: http://github.com/brianphillips/dbix-class-optimisticlocking  debian/upstream/metadata はこういうのを書くのかぁ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>os-autoinstパッケージを放置していたので、アップデート作業を実施。
 upstreamをpullしてdebian/sidブランチにmerge ビルド…するも、testでエラーが出る。しかもランダム。どうも test が serial に実施される前提で書かれていて、ある test での input file が別の test でも使われてたりする＆その test 実施後に削除されたりするので、順序によっては input file が存在しない、ということでエラーになったりするようだ。仕方がないので --no-parallel オプションを dh_auto_test につけて make -j1 で実行されるようにする それでも 02-test_ocr.t だけがコケ続けたりする（上記の際にはごくごく稀にだが成功したりする…）。t/02-test_ocr.t.log を見てみる…。  FAIL: 02-test_ocr.t =================== Use of uninitialized value in index at ../needle.pm line 44. Use of uninitialized value $bmwqemu::vars{&amp;quot;PRJDIR&amp;quot;} in addition (+) at ../needle.pm line 45. [2018-09-24T07:08:55.0584 UTC] [debug] MATCH(bootmenu-ocr.ref:1.00) Tesseract Open Source OCR Engine v4.0.0-beta.4-50-g07acc with Leptonica Warning. Invalid resolution 0 dpi.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> vmdk-stream-converter が、aliothを指したままだったのでとりあえず更新。python2依存なんだよね、patchはあるのでupstreamが対応してくれないものか。 sphere はupstreamが開発停止＆VMWare自体がライブラリを出していてそちらは既にDebianにあるのでそちらを推す格好で削除依頼。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> jcodingsが何故か細かくバージョンアップが繰り返されたので追従。1.0.34が&amp;ndash;deleyedでまだ入ってなかったので、それが入ってからになるように調整。 jruby-joniも同様。patchのrefreshが面倒くさい。最新のjcodings依存になっているようなので、ビルドはまだ。  </description>
    </item>
    
  </channel>
</rss>