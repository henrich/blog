<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BTS on Forget me not...</title>
    <link>https://henrich.github.io/blog/tags/bts/</link>
    <description>Recent content in BTS on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Sat, 23 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://henrich.github.io/blog/tags/bts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今回はubuntu-keyringパッケージを題材に「full freeze期間に入ってしまったが、unstableにあるパッケージをリリース対象＝testingに入れたい」場合の手順をメモしてみました。
まず、testingにあるバージョンとunstableにあるバージョンの差分（diff）を生成します。今だとgit diffでも良さそうな気はするのですが、慣例的にはソースパッケージに対してdebdiffを使って作ります。ソースパッケージをdgetコマンドで取得し、.dscファイルに対してdebdiffコマンドを実行しています。ソースパッケージのURLはdistro trackerからコピペしていますが、別のやり方もあるでしょう。
$ dget http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-4.dsc \ http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-5.dsc $ debdiff ubuntu-keyring_2018.09.18.1-4.dsc ubuntu-keyring_2018.09.18.1-5.dsc &amp;gt; ubuntu-keyring.diff  diffが出来たので、これを元にunblockリクエストをバグ登録します。ツールとしてはreportbugコマンドを使うとウィザード形式で行ってくれるので間違いがなくて楽です。reportbugはreportbug &amp;lt;package&amp;gt;という形でパッケージを指定してバグ登録するのですが、今回のような場合はリリース関連の調整をトラッキングするための疑似パッケージ(psuedo package)であるrelease.debian.orgを指定します。
$ reportbug release.debian.org Detected character set: UTF-8 Please change your locale if this is incorrect. Using &#39;Hideki Yamane &amp;lt;henrich@debian.org&amp;gt;&#39; as your from address. Will send report to Debian (per lsb_release). What sort of request is this? (If none of these things mean anything to you, or you are trying to report a bug in an existing package, please press Enter to exit reportbug.</description>
    </item>
    
    <item>
      <title>proposed-updatesリポジトリを指定する際にはstableなのかコードネームなのか</title>
      <link>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</guid>
      <description>proposed-updatesリポジトリにパッケージをアップロードする際、 changelogのdistribution名を何にするのが良いのか？とふと思ったので、調べてみた。debian-releaseメーリングリストではstable派、jessie派が混ざっていたが、はて？この前まではstable-proposed-updatesが推奨じゃなかったのか？
疑問が晴れなかったのでdebian-develに質問したら「jessieとかって書くほうがいいんじゃない？」という示唆が。ふむふむ。でも「dchだとワーニング出るよね？」という指摘も。だよね。「んならバグファイルすれば？」というreplyがついていたので、そっかーと思って登録しておいた。Bug#789587です。
しかし、jessie-proposed-updatesとかはダメなのかな？という新たな疑問が出てきてたので、それも投稿してみた。</description>
    </item>
    
    <item>
      <title>twitter-textパッケージとか</title>
      <link>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</guid>
      <description>ruby-twitter-textのここ暫くのアップデートで、バージョン謎の「+conformance」が追加されている？と中身を見たらtest用に別のソースからのコードが必要になっているのでそれを放り込んでいるらしい。さらによくよく見ると、upstreamでは複数のtwitter-text-*パッケージが単一のtwitter-textにまとめられていた。 これはtwitter-textパッケージから色々生成するほうがいいよね、ということでTodoをバグとして登録しておくことにした。
あとはjcodingsをアップデートして放り込みなど。</description>
    </item>
    
    <item>
      <title>bash-completionとか</title>
      <link>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</guid>
      <description>ほぼ寝込んでいたので、dcut のbash completionをコピペで作って投げただけです。</description>
    </item>
    
    <item>
      <title>os-autoinst</title>
      <link>https://henrich.github.io/blog/2015/05/31/os-autoinst/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/os-autoinst/</guid>
      <description>ITPして2年ぐらい放置していたos-autoinstが最近また気になったのでもう一度作業再開。手元ではパッケージができて動いたところまでは確認したので、RFPになっていたのをITPに戻しました。
ただ、openSUSEパッケージとFedoraパッケージとの差異を確認して吸収していかなければならないのと、そのままだとコマンドがエラーになっちゃってるのがあるので、その点を修正しなければいけないですな。
あと、実際に放り込むとしたら、ライセンスは明確なんだけど著作権保持者が不明なのでissue作っておきました。</description>
    </item>
    
    <item>
      <title>まだまだdevelopers-reference</title>
      <link>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</guid>
      <description>相変わらずdevelopers-referenceにちょっかいを出している。
 Bug#172892は既にCVSの時代じゃないだろう、ということでwontfixタグを勝手につけておいた。 Bug#540975は直っていたので閉じておいた。 Bug#544135とBug#604193についてはパッチにコメントをした。  </description>
    </item>
    
    <item>
      <title>Hyper-Vサポートまわりとか</title>
      <link>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</guid>
      <description>色々と便宜を図ってもらっているので、恩返ししないとなーと。LIS(Linux Integration Srevices)というのは、見ていくとこんな感じかな * カーネル内のドライバ * カーネルのソースに含まれているtools/hv内のデーモン
ドライバについては、Jessieの3.16のに4.0ベースのとかをそのままbackportして大丈夫なのかな。ビルドできれば影響範囲はhvドライバのみに収まるような気もする。とりあえず、今のカーネルのをそのまま使うでも使えるっぽい。
デーモンについてはこちらにまとめられているが、RHEL/Fedora系統だとhyperv-daemonsメタパッケージに依存している各パッケージで提供しているようだ（はて、デーモンごとにパッケージが細分化されていて、なぜかライセンスも別パッケージになってる…？）。Ubuntuはバージョンごとに色々違うようだ。さて、どうするかな…と思ったが、hyperv-daemonsパッケージでいいかな、と。あとはsystemdサービスをFedoraからパチってきた。それから調整、っと。。。
dh-systemdは以下の理由から使わない方向で、installファイルでコピーするだけにした * そもそものパッケージの構成が複雑でdh使ってないので dh $@ &amp;ndash;with systemd が指定できない * パッケージ名とサービス名が違う（サービスが３つもある）
途中までで、とりあえず無くならないようにパッチを投げておく。
あとはdescriptionをまともにする
実際にHyper-V上のDebianで動作を確認する…ってどうやるんだ？Azureでいいか。
Azureで仮想マシンを作る…ってそのままだとギャラリーにはDebianイメージ無いので、VMDepotという ここで有志が作っているイメージを使わせてもらう。とはいえ、どの程度の信頼性が置けるものかというものはあるけども。 ログインしたらshellが/bin/shだった。chshして、bash-completion入れて、upgradeしてrebootして再度。。。って妙にrebootに時間がかかるな。繋がらない？
sudo systemctl start Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory  あれ。service見当たらないな…手動で起動した。これはパッケージを直す必要があるなぁ。 でも、３つのサービスのうち、一つが起動しない。ってserviceファイルに/dev/vmbus/hv_fcopyが必要って書いたけど/dev/vmbusが無いんだな。これはHyper-VだとあってAzureだと無いのか、それともVMDepotのJessieがアレで見つからないのか？→CentOSベースのをAzureで立ち上げたが同様に/dev/vmbusは無い。はて、Hyper-VとAzureのは若干違うのか、それとも元にしたFedoraのがアレなのか。皿に検索すると何かへのパッチの投稿が見つかった、がこれだと「/sys/bus/vmbus」って書いてあるけど、こっちが正解じゃない？…いや/dev/vmbusがあるのもあるな。。。</description>
    </item>
    
    <item>
      <title>xmltoがらみとOrphanという言葉の語感</title>
      <link>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</guid>
      <description>upstreamの方にパッチの話をしたら「もうsvnに取り込み済みやっちゅーねん」って返信が。おぉ、tarballしか見てなかった…大変失礼。
あと、メンテナが「手放すよー」ってメールしてた。引き金引いちゃったかなーと思いつつ、健全なことだなとも思う。 個人的にはOrphanという言葉はあまりよくなく、彼のメールにもあった「fresh blood」を使うのが良いんじゃないかな、と感じる。Needs Fresh Blood, 略してNFB。</description>
    </item>
    
    <item>
      <title>developers-referenceへパッチ</title>
      <link>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
      <description>developers-referenceがここの所ずっとアップデートされていない。 せっかくfuzzyを潰したというのに、パッケージのほうが更新されないため、サイトの方は未訳のままに見える。
どうするんだろう？ということでuploaderにメールしたら「I would welcome a patch.」とな。 ああそうかい、やるよやるよ、ということでBTSに溜まっていたパッチをまとめたものと、epubがらみでのエラーの修正やら、wheezy-&amp;gt;jessieに合わせた変更などをgit format-patchで作って送りつけた。
その際にepubの方のエラーでxmltoを見る機会があったのだけど、これもアップデートが3年ぐらい滞ってるし、パッチも放置されてたのでメンテナに「アップデートしたいんだけど」とメールして、忘れないうちにDeleyed queue/15に放り込み。upstreamの方にもBTSにあったパッチを送りつけておいた。やれやれ。</description>
    </item>
    
    <item>
      <title>debcheckoutへパッチ</title>
      <link>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
      <pubDate>Mon, 18 May 2015 01:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
      <description>Debianパッケージのソースを取得したいときには「apt-get source」を使う。 だが、これだと開発用のソースリポジトリで色々変更されている場合にパッチを送られた側が微調整することになるので嬉しくない。できればgit cloneとかsvn coしたものをゲットしてそれを元に作業したほうが良い。
とはいえ、一々「このパッケージのリポジトリはどこにあるんだ？」なんて探しまわりたくはない。そんな時に便利なツール「debcheckout」。これでDebianパッケージ内のdebian/controlファイルで指定されているVcs-* (Vcs-Git や Vcs-Svn) を見てcheckoutができる。
debcheckoutのあとでgit-buildpackageでnew upstream versionをimportしようとすると毎回エラーになる。回避策としては一旦git checkout upstream; git checkout masterするだけなんだけど、鬱陶しいことには変わりない。で、今日思い立ってdebcheckoutの中身を覗いてみた。gitコマンドを発行しているのはsystem()使ってるのね、じゃぁこれで…と対応パッチがかけた。1行。
じゃぁ早速バグレポート…とreportbugを実行したら既存の報告済みバグが大量に出てきた。一応同じ内容が無いか…と確認した所、同じではないがよく似た内容のものがあったので、それにも対応して Bug#739104 へパッチをポストしておいた。</description>
    </item>
    
  </channel>
</rss>