<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bts on Forget me not...</title>
    <link>https://henrich.github.io/blog/tags/bts/</link>
    <description>Recent content in Bts on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <copyright>2015-  Hideki Yamane</copyright>
    <lastBuildDate>Mon, 22 Jun 2015 00:00:00 +0900</lastBuildDate>
    <atom:link href="/blog/tags/bts/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>proposed-updatesリポジトリを指定する際にはstableなのかコードネームなのか</title>
            <link>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</link>
            <pubDate>Mon, 22 Jun 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</guid>
            <description>&lt;p&gt;proposed-updatesリポジトリにパッケージをアップロードする際、
changelogのdistribution名を何にするのが良いのか？とふと思ったので、調べてみた。debian-releaseメーリングリストではstable派、jessie派が混ざっていたが、はて？この前まではstable-proposed-updatesが推奨じゃなかったのか？&lt;/p&gt;

&lt;p&gt;疑問が晴れなかったので&lt;a href=&#34;https://lists.debian.org/debian-devel/2015/06/msg00305.html&#34;&gt;debian-develに質問&lt;/a&gt;したら「jessieとかって書くほうがいいんじゃない？」という示唆が。ふむふむ。でも「dchだとワーニング出るよね？」という指摘も。だよね。「んならバグファイルすれば？」というreplyがついていたので、そっかーと思って&lt;a href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=789587&#34;&gt;登録しておいた。Bug#789587&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;しかし、jessie-proposed-updatesとかはダメなのかな？という新たな疑問が出てきてたので、それも投稿してみた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>twitter-textパッケージとか</title>
            <link>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</link>
            <pubDate>Tue, 02 Jun 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</guid>
            <description>&lt;p&gt;ruby-twitter-textのここ暫くのアップデートで、バージョン謎の「+conformance」が追加されている？と中身を見たらtest用に別のソースからのコードが必要になっているのでそれを放り込んでいるらしい。さらによくよく見ると、upstreamでは複数のtwitter-text-*パッケージが単一のtwitter-textに&lt;a href=&#34;https://github.com/twitter/twitter-text-rb&#34;&gt;まとめられていた&lt;/a&gt;。
これはtwitter-textパッケージから色々生成するほうがいいよね、ということで&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=787688&#34;&gt;Todoをバグとして登録しておく&lt;/a&gt;ことにした。&lt;/p&gt;

&lt;p&gt;あとはjcodingsをアップデートして放り込みなど。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>bash-completionとか</title>
            <link>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</link>
            <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</guid>
            <description>&lt;p&gt;ほぼ寝込んでいたので、&lt;a href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=787321&#34;&gt;dcut のbash completion&lt;/a&gt;をコピペで作って投げただけです。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>os-autoinst</title>
            <link>https://henrich.github.io/blog/2015/05/31/os-autoinst/</link>
            <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/31/os-autoinst/</guid>
            <description>&lt;p&gt;ITPして2年ぐらい放置していたos-autoinstが最近また気になったのでもう一度作業再開。手元ではパッケージができて動いたところまでは確認したので、&lt;a href=&#34;http://bugs.debian.org/690244&#34;&gt;RFPになっていたのをITPに戻しました&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;ただ、openSUSEパッケージとFedoraパッケージとの差異を確認して吸収していかなければならないのと、そのままだとコマンドがエラーになっちゃってるのがあるので、その点を修正しなければいけないですな。&lt;/p&gt;

&lt;p&gt;あと、実際に放り込むとしたら、ライセンスは明確なんだけど著作権保持者が不明なので&lt;a href=&#34;https://github.com/os-autoinst/os-autoinst/issues/261&#34;&gt;issue作っておきました&lt;/a&gt;。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>まだまだdevelopers-reference</title>
            <link>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</link>
            <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</guid>
            <description>&lt;p&gt;相変わらずdevelopers-referenceにちょっかいを出している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=172892&#34;&gt;Bug#172892&lt;/a&gt;は既にCVSの時代じゃないだろう、ということでwontfixタグを勝手につけておいた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=540975&#34;&gt;Bug#540975&lt;/a&gt;は直っていたので閉じておいた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bugs.debian.org/544135&#34;&gt;Bug#544135&lt;/a&gt;と&lt;a href=&#34;http://bugs.debian.org/604193&#34;&gt;Bug#604193&lt;/a&gt;についてはパッチにコメントをした。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>Hyper-Vサポートまわりとか</title>
            <link>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</link>
            <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</guid>
            <description>&lt;p&gt;色々と便宜を図ってもらっているので、恩返ししないとなーと。LIS(Linux Integration Srevices)というのは、見ていくとこんな感じかな
* カーネル内のドライバ
* カーネルのソースに含まれているtools/hv内のデーモン&lt;/p&gt;

&lt;p&gt;ドライバについては、Jessieの3.16のに4.0ベースのとかをそのままbackportして大丈夫なのかな。ビルドできれば影響範囲はhvドライバのみに収まるような気もする。とりあえず、今のカーネルのをそのまま使うでも使えるっぽい。&lt;/p&gt;

&lt;p&gt;デーモンについては&lt;a href=&#34;http://yamanxworld.blogspot.jp/2015/02/hyper-v-and-linuxfreebsd.html&#34;&gt;こちらにまとめられている&lt;/a&gt;が、RHEL/Fedora系統だとhyperv-daemonsメタパッケージに依存している各パッケージで提供しているようだ（はて、デーモンごとにパッケージが細分化されていて、なぜかライセンスも別パッケージになってる…？）。Ubuntuはバージョンごとに色々違うようだ。さて、どうするかな…と思ったが、hyperv-daemonsパッケージでいいかな、と。あとはsystemdサービスをFedoraからパチってきた。それから調整、っと。。。&lt;/p&gt;

&lt;p&gt;dh-systemdは以下の理由から使わない方向で、installファイルでコピーするだけにした
* そもそものパッケージの構成が複雑でdh使ってないので dh $@ &amp;ndash;with systemd が指定できない
* パッケージ名とサービス名が違う（サービスが３つもある）&lt;/p&gt;

&lt;p&gt;途中までで、とりあえず&lt;a href=&#34;bugs.debian.org/cgi-bin/bugreport.cgi?bug=782761&#34;&gt;無くならないようにパッチを投げておく&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;あとはdescriptionをまともにする&lt;/p&gt;

&lt;p&gt;実際にHyper-V上のDebianで動作を確認する…ってどうやるんだ？Azureでいいか。&lt;/p&gt;

&lt;p&gt;Azureで仮想マシンを作る…ってそのままだとギャラリーにはDebianイメージ無いので、VMDepotという
ここで有志が作っているイメージを使わせてもらう。とはいえ、どの程度の信頼性が置けるものかというものはあるけども。
ログインしたらshellが/bin/shだった。chshして、bash-completion入れて、upgradeしてrebootして再度。。。って妙にrebootに時間がかかるな。繋がらない？&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl start Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
Failed to get D-Bus connection: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あれ。service見当たらないな…手動で起動した。これはパッケージを直す必要があるなぁ。
でも、３つのサービスのうち、一つが起動しない。ってserviceファイルに/dev/vmbus/hv_fcopyが必要って書いたけど/dev/vmbusが無いんだな。これはHyper-VだとあってAzureだと無いのか、それともVMDepotのJessieがアレで見つからないのか？→CentOSベースのをAzureで立ち上げたが同様に/dev/vmbusは無い。はて、Hyper-VとAzureのは若干違うのか、それとも元にしたFedoraのがアレなのか。皿に検索すると&lt;a href=&#34;http://dpdk.org/dev/patchwork/patch/2989/&#34;&gt;何かへのパッチの投稿&lt;/a&gt;が見つかった、がこれだと「/sys/bus/vmbus」って書いてあるけど、こっちが正解じゃない？…いや&lt;a href=&#34;http://www.serverphorums.com/read.php?12,1049452&#34;&gt;/dev/vmbusがある&lt;/a&gt;のもあるな。。。&lt;/p&gt;

&lt;p&gt;README.Debianも追加したほうが良いかな？こんな感じで…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;If you want to change screen resolution, please add &amp;quot;video=hyperv_fb:vertical x horizontal&amp;quot; to GRUB_CMDLINE_LINUX in /etc/default/grub and run update-grub
e.g. GRUB_CMDLINE_LINUX=&amp;quot;video=hyperv_fb:1280x1024&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>xmltoがらみとOrphanという言葉の語感</title>
            <link>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</link>
            <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</guid>
            <description>&lt;p&gt;upstreamの方にパッチの話をしたら「もう&lt;a href=&#34;https://fedorahosted.org/xmlto/changeset/76&#34;&gt;svn&lt;/a&gt;に取り込み済みやっちゅーねん」って返信が。おぉ、tarballしか見てなかった…大変失礼。&lt;/p&gt;

&lt;p&gt;あと、メンテナが「手放すよー」ってメールしてた。引き金引いちゃったかなーと思いつつ、健全なことだなとも思う。
個人的にはOrphanという言葉はあまりよくなく、彼のメールにもあった「fresh blood」を使うのが良いんじゃないかな、と感じる。Needs Fresh Blood, 略してNFB。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>developers-referenceへパッチ</title>
            <link>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
            <pubDate>Thu, 28 May 2015 00:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://www.debian.org/doc/manuals/developers-reference/&#34;&gt;developers-reference&lt;/a&gt;がここの所ずっとアップデートされていない。
せっかくfuzzyを潰したというのに、パッケージのほうが更新されないため、サイトの方は未訳のままに見える。&lt;/p&gt;

&lt;p&gt;どうするんだろう？ということでuploaderにメールしたら「I would welcome a patch.」とな。
ああそうかい、やるよやるよ、ということで&lt;a href=&#34;http://bugs.debian.org/developers-reference&#34;&gt;BTS&lt;/a&gt;に溜まっていたパッチをまとめたものと、epubがらみでのエラーの修正やら、wheezy-&amp;gt;jessieに合わせた変更などをgit format-patchで作って送りつけた。&lt;/p&gt;

&lt;p&gt;その際にepubの方のエラーでxmltoを見る機会があったのだけど、これもアップデートが3年ぐらい滞ってるし、パッチも放置されてたのでメンテナに「アップデートしたいんだけど」とメールして、忘れないうちにDeleyed queue/15に放り込み。upstreamの方にも&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=738629#16&#34;&gt;BTSにあったパッチを送りつけておいた&lt;/a&gt;。やれやれ。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>debcheckoutへパッチ</title>
            <link>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
            <pubDate>Mon, 18 May 2015 01:00:00 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
            <description>&lt;p&gt;Debianパッケージのソースを取得したいときには「apt-get source」を使う。
だが、これだと開発用のソースリポジトリで色々変更されている場合にパッチを送られた側が微調整することになるので嬉しくない。できればgit cloneとかsvn coしたものをゲットしてそれを元に作業したほうが良い。&lt;/p&gt;

&lt;p&gt;とはいえ、一々「このパッケージのリポジトリはどこにあるんだ？」なんて探しまわりたくはない。そんな時に便利なツール「debcheckout」。これでDebianパッケージ内のdebian/controlファイルで指定されているVcs-* (Vcs-Git や Vcs-Svn) を見てcheckoutができる。&lt;/p&gt;

&lt;p&gt;debcheckoutのあとでgit-buildpackageでnew upstream versionをimportしようとすると毎回エラーになる。回避策としては一旦git checkout upstream; git checkout masterするだけなんだけど、鬱陶しいことには変わりない。で、今日思い立って&lt;a href=&#34;http://sources.debian.net/src/devscripts/2.15.4/scripts/debcheckout.pl/&#34;&gt;debcheckoutの中身&lt;/a&gt;を覗いてみた。gitコマンドを発行しているのはsystem()使ってるのね、じゃぁこれで…と対応パッチがかけた。1行。&lt;/p&gt;

&lt;p&gt;じゃぁ早速バグレポート…とreportbugを実行したら既存の報告済みバグが大量に出てきた。一応同じ内容が無いか…と確認した所、同じではないがよく似た内容のものがあったので、それにも対応して
&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=739104#15&#34;&gt;Bug#739104&lt;/a&gt;
へパッチをポストしておいた。&lt;/p&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
