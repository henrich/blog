<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forget me not... on Forget me not...</title>
    <link>https://henrich.github.io/blog/</link>
    <description>Recent content in Forget me not... on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Tue, 26 Jun 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/blog/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>OSSummit Japanでボランティアスタッフした</title>
            <link>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</link>
            <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</guid>
            <description>&lt;p&gt;&lt;sup&gt;6&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;-22で行われた&lt;a href=&#34;https://events.linuxfoundation.org/events/open-source-summit-japan-2018/&#34;&gt;Open Source Summit Japan&lt;/a&gt;でのボランティアスタッフに参加してきました。会場の様子は&lt;a href=&#34;https://www.flickr.com/photos/linuxfoundation/albums/72157670342071148/page1&#34;&gt;公式の写真&lt;/a&gt;（&lt;a href=&#34;https://www.flickr.com/photos/linuxfoundation/albums/72157670342071148/page2&#34;&gt;その２&lt;/a&gt;）で雰囲気をどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linusが「プロダクションで使ってるカーネルが7年前ので、次に乗り換えた時に「必要な機能が無くなってる！」とかいうのやめて。継続的にリリースしてるんだからテスト環境でテストしてよ」っていうのはホントそれ、と思った。とはいえ、Debianの場合だと「リリース」という区切りが無くてテスト環境に投入しないのはあるのじゃないか？という思いもある。やはりbuster~pre-release-2018-06みたいな月で無理やり区切ってでもsnapshotリリースすべきだろうか。どうしたらもっとテストしてもらえるようになるか、を考えたほうがいい。&lt;/li&gt;
&lt;li&gt;CIPは&lt;a href=&#34;https://schd.ws/hosted_files/ossalsjp18/e4/20180620-CIP-OSSJ-v2.1-web.pdf&#34;&gt;Debian LTSに協力が進んでいる&lt;/a&gt;けど、もっとコラボレーションの要素を増やしたいね&amp;hellip;。CIPに関わる人にパッケージングのレクチャーとか？&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ossalsjp18.sched.com/event/EaY5/oss-license-compliance-for-software-developers-not-for-legal-experts-satoru-ueda-sony&#34;&gt;CELFイベントでお会いした方&lt;/a&gt;に挨拶できたのは良かった&lt;/li&gt;
&lt;li&gt;Licenseを考える、というので開発者側のモチベーションをどう引き出すか、という視点は面白いので検討したい。単なる面倒事、と捉えるだけだと「避ける」しか出てこない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ossalsjp18.sched.com/event/Eat7/dandified-way-to-package-management-in-yocto-project-zheng-ruoqin-fujitsu&#34;&gt;DNFを拡張してライセンスとかも表示したりとか&lt;/a&gt;というのは面白かった。aptだとどうだろうか。そもそもバイナリのライセンスがなにか、というのとソースのライセンスがなにか、というのは完全に同一ではないのだけど（複数のソースファイルが違うライセンスの場合とか複雑）。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://schd.ws/hosted_files/ossalsjp18/6a/LTSI-OSSJ2018-final.pdf&#34;&gt;LTS kernelはmainline＋8000コミットぐらいある&lt;/a&gt;というところから考えるに、1コミットするのに5万払うとか考えたら4億の価値があるんだな。。。これを自力でやるとなるとかなり辛い。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>まだdebootstrapいじってる</title>
            <link>https://henrich.github.io/blog/2018/06/26/%E3%81%BE%E3%81%A0debootstrap%E3%81%84%E3%81%98%E3%81%A3%E3%81%A6%E3%82%8B/</link>
            <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/06/26/%E3%81%BE%E3%81%A0debootstrap%E3%81%84%E3%81%98%E3%81%A3%E3%81%A6%E3%82%8B/</guid>
            <description>&lt;p&gt;そういえば、&lt;a href=&#34;https://tracker.debian.org/news/959523/accepted-debootstrap-10100-source-all-into-unstable/&#34;&gt;1.0.100&lt;/a&gt;, &lt;a href=&#34;https://tracker.debian.org/news/962422/accepted-debootstrap-10101-source-all-into-unstable/&#34;&gt;1.0.101&lt;/a&gt;, &lt;a href=&#34;https://tracker.debian.org/news/965045/accepted-debootstrap-10102-source-all-into-unstable/&#34;&gt;1.0.102&lt;/a&gt;, &lt;a href=&#34;https://tracker.debian.org/news/967378/accepted-debootstrap-10103-source-all-into-unstable/&#34;&gt;1.0.103&lt;/a&gt;, [1.0.104]( ) という感じでdebootstrap直したりバグ埋め込んだりしてましたね。&lt;/p&gt;

&lt;p&gt;この中で得た知見&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;systemdのcontainer環境下かどうかは &lt;code&gt;$container&lt;/code&gt; を見ればいい、あるいはsystemdが動作している環境なら &lt;code&gt;/var/run/systemd/container&lt;/code&gt; 見る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dnsmasq&lt;/code&gt; を使うと Proxy DHCP が簡単にできるので、既にLAN内でDHCPサーバーが動いている環境でPXEブートしてみたい、という時に便利（&lt;a href=&#34;https://int128.hatenablog.com/entry/20130101/1357055467&#34;&gt;参考にさせてもらったサイト&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 20 May 2018 12:07:33 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;birdfontがビルド依存しているlibgit2でtransitionが予定されてるから、experimentalに置いたパッケージで試して、というバグ登録がされたので、ビルドテスト。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cowbuilder --create /var/cache/pbuilder/exp --distribution experimental
sudo cowbuilder --build --base /var/cache/pbuilder/exp --distribution experimental --extrapackages &amp;quot;libgit2-dev/experimental libmbedtls-dev/experimental&amp;quot; birdfont_2.21.1+git8ae0c56f-2.dsc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;しかし、dpkg-deb &amp;ndash;info で出来上がったパッケージを見てもlibgit2への依存が見当たらない？&amp;hellip;どうやらどこかでlibgit2への依存が無くなっていたようだ、ということで&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=899040&#34;&gt;依存関係から削除してクローズにした&lt;/a&gt;。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;あとは pkg-nlp-ja なパッケージを tracker.debian.org を使ってメールを送るように書き換え&amp;hellip;なのだけど、それに合わせて諸々の更新をしたためにひたすら作業&amp;hellip;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;chasen&lt;/li&gt;
&lt;li&gt;darts&lt;/li&gt;
&lt;li&gt;mecab&lt;/li&gt;
&lt;li&gt;mecab-jumandic&lt;/li&gt;
&lt;li&gt;mecab-naist-jdic&lt;/li&gt;
&lt;li&gt;naist-jdic&lt;/li&gt;
&lt;li&gt;mecab-ipadic&lt;/li&gt;
&lt;li&gt;unidic-mecab&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;unidic-mecabはnew upstream releaseがあるものの、超巨大なデータのため、なんどかローカルの空き容量が０になってしまうと言う&amp;hellip;まだインポートが終わらない。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;先日、Fedora28の省電力化のネタを見つけてBTSしたのだけど、&lt;a href=&#34;https://www.decadent.org.uk/ben/talks/mdch2018-help-the-kernel-team.pdf&#34;&gt;linuxパッケージメンテナとしてはGitLabのMerge Requestの方がありがたいよ&lt;/a&gt;、と今日やっていたMini DebConfで発表していたのでsalsaでやることにした。&lt;/p&gt;

&lt;p&gt;念の為に元々Fedoraで作業したRed Hatの方に質問メールして「このconfigであってるよね？」と確認したところ、サクッと返信いただき、自信を持って作業を進められた。&lt;/p&gt;

&lt;p&gt;あとは足りなかった所（調子が悪い時に、どうやってオフにするのか）をメンテナに指摘されて、右往左往して探し回って&lt;code&gt;debian/changelog&lt;/code&gt;に追加して完了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;diff --git a/debian/changelog b/debian/changelog
index ace383d75..ffc538849 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -43,6 +43,19 @@ linux (4.17~rc5-1~exp1) UNRELEASED; urgency=medium
   [ Vagrant Cascadian ]
   * [armhf] Update mtd-modules: Replace pxa3xx_nand with marvell_nand.
 
+  [ Hideki Yamane ]
+  * Improve battery life on laptops (Closes: #898629)
+    Thanks to Hans de Goede &amp;lt;hdegoede@redhat.com&amp;gt;
+    - ATA: A new SATA link-powermanagement-policy will be the default on all
+      Intel mobile chipsets. This can be reverted by passing 
+      &amp;quot;ahci.mobile_lpm_policy=0&amp;quot; on the kernel commandline.
+    - sound: Enable Intel HDA codec power-saving by default with a 1 second
+      timeout. This can be overridden by passing &amp;quot;snd_hda_intel.power_save=0&amp;quot;
+      on the kernel commandline (0 is previously default).
+    - BlueTooth: Enable USB autosuspend for Bluetooth USB devices by default.
+      This can be disabled by passing &amp;quot;btusb.enable_autosuspend=n&amp;quot; on the
+      kernel commandline. 
+
  -- Luca Boccassi &amp;lt;bluca@debian.org&amp;gt;  Wed, 02 May 2018 12:59:01 +0100
 
 linux (4.17~rc3-1~exp1) experimental; urgency=medium
diff --git a/debian/config/config b/debian/config/config
index b5183a63f..d9ba69b1f 100644
--- a/debian/config/config
+++ b/debian/config/config
@@ -199,6 +199,7 @@ CONFIG_ATA_ACPI=y
 CONFIG_SATA_ZPODD=y
 CONFIG_SATA_PMP=y
 CONFIG_SATA_AHCI=m
+CONFIG_SATA_MOBILE_LPM_POLICY=3
 # CONFIG_SATA_AHCI_PLATFORM is not set
 # CONFIG_AHCI_CEVA is not set
 # CONFIG_AHCI_QORIQ is not set
@@ -360,6 +361,7 @@ CONFIG_ZRAM=m
 ## file: drivers/bluetooth/Kconfig
 ##
 CONFIG_BT_HCIBTUSB=m
+CONFIG_BT_HCIBTUSB_AUTOSUSPEND=y
 CONFIG_BT_HCIBTUSB_BCM=y
 CONFIG_BT_HCIBTUSB_RTL=y
 CONFIG_BT_HCIBTSDIO=m
@@ -7329,7 +7331,8 @@ CONFIG_SND_HDA_CODEC_CA0132_DSP=y
 CONFIG_SND_HDA_CODEC_CMEDIA=y
 CONFIG_SND_HDA_CODEC_SI3054=y
 CONFIG_SND_HDA_GENERIC=y
-CONFIG_SND_HDA_POWER_SAVE_DEFAULT=0
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=1
+CONFIG_SND_HDA_POWER_SAVE=y
 
 ##
 ## file: sound/pcmcia/Kconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;無事マージされました。コードが書けなくたって、こんなやり方もあるんだぜ、と。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 19 May 2018 22:38:44 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;OSDN側の仕様変更に追随。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;最新バージョンがブラウザ（Javascript）でしか表示されなくなって、uscanで取得できなくなった&lt;/li&gt;
&lt;li&gt;要望を出した&lt;/li&gt;
&lt;li&gt;対応としてRSS経由での取得が実装された&lt;/li&gt;
&lt;li&gt;&amp;hellip;ということで debian/watch ファイルを書き換えて取得できるように&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;opts=&amp;quot;uversionmangle=s/-beta/~beta/;s/-rc/~rc/;s/-preview/~preview/, \
pagemangle=s%&amp;lt;osdn:file url=&amp;quot;([^&amp;lt;]*)&amp;lt;/osdn:file&amp;gt;%&amp;lt;a href=&amp;quot;$1&amp;quot;&amp;gt;$1&amp;lt;/a&amp;gt;%g, \
downloadurlmangle=s%projects/sawarabi-fonts/downloads%frs/redir\.php?m=iij&amp;amp;f=sawarabi-fonts%g;s/xz\//xz/&amp;quot; \
https://osdn.net/projects/sawarabi-fonts/releases/rss \
 https://osdn.net/projects/sawarabi-fonts/downloads/.*/sawarabi-mincho@ANY_VERSION@@ARCHIVE_EXT@/ debian uupdate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;自分でも何やってるか、よくわからなくなる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://osdn.net/projects/sawarabi-fonts/releases/rss&#34;&gt;https://osdn.net/projects/sawarabi-fonts/releases/rss&lt;/a&gt; が取得元のファイルなのだけど、RSSでxmlなのでHTMLではない。&lt;/li&gt;
&lt;li&gt;で、uscan は &lt;code&gt;&amp;lt;a href=&amp;quot;foobar.html&amp;quot;&amp;lt;/a&amp;gt;&lt;/code&gt; のような記述から対象のファイルを探している（これに気付くのにしばらくかかった）&lt;/li&gt;
&lt;li&gt;RSSを &lt;code&gt;pagemangle&lt;/code&gt; オプションで無理やり書き換えて&lt;code&gt;a href&lt;/code&gt;を作り出す&lt;/li&gt;
&lt;li&gt;これで最新版のバージョン自体は取得できる&amp;hellip;のだが、osdnはミラーサーバーにリダイレクトするので、取得先がそのページのHTMLになってしまう&lt;/li&gt;
&lt;li&gt;リダイレクト先のURLに&lt;code&gt;downloadurlmangle&lt;/code&gt;オプションで無理やり書き換え。ミラーサーバーはIIJ決め打ちになっちゃうが仕方がない。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここまでやって、とりあえずfonts-sawarabi-michonパッケージのアップデートをした。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;debootstrapのregressionな部分を直す提案&amp;hellip;とはいっても、先方のコードをそのまま頂いて調整するだけなのだけど。
&lt;code&gt;set -- -O &amp;quot;$dest&amp;quot; &amp;quot;$from&amp;quot; &amp;quot;$@&amp;quot;&lt;/code&gt; は $@ に -O $dest $from を追加している。shellscriptはこんなふうにも指定できるのね。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>Fedora28のリリースを見て。</title>
            <link>https://henrich.github.io/blog/2018/05/05/fedora28%E3%81%AE%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%82%92%E8%A6%8B%E3%81%A6/</link>
            <pubDate>Sat, 05 May 2018 14:40:09 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/05/fedora28%E3%81%AE%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%82%92%E8%A6%8B%E3%81%A6/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://docs.fedoraproject.org/f28/release-notes/&#34;&gt;Fedora28のリリースノート&lt;/a&gt;をつらつら眺めたら、&lt;a href=&#34;https://docs.fedoraproject.org/f28/release-notes/sysadmin/Security.html&#34;&gt;libcurlのリンクをlibssh2からlibsshに変えたよ&lt;/a&gt;、というのがあった。へぇ、と思ってDebianでlibssh2に依存しているのを探してみた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ grep-dctrl -F Depends libssh2-1 -s Source /var/lib/apt/lists/*_Packages | sort | uniq
Source: curl
Source: gfal2
Source: guacamole-server
Source: libgit2
Source: libpam-sshauth (0.4.1-2)
Source: libssh2
Source: libvirt
Source: mlterm (3.8.4-1)
Source: php-ssh2 (1.1.2+0.13-1)
Source: pylibssh2
Source: qemu
Source: vlc (3.0.2-1)
Source: yuma123
Source: zabbix
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;curl以外にも幾つかある。で、qemuの様子をみてみたが、今の所&lt;a href=&#34;https://lists.gnu.org/archive/html/qemu-devel/2018-01/msg04447.html&#34;&gt;何度か提案パッチを書き直している&lt;/a&gt;ようで簡単にs/libssh2/libssh/すればいいわけでは無いようである。qemuの場合はパフォーマンスが落ちた、という話も出てる。&lt;/p&gt;

&lt;p&gt;ともあれ、curlについてはupstreamが対応済みなのでFedoraがやったのと同じことは簡単にできそう&amp;hellip;ということで&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=897950&#34;&gt;BTSしておいた&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.fedoraproject.org/f28/release-notes/desktop/I18n.html&#34;&gt;Glibc collation update and sync with CLDR&lt;/a&gt;を追いかけると、&lt;a href=&#34;https://sourceware.org/bugzilla/show_bug.cgi?id=14095&#34;&gt;glibc2.28では取り込まれそう&lt;/a&gt;でパッチをDebian側で保持するのも面倒そうだから待ち状態がいいかな。&lt;/li&gt;
&lt;li&gt;Timeの更新は&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=881429&#34;&gt;まだかなー&lt;/a&gt;という感じ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fedoraproject.org/wiki/Changes/ImprovedLaptopBatteryLife&#34;&gt;Laptopのバッテリ時間改善&lt;/a&gt;はカーネル側での変更が4.15で入っていて、どうにかしてポリシーをworkstationでは有効にしている、という感じだろうか？だとするとどうやって対応すればいいのやら。あとでworkstationをセットアップして見るしかないか&amp;hellip;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.fedoraproject.org/f28/release-notes/developers/Development_C.html#libcrypt-replaced-by-libxcrypt-in-glibc&#34;&gt;Libcrypt replaced by libxcrypt in glibc&lt;/a&gt;は、Debianだと&lt;a href=&#34;https://tracker.debian.org/pkg/libxcrypt&#34;&gt;libxcryptがあるけどこれはメンテされてない感じ&lt;/a&gt;&amp;hellip;。うーん。upstreamでの話としては &lt;a href=&#34;https://sourceware.org/ml/libc-alpha/2017-08/msg01257.html&#34;&gt;https://sourceware.org/ml/libc-alpha/2017-08/msg01257.html&lt;/a&gt; で見れるようだ。glibcメンテナにlibxcryptもメンテしてもらうのが良い？&lt;/li&gt;
&lt;li&gt;modularityは流石にDebian側でどうする、というのも難しい問題だからパスで&amp;hellip;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのうち過去のリリースノートも見てみるか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&amp;hellip;とりあえずlibxcryptのパッケージを触ってみた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gbp import-dscs --debsnap libxcrypt
$ cd libxcrypt
$ git checkout upstream
$ rm -r ./*
$ git remote add upstream https://github.com/besser82/libxcrypt.git
$ git pull upstream
$ git pull upstream --allow-unrelated-histories master
(ちょこちょことconflict対応)
$ git commit -av
$ git checkout master
$ cp -arp debian ../ ; rm -r ./*; cp -arp ../debian ./
$ git merge --allow-unrelated-histories v4.0.0 
(ちょこちょことconflict対応)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あとは普通のパッケージング作業。なくさないように&lt;a href=&#34;https://salsa.debian.org/henrich/libxcrypt&#34;&gt;salsaに上げておいた&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;しかし、libxcrypt.soからlibcrypt.soになってるっぽい？いいのかしら&amp;hellip;今だと &lt;code&gt;libc6: /lib/x86_64-linux-gnu/libcrypt.so.1&lt;/code&gt; という感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ apt-file show libxcrypt1
libxcrypt1: /lib/libxcrypt.so.1
libxcrypt1: /lib/libxcrypt.so.1.2.4
(snip)

$ dpkg-deb --contents libxcrypt-dev_4.0.0-1_amd64.deb
(snip)
lrwxrwxrwx root/root         0 2018-05-05 19:20 ./usr/lib/x86_64-linux-gnu/libcrypt.so -&amp;gt; libcrypt.so.1.1.0
lrwxrwxrwx root/root         0 2018-05-05 19:20 ./usr/lib/x86_64-linux-gnu/libowcrypt.a -&amp;gt; libcrypt.a
lrwxrwxrwx root/root         0 2018-05-05 19:20 ./usr/lib/x86_64-linux-gnu/libowcrypt.so -&amp;gt; libcrypt.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fedoraのsrpmを &lt;code&gt;dnf download --source libxcrypt glibc&lt;/code&gt; とかしてみてみると、どうやらある時点でglibc側での生成を止めてlibxcryptを使うようになってるようだ。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Kernelのsrpmを落としてきた。&lt;code&gt;BuildConflicts: rhbuildsys(DiskFree) &amp;lt; 500Mb&lt;/code&gt;  は面白いな、同じことやれるといいな。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Sources for kernel-tools
Source2000: cpupower.service
Source2001: cpupower.config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;名前から関係ありそうなのはこれかなぁ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# See &#39;cpupower help&#39; and cpupower(1) for more info
CPUPOWER_START_OPTS=&amp;quot;frequency-set -g performance&amp;quot;
CPUPOWER_STOP_OPTS=&amp;quot;frequency-set -g ondemand&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[Unit]
Description=Configure CPU power related settings
After=syslog.target

[Service]
Type=oneshot
RemainAfterExit=yes
EnvironmentFile=/etc/sysconfig/cpupower
ExecStart=/usr/bin/cpupower $CPUPOWER_START_OPTS
ExecStop=/usr/bin/cpupower $CPUPOWER_STOP_OPTS

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Debianだと&lt;code&gt;linux-cpupower&lt;/code&gt;パッケージに入っているcpupowerの調整、か。でも違う気がする&amp;hellip;。&lt;/p&gt;

&lt;p&gt;で、再度ちゃんと文章読んでみたら&lt;code&gt;The initial focus of this change is to enable to following 3 hardware power-saving features by default:&lt;/code&gt;って書いてあるやん。あーこれはconfigで有効にするぜ、ってことか。&lt;code&gt;kernel-x86_64.config&lt;/code&gt;を探す。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_SND_HDA_POWER_SAVE_DEFAULT=1
CONFIG_SND_HDA_POWER_SAVE=y

CONFIG_BT_HCIBTUSB_AUTOSUSPEND=y

CONFIG_SATA_MOBILE_LPM_POLICY=3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;それらしいのはこれかなぁ&amp;hellip;これを全て有効にすればF28相当になる？ただし、SATAはリスクが増すし、Bluetoothも一部機種だとregressionが起きるのでパッチが必要なようだ。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>VyOSをもうちょっと眺める</title>
            <link>https://henrich.github.io/blog/2018/05/04/vyos%E3%82%92%E3%82%82%E3%81%86%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E7%9C%BA%E3%82%81%E3%82%8B/</link>
            <pubDate>Fri, 04 May 2018 12:03:23 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/04/vyos%E3%82%92%E3%82%82%E3%81%86%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E7%9C%BA%E3%82%81%E3%82%8B/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://github.com/vyos&#34;&gt;https://github.com/vyos&lt;/a&gt; を眺めてパッケージの一つ &lt;a href=&#34;https://github.com/vyos/net-snmp&#34;&gt;net-snmp のパッケージリポジトリ&lt;/a&gt;を見たのだけど、変更点はdebian/rulesでconfigure option1行足してるだけ。issueが無いので質問も出来ないのだけど、これはdebian側で吸収してもらう検討をしたほうが良いのでは？&lt;/p&gt;

&lt;p&gt;他のパッケージでもdebian/rulesでvyosの開発環境だったらバージョン番号を変更する、というパッチを書いてるだけだったり&amp;hellip;何のためのパッチなのだ？&lt;/p&gt;

&lt;p&gt;これに類することを確認するには&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vyos&#34;&gt;https://github.com/vyos&lt;/a&gt; 以下のリポジトリを全て眺めて、debian/changelogを見てみる？&lt;/li&gt;
&lt;li&gt;とはいえchangelogまともに書いてない場合も多そうだから、export して元のバージョンのパッケージとdiffを作る？&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>VyOSと戯れてみた</title>
            <link>https://henrich.github.io/blog/2018/05/03/vyos%E3%81%A8%E6%88%AF%E3%82%8C%E3%81%A6%E3%81%BF%E3%81%9F/</link>
            <pubDate>Thu, 03 May 2018 11:43:52 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/03/vyos%E3%81%A8%E6%88%AF%E3%82%8C%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
            <description>&lt;p&gt;Note: VyOSの使い方とかは一切書いてません。&lt;/p&gt;

&lt;p&gt;Twitterで&lt;a href=&#34;https://github.com/vyos/vyos-build/blob/current/README.md&#34;&gt;VyOSのビルド説明の最新の場所&lt;/a&gt;を教えてもらったので、それに従って作業&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/vyos/vyos-build.git
$ sudo debootstrap jessie ./jessie-chroot http://debian-mirror.sakura.ne.jp/debian
$ sudo cp -arp vyos-build jessie-chroot/root/
$ sudo chroot jessie-chroot
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# cd root/vyos-build
# ./configure
/usr/bin/env: python3: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;debootstrapで作った最小環境なのでそりゃそうですよね、ということでpython3パッケージを追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# apt install python3
# ./configure 
Checking if packages required for VyOS image build are installed
Missing packages: sudo make live-build pbuilder devscripts python3-pystache python3-git
Missing binaries: 
Build environment check failed, fix the issues and retry
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# apt install sudo make live-build pbuilder devscripts python3-pystache python3-git
Reading package lists... Done
Building dependency tree       
Reading state information... Done
E: Unable to locate package python3-git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あれ。&lt;a href=&#34;https://tracker.debian.org/pkg/python-git&#34;&gt;https://tracker.debian.org/pkg/python-git&lt;/a&gt; によると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;oldstable:  0.3.2~RC1-3
old-bpo:  2.1.1-2~bpo8+1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なので、多分 jessie-backports リポジトリ追加しないとダメなんじゃないだろうか。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# echo &amp;quot;deb http://debian-mirror.sakura.ne.jp/debian jessie-backports main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list
# apt update
# apt install python3
# ./configure 
Checking if packages required for VyOS image build are installed
All dependencies are installed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;問題なく通ったので、isoイメージの作成をやってみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# make iso
Checking build configuration
[2018-05-03 11:39:13] lb clean 
P: Cleaning chroot
Starting VyOS ISO image build
Setting up additional APT entries
Configuring live-build
[2018-05-03 11:39:13] lb config noauto --architectures amd64 --bootappend-live boot=live components hostname=vyos username=live nopersistence noautologin nonetworking union=overlay --linux-flavours amd64-vyos --linux-packages linux-image-4.14.26 --bootloader syslinux --binary-images iso-hybrid --debian-installer false --distribution jessie --iso-application VyOS --iso-publisher root@hp --iso-volume VyOS --debootstrap-options --variant=minbase --exclude=isc-dhcp-client,isc-dhcp-common,ifupdown --include=apt-transport-https --mirror-bootstrap http://deb.debian.org/debian --mirror-chroot http://deb.debian.org/debian --mirror-chroot-security http://deb.debian.org/debian-security --mirror-binary http://deb.debian.org/debian --mirror-binary-security http://deb.debian.org/debian-security --archive-areas main contrib non-free --firmware-chroot true --updates true --security true
P: Updating config tree for a debian/jessie/amd64 system
P: Symlinking hooks...
It&#39;s not like I&#39;m building this specially for you or anything!
[2018-05-03 11:39:13] lb build 
P: live-build 4.0.3
P: Building config tree for a debian/jessie/amd64 system
[2018-05-03 11:39:13] lb bootstrap 
P: Setting up cleanup function
[2018-05-03 11:39:13] lb bootstrap_cache restore
P: Restoring bootstrap stage from cache...
[2018-05-03 11:39:14] lb bootstrap_cdebootstrap 
[2018-05-03 11:39:14] lb bootstrap_debootstrap 
P: Begin bootstrapping system...
P: If the following stage fails, the most likely cause of the problem is with your mirror configuration or a caching proxy.
P: Running debootstrap (download-only)... 
I: Retrieving Release 
I: Retrieving Release.gpg 
I: Checking Release signature
I: Valid Release signature (key id 75DDC3C4A499F1A18CB5F3C8CBF8D6FD518E17E1)
I: Retrieving Packages 
I: Validating Packages 
I: Retrieving Packages 
I: Validating Packages 
I: Retrieving Packages 
I: Validating Packages 
I: Resolving dependencies of required packages...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んん？なんか見たことのある出力&amp;hellip;debootstrap使ってるな&amp;hellip;あ、lb云々とあるから &lt;code&gt;live-build&lt;/code&gt; がdebootstrap呼んでるのね。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[2018-05-03 11:43:13] lb bootstrap_archive-keys 
Ign http://deb.debian.org jessie InRelease
Hit http://deb.debian.org jessie Release.gpg
Hit http://deb.debian.org jessie Release
Get:1 http://deb.debian.org jessie/main amd64 Packages [6789 kB]
Hit http://deb.debian.org jessie/contrib amd64 Packages
Hit http://deb.debian.org jessie/non-free amd64 Packages
Get:2 http://deb.debian.org jessie/contrib Translation-en [38.3 kB]
Get:3 http://deb.debian.org jessie/main Translation-en [4583 kB]
Get:4 http://deb.debian.org jessie/non-free Translation-en [72.1 kB]
Fetched 11.5 MB in 7s (1596 kB/s)
Reading package lists...
[2018-05-03 11:43:21] lb bootstrap_cache save
P: Saving bootstrap stage to cache...
[2018-05-03 11:43:22] lb chroot_devpts install
P: Begin mounting /dev/pts...
[2018-05-03 11:43:22] lb chroot_proc install
P: Begin mounting /proc...
[2018-05-03 11:43:22] lb chroot_selinuxfs install
[2018-05-03 11:43:22] lb chroot_sysfs install
P: Begin mounting /sys...
(snip)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Get:1 http://dev.packages.vyos.net/repositories/current/vyos/ current/main libsnmp-base all 5.7.2.1+vyos2+current1 [230 kB]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なるほど、Jessieでは足りない・変更した部分については&lt;a href=&#34;http://dev.packages.vyos.net/repositories/&#34;&gt;別のリポジトリ&lt;/a&gt;を持ってるのね。あれ、見て回ったら&lt;a href=&#34;http://dev.packages.vyos.net/repositories/current/vyos/pool/main/l/live-boot/&#34;&gt;http://dev.packages.vyos.net/repositories/current/vyos/pool/main/l/live-boot/&lt;/a&gt; とかに特にrevisionも変更されてないパッケージが。何故だろう？&lt;/p&gt;

&lt;p&gt;ビルドが終わってどこにisoが出来たかさっぱりわからぬ。。。あ、&lt;code&gt;build/vyos-1.2.0-rolling+201805031139-amd64.iso&lt;/code&gt; というファイルがあった。これはsymlinkで &lt;code&gt;live-image-amd64.hybrid.iso&lt;/code&gt; を指してる。あと、&lt;code&gt;build/cache/packages.binary&lt;/code&gt; 以下にはdebパッケージが保存されてるな。さらにmake isoしたらこれが使われるのかな、ということで再度実行してみる。。。どうやらそのようだ。&lt;/p&gt;

&lt;p&gt;今日はここまで。
で、&lt;a href=&#34;https://github.com/vyos/vyos-build/pull/17&#34;&gt;https://github.com/vyos/vyos-build/pull/17&lt;/a&gt; に今日触ったところで &lt;code&gt;debootstrap使ったほうがいいな&lt;/code&gt;、というプルリクエストを送っときました。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>どうやってバグレポートしてるか、とか...</title>
            <link>https://henrich.github.io/blog/2018/05/02/%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%90%E3%82%B0%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%82%8B%E3%81%8B%E3%81%A8%E3%81%8B.../</link>
            <pubDate>Wed, 02 May 2018 00:07:27 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/02/%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%90%E3%82%B0%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%82%8B%E3%81%8B%E3%81%A8%E3%81%8B.../</guid>
            <description>&lt;p&gt;URLは非常に単純で &lt;code&gt;https://bugs.debian.org/&amp;lt;package&amp;gt;&lt;/code&gt; とすればバグレポートを参照できる。今回は&lt;a href=&#34;https://bugs.debian.org/git-buildpackage&#34;&gt;https://bugs.debian.org/git-buildpackage&lt;/a&gt; 。&lt;code&gt;querybts git-buildpackage&lt;/code&gt;でも閲覧はできるのだけど、バグレポートが大量にあると行ったり来たりして参照するのはブラウザのほうがやりやすいので&amp;hellip;。&lt;/p&gt;

&lt;p&gt;ソースの取得は &lt;code&gt;apt source &amp;lt;package&amp;gt;&lt;/code&gt; で可能。なのだけど、パッケージ作業をGitで作業してたりすると、まぁHEADに合わせて変更して &lt;code&gt;git format-patch&lt;/code&gt; したpatchファイルを送りつけた方が取り込んでもらいやすいのは間違いないので、Vcsで取得。どこにリポジトリがあってどのVcs使ってるか&amp;hellip;は特に考えること無くdebcheckoutコマンドを使う。&lt;code&gt;debcheckout git-buildpackage&lt;/code&gt; として取得。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ debcheckout git-buildpackage
declared git repository at https://git.sigxcpu.org/cgit/git-buildpackage/ 
git clone https://git.sigxcpu.org/cgit/git-buildpackage/ git-buildpackage ...
Cloning into &#39;git-buildpackage&#39;... 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;としたのだけど、なんで自前のrepoに保持してるのか。超遅い。通常ならsalsa.debian.org配下なので直ぐなのに、10分経っても全然応答が無い&amp;hellip;仕方がないので、今回は&lt;code&gt;apt source git-buildpackage&lt;/code&gt;で取得。&lt;/p&gt;

&lt;p&gt;さて、optionでgrepしたりして&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ grep git-component -r ./
./docs/manpages/gbp-buildpackage.xml:      &amp;lt;arg rep=&#39;repeat&#39;&amp;gt;&amp;lt;option&amp;gt;--git-component=&amp;lt;/option&amp;gt;&amp;lt;replaceable&amp;gt;component&amp;lt;/replaceable&amp;gt;&amp;lt;/arg&amp;gt;
./docs/manpages/gbp-buildpackage.xml:          &amp;lt;term&amp;gt;&amp;lt;option&amp;gt;--git-component=&amp;lt;/option&amp;gt;&amp;lt;replaceable&amp;gt;COMPONENT&amp;lt;/replaceable&amp;gt;
./tests/component/deb/test_buildpackage.py:                            &#39;--git-component=foo&#39;,
./tests/component/deb/test_buildpackage.py:                            &#39;--git-component=foo&#39;,
./tests/component/deb/test_buildpackage.py:                                       &#39;--git-component=foo&#39;])
./tests/component/deb/test_buildpackage.py:                                       &#39;--git-component=foo&#39;,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あれ？全然引っかかってないね。componentで検索し直して、諸々を見てみるとcomp_typeとかで指定されてるようで、これはoptions.comp_typeから取ってる。んで、これはgbp.confで指定してるのか&amp;hellip;じゃぁ、複数のcomp_typeは存在できないね！という感じ。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>gbp buildpackage --git-componentオプションの罠</title>
            <link>https://henrich.github.io/blog/2018/05/01/gbp-buildpackage---git-component%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E7%BD%A0/</link>
            <pubDate>Tue, 01 May 2018 23:40:33 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/05/01/gbp-buildpackage---git-component%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E7%BD%A0/</guid>
            <description>&lt;p&gt;poppler-dataパッケージは、一般的なパッケージと違ってupstream tarballが複数ある構成（multiple upstream tarball）なので、git-buildpackageが使えなかったのだけど、git-buildpackage側での実験的なサポートが追加されていたので思い立って作業。&lt;/p&gt;

&lt;p&gt;まずはGitリポジトリにリリース済みのパッケージをインポートして、salsaにインポート。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gbp import-dscs --debsnap poppler-data
$ git remote add salsa git@salsa.debian.org:debian/poppler-data.git
$ git push salsa --all
$ git push salsa --tags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、manページを参照して実験的な &amp;ndash;git-component オプションの使い方を確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gbp buildpackage --git-pbuilder  --git-pristine-tar --git-ignore-branch --git-component=ai0 --git-component=from-ghostscript
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;対象となるtarballはpoppler-data_0.4.9.orig-from-ghostscript.tar.xzとpoppler-data_0.4.9.orig-ai0.tar.gzとしてpristine-tarブランチにコミットされている&lt;/li&gt;
&lt;li&gt;multiple tarballは orig.tarball-&lt;name&gt;.tar.[g|x]gという形で保持されているので、&lt;name&gt;の部分だけを指定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;というところまでは分かったのだけど、現状ではエラーになる。&lt;del&gt;理由は&lt;code&gt;指定される対象のtarballはtar.gzしか想定していない&lt;/code&gt;ため&lt;/del&gt;&amp;hellip;。なんてこった。（追記：正確には、デフォルトで指定されているcompressionオプション＝gzip以外を見ない。これを変更するにはgbp.confで指定すればいいのだけど、全てのorig.tarballのcompression指定になってしまうので、multiple upstream tarballでcompressionが混在しているパターンの場合は必ずエラーになってしまう&amp;hellip;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gbp buildpackage --git-pbuilder  --git-pristine-tar --git-ignore-branch --git-component=from-ghostscript
(snip)
gbp:error: Error creating poppler-data_0.4.9.orig-from-ghostscript.tar.gz: Pristine-tar couldn&#39;t checkout &amp;quot;poppler-data_0.4.9.orig-from-ghostscript.tar.gz&amp;quot;: fatal: Path &#39;poppler-data_0.4.9.orig-from-ghostscript.tar.gz.delta&#39; does not exist in &#39;refs/heads/pristine-tar&#39;
pristine-tar: git show refs/heads/pristine-tar:poppler-data_0.4.9.orig-from-ghostscript.tar.gz.delta failed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仕方がないので、gbp使わないでリリースしましたよ。えぇ。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>遅々として進まず</title>
            <link>https://henrich.github.io/blog/2018/04/29/%E9%81%85%E3%80%85%E3%81%A8%E3%81%97%E3%81%A6%E9%80%B2%E3%81%BE%E3%81%9A/</link>
            <pubDate>Sun, 29 Apr 2018 22:23:46 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/04/29/%E9%81%85%E3%80%85%E3%81%A8%E3%81%97%E3%81%A6%E9%80%B2%E3%81%BE%E3%81%9A/</guid>
            <description>&lt;p&gt;Samsung SSDに/homeを移そうとコピーを実施したが、一晩経っても10GBぐらいしか進まず。これはいくらなんでも遅すぎる&amp;hellip;ということでファームウェアを更新することを決める。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.samsung.com/semiconductor/minisite/ssd/download/tools/&#34;&gt;http://www.samsung.com/semiconductor/minisite/ssd/download/tools/&lt;/a&gt; にてファームウェアのisoファイルを取得、マウントしてimgファイルを取り出してさらにそれをマウントしてファイルを取り出し、FreeDOSのブータブルUSBメモリにコピーしてファームウェアのアップデートを行った。以前よりはマシになったが、それでも遅い&amp;hellip;。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;古いThinkPad X121eにFedora28Betaを入れたのだが、何故かパスワードが通らなくなっていたので、今度はArchLinuxを入れてみようとする。インストールドキュメントに従ってインストール&amp;hellip;したのだけど、全く起動してこない。何故だ。何度か試したが変わらず。いや、正確には一度だけgrubが起動してくるまでにはなったが、指定されてるUUIDのパーティション見えないよ？というので結局起動せず。&lt;/p&gt;

&lt;p&gt;次にUbuntu18.04 Server版を入れる&amp;hellip;jaistミラーから落としたら中身がdebian-installerで変わってない？途中のpartitionerのところ（47%までは進んだ）で進まなくなってしまったので中断して、改めてUbuntu.comから落としたら、こちらのイメージは独自インストーラー版に変わっていた。こちらを試したかったのよね、シンプルでいい感じですね&amp;hellip;とインストールは特にエラーも無く終わったのだけど、やっぱりoperating system not foundで変わらず。何故だ&amp;hellip;。&lt;/p&gt;

&lt;p&gt;で、Debian9.4のインストーラーでやったら、普通にインストール終わり→起動したので、これにArchを上書きして完了。パーティションテーブルがおかしかったのだろうけど、d-iがなんとかしてくれた、という感じ。&lt;/p&gt;

&lt;p&gt;めも
* d-iのメッセージ、〜のロードは「〜の読み込み」でいい気がする
* あと全体通して読み返してみたい所&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Archはpacstrapとかarch-chrootとか変わったものがあるんだな―という感想。&lt;a href=&#34;https://git.archlinux.org/arch-install-scripts.git/&#34;&gt;https://git.archlinux.org/arch-install-scripts.git/&lt;/a&gt; にスクリプトがあるようだ。debootstrapよりも技巧的。なにか参考にできる部分があると良いな、ということでメモを残す。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;poppler-dataのアップデートが出てた。Fedoraではどうやらpoppler-dataじゃなくて素のAdobe CMapデータをパッケージにしているようなのを先日見かけたので、それを伝えるべく&lt;a href=&#34;https://lists.freedesktop.org/archives/poppler/2018-April/012999.html&#34;&gt;popplerのメーリングリストでのupstreamのAdobeがアップデートしたよ、という私からのメール&lt;/a&gt;には一切反応せず、か。相変わらずだな、popplerの人は&amp;hellip;。multiple upstream tarballの為にどうgitで扱うべか、という感じで未だにVCSには登録してない。&lt;/p&gt;

&lt;p&gt;&amp;hellip;debian/changelogの記述間違えた。。。&lt;/p&gt;

&lt;p&gt;あと libmojolicious-plugin-assetpack-perl もアップデートしておいた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Mon, 02 Apr 2018 12:51:55 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;debootstrapはNMUしてたら「普通にアップロードしてよ」と言われ、確認したらrepositoryの権限も貰っていた&amp;hellip;昔に追加されたのかな？とりあえず、アップロード→regression直しの繰り返しをしている。ツールとしての性格上致し方がないが、package外での利用が考慮漏れしてた。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=844118#10&#34;&gt;ダウンロード済みの.debファイルを使うようにするパッチも投げた&lt;/a&gt;。これで手元ではかかる時間が半分に減ったので、できれば入れたいところ。&lt;/li&gt;
&lt;li&gt;その前に既存のpatchを一掃する作業が待っているわけですが&amp;hellip;。&lt;/li&gt;
&lt;li&gt;書き忘れていたが &lt;a href=&#34;https://tracker.debian.org/news/940647/accepted-xfonts-jisx0213-020040511-7-source-all-into-unstable/&#34;&gt;xfonts-jisx0213パッケージを木下さんの了解を得てfonts-team配下に移動して更新&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;tiarraパッケージをexperimentalに放置してたので&lt;a href=&#34;https://tracker.debian.org/news/940648/accepted-tiarra-20100212r39209-7-source-all-into-unstable/&#34;&gt;unstableに上げた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/939922/accepted-jcodings-1028-1-source-all-into-unstable/&#34;&gt;jcodingsパッケージをアップデート&lt;/a&gt;。&lt;a href=&#34;https://tracker.debian.org/news/944791/accepted-jcodings-1029-1-source-all-into-unstable/&#34;&gt;その２&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/940144/accepted-jruby-joni-2116-1-source-all-into-unstable/&#34;&gt;jruby-joniパッケージ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/940343/accepted-fonts-sawarabi-mincho-20180315-1-source-all-into-unstable/&#34;&gt;fonts-sawarabi-minchoパッケージ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/944419/accepted-sphinx-intl-0911-1-source-amd64-into-unstable/&#34;&gt;sphinx-intlパッケージをアップデート&lt;/a&gt;、patchを入れ忘れていたので&lt;a href=&#34;https://tracker.debian.org/news/944433/accepted-sphinx-intl-0911-2-source-amd64-into-unstable/&#34;&gt;再度アップロード&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;xfonts-* パッケージを fonts-team で引き受けるべく ITA したのだけど、気力が足りなくて作業していない。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>debootstrap bug triage</title>
            <link>https://henrich.github.io/blog/2018/03/24/debootstrap-bug-triage/</link>
            <pubDate>Sat, 24 Mar 2018 11:29:15 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/03/24/debootstrap-bug-triage/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ここしばらくの作業はdebootstrapのbug triageを中心。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=563647&#34;&gt;manpageの不備にはパッチ提案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=698677&#34;&gt;エラーメッセージの不備にもパッチ提案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=861343&#34;&gt;mawk固定でダメじゃん&lt;/a&gt;には、意味あるかな〜と思ってパッチ出したけど「意味ないじゃん、このパッチ」とやっぱりツッコミが。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=866401&#34;&gt;ダウンロードエラーのメッセージが情報量０&lt;/a&gt;には提案パッチ出したけど、それ意味なくね？のツッコミが。もうちょっと続ける予定。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=872059&#34;&gt;昔と同じ挙動にしてよ&lt;/a&gt;には「パッチ当てるの反対の人〜？」と質問だけ流した。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=890419&#34;&gt;libvirt-lxcで動かすパッチ&lt;/a&gt;にはpatchタグがついてなかったので追加。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=877855&#34;&gt;&amp;ndash;second-stageで指定したコンポーネント情報が欠落&lt;/a&gt;は挙動を確認して該当のソースを提示してコメント。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=707033&#34;&gt;/homeをvfatなパーティションでマウントしてるとエラー出る&lt;/a&gt;は再現できないのでunreproducibleタグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=731859&#34;&gt;variant=fakechrootが動かない&lt;/a&gt;も再現できないのでunreproducibleタグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=684520&#34;&gt;Android+busyboxで動かない&lt;/a&gt;は情報量少なすぎなのでmoreinfoタグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=816892&#34;&gt;sync指定があるがsync -fの方がいい&lt;/a&gt;も理由がわからないのでmoreinfoタグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=891009&#34;&gt;Ubuntuのchroot作ろうとしてるのにdeb.debian.orgがリポジトリ指定されちゃう&lt;/a&gt;のを登録&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=891393&#34;&gt;Ubuntuのchroot作ろうとしてエラーになる&lt;/a&gt;のは登録したらLinuxカーネルパッケージのメンテナからamd64だと過去のカーネルと非互換性があるから、というのを教えてもらった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=700368&#34;&gt;apt-moveで作ったリポジトリだとエラーになる&lt;/a&gt;のは「SHA1は既に過去のものなので、このために対応する必要あるのかな？」というコメント入れて重要度下げた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=640992&#34;&gt;ChrootでもProxy設定引き継いで欲しい&lt;/a&gt;はパッと見でわかるようにタイトルを変えた&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=627073&#34;&gt;ダウンロード時にどこからダウンロードしたのか表示して欲しい&lt;/a&gt;は「なんで？」とコメントしてmoreinfoタグ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=764851&#34;&gt;blankonというdistro対応して&lt;/a&gt;はパッチのリンクが全部死んでたのでmoreinfoタグ&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=893713&#34;&gt;udebに不要なスクリプトファイルがあるよね&lt;/a&gt;を登録&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TriageではなくNMUを既に準備したのは &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=864734&#34;&gt;Bug#864734&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=586158&#34;&gt;Bug#586158&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=718632&#34;&gt;Bug#718632&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=754318&#34;&gt;Bug#754318&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=762431&#34;&gt;Bug#762431&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=806780&#34;&gt;Bug#806780&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=833525&#34;&gt;Bug#833525&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=732628&#34;&gt;Bug#732628&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734324&#34;&gt;Bug#734324&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=775444&#34;&gt;Bug#775444&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=798562&#34;&gt;Bug#798562&lt;/a&gt;、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=798564&#34;&gt;Bug#798564&lt;/a&gt;。大半はpatchが登録してあったのでそれを進めてるだけ。ただ、regressionが怖いので小分けにしてNMUし、10日ごとに投入していく予定。先は長い。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Wed, 07 Mar 2018 20:38:08 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/938331&#34;&gt;nailgunがjrubyビルドをぶっ壊してたのが見つかったので修正した&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;どうやら maven-debian-helper を使ってる場合は Depends: ${maven:Depends} しないとキチンと依存関係が書かれないようだった。気づいてなかった&amp;hellip;あと、debian/install で指定した以外のファイルも maven-debian-helper が勝手にインストールするようだ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;debootstrapをNMUでuploadした。deleyed/10なので10日待つ。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;debootstrap (1.0.93+nmu1) unstable; urgency=medium
 
  * Non-maintainer Upload.
  * Use force_md5 for breezy, dapper and edgy (Closes: #659360, #676373)
    Now you can create Ubuntu breezy/dapper/edgy chroot.
  * Add Suggests: ubuntu-archive-keyring for debootstraping Ubuntu on Debian.
    When you fetch Ubuntu packages ubuntu-archive-keyring is necessary.
    (Closes: #736995)
  * Change repository URI for old Ubuntu releases (Closes: #676370, #839073)
    Archived Ubuntu releases are at old-releases.ubuntu.com/ubuntu
  * Set correct keyring and default mirror for old debian releases.
    Now you can fetch popato/woody/sarge/etch/lenny/squeeze if you want.
    (Closes: #891404, #600647, #792729)
 
 -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt;  Mon, 05 Mar 2018 22:28:22 +0900
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;もういっちょdebootstrapのNMUを準備。上のがtestingに落ちたら即アップロード予定。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/03/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 04 Mar 2018 20:52:41 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/03/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;sylpheedパッケージの更新を放り込んだ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=346388&#34;&gt;sylpheedがJPilotサポートを既に落としてたので関連バグを閉じた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 03 Mar 2018 14:02:31 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;ここしばらくの作業とか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;林さんの依頼で&lt;a href=&#34;https://salsa.debian.org/debian/libhinawa&#34;&gt;libhinawaをインポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;birdfontが新しいvalacでコンパイルできない問題をupstreamに報告したら対応してもらえたので、&lt;a href=&#34;https://tracker.debian.org/news/937423&#34;&gt;更新してアップロード&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/936899&#34;&gt;libmojo-rabbitmq-client-perlパッケージをアップロード&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/936895&#34;&gt;libmojolicious-plugin-assetpack-perlパッケージをアップロード&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;debootstrapパッケージと戯れたり。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
