<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forget me not... on Forget me not...</title>
    <link>https://henrich.github.io/blog/</link>
    <description>Recent content in Forget me not... on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Sat, 22 Dec 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/blog/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;作業途中で夏から放置してた&lt;a href=&#34;https://tracker.debian.org/news/1013364/accepted-ubuntu-keyring-20160513-2-source-into-unstable/&#34;&gt;ubuntu-keyringパッケージをアップロード&lt;/a&gt;。debconfを使って&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=826558&#34;&gt;デフォルトではtrusted GPG keyringとしては扱わないように変更&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;さらにnew upstream release対応を手元で作成。Ubuntuでのrulesを見るとGPGファイルのチェックをしてたので、それを参考にしてautopkgtestを追加。いろいろGPGのオプションを指定する必要があった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--trusted-key &amp;quot;$trusted_keyid&amp;quot;&lt;/code&gt; のようにして署名鍵を信頼しないとエラーになる。通常なら自分のtrustdbに追加されてる感じだけど、テスト環境にはそんなのはないし、fetchするのもネット環境必須になってしまうので。もう一つの解としてはローカルに落としておく、だけど、それは大仰かな。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-auto-check-trustdb&lt;/code&gt; を付けないとtrustdbのチェックにやたら時間がかかるので&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;先日、&lt;a href=&#34;https://salsa.debian.org/ocaml-team/camlimages/commit/152b6a35c9ff24fd0ad96a2b3d1e5aab3e404055&#34;&gt;camlimagesパッケージの変更をmerge request&lt;/a&gt;したのだけど、最小なテスト作っても意図通りにならなかったな、ということだけ覚えていたのでメモしておく。何をどうやったのか、は思い出したら書こう…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/1013368/accepted-fonts-kanjistrokeorders-4002dfsg-1-source-into-unstable/&#34;&gt;fonts-kanjistrokeordersパッケージをアップデート&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;久々に&lt;a href=&#34;https://lists.debian.or.jp/pipermail/debian-doc/2018-December/000078.html&#34;&gt;installation guide訳を更新&lt;/a&gt;。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tdiary-contrib&lt;/code&gt; の &lt;code&gt;tdiary-mode&lt;/code&gt; が Release Critical bug が出ていたのが解消できてないのをメーリングリストに投げたのだけど、実は依存パッケージ起因で tdiary-mode 悪くなかったという。直してもらってめでたしめでたし、なのだが、さらに elpa の管理下にしてもらうといいなーと言ったら&lt;a href=&#34;https://twitter.com/uwabami/&#34;&gt;佐々木さん&lt;/a&gt;がパッチ書いてくれて更新してくれた。言ってみるもんだね。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bundler&lt;/code&gt;の &lt;code&gt;git ls-files -z&lt;/code&gt; が何故使われるのか？という疑問。「git管理下にないファイルを含めないため」という理由では？という意見を頂いた。うーん、そうするとupstreamでのDirで置き換えは厳しいか…。かと言ってgitを使うのもsourceパッケージを展開してのautopkgtestではエラーになるよね…地道に対応するしか無い？それは負けな気がする…。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>initfamrs-toolsのバグを踏んでいた</title>
            <link>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</link>
            <pubDate>Thu, 20 Dec 2018 13:16:51 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</guid>
            <description>&lt;p&gt;先日btrfsが破滅して入れ直しをしたThinkPad、久々に再起動してみたらkernel panicに。？？？と思って一つ前のカーネルで試すとそちらもkernel panic。最後に一番古いカーネルでbootを試したら上手くいった。&lt;/p&gt;

&lt;p&gt;？？？と思って調べてみると、どうやらinirdの行が存在してない…ってinitramfsなファイルがbootしたカーネル以外では存在してない！ということでinitramfsの作り方を調べて &lt;code&gt;sudo update-initramfs -c -k 4.9.0-3-amd64&lt;/code&gt; のようにしてみる…が、何も起こらない。エラーも起きない。何か設定が必要だったりするのか？といろいろ探し回った末に奇妙なことを見つけた。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ LC_ALL=C ls -al /usr/sbin/update-initramfs*
lrwxrwxrwx 1 root root    9 Oct 24 11:14 /usr/sbin/update-initramfs -&amp;gt; /bin/true
-rwxr-xr-x 1 root root 7093 Jul 26 02:16 /usr/sbin/update-initramfs.distrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あかんがなー！！！どうやらupdate-initramfs.distrib側が本体だろうな、と &lt;code&gt;sudo update-initramfs/distrib -c -k 4.9.0-3-amd64&lt;/code&gt; のようにすると無事にイメージが作られたので、&lt;code&gt;update-grub&lt;/code&gt; を実行して変更を反映、再起動すると無事起動できた。更に調べたところ&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dpkg -L initramfs-tools
(snip)
diverted by pkgsel to: /usr/sbin/update-initramfs.distrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで &lt;code&gt;pkgsel&lt;/code&gt; なるパッケージがこれを実施したことが判明。
じゃぁ、と &lt;code&gt;apt show pkgsel&lt;/code&gt; しても出てこない…あ、これはudebだね、ということで&lt;a href=&#34;https://packages.debian.org/sid/pkgsel&#34;&gt;サイト&lt;/a&gt;を確認…あたり。
&lt;code&gt;apt source pkgsel&lt;/code&gt; して &lt;code&gt;debian/changelog&lt;/code&gt; をみたら &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912073&#34;&gt;Bug#912073&lt;/a&gt; を踏んでいたと判明。んもー。寝る前の貴重な時間が…&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;水野さんの&lt;a href=&#34;https://tracker.debian.org/news/1012874/accepted-silversearcher-ag-220-1-source-amd64-into-unstable/&#34;&gt;silversearcher-agパッケージをアップロード&lt;/a&gt;した。

&lt;ul&gt;
&lt;li&gt;あわせて&lt;a href=&#34;https://salsa.debian.org/debian/silversearcher-ag&#34;&gt;salsa.debian.orgにリポジトリを追加&lt;/a&gt;し、権限を付与した&lt;/li&gt;
&lt;li&gt;さらに&lt;a href=&#34;https://salsa.debian.org/debian/silversearcher-ag-el&#34;&gt;silversearcher-ag-el&lt;/a&gt;も追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1013035/accepted-birdfont-2250-1-source-into-unstable/&#34;&gt;birdfontパッケージをアップデート&lt;/a&gt;した&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1011722/accepted-ruby-rspec-instafail-100-4-source-into-unstable/&#34;&gt;ruby-rspec-instafailパッケージをアップデート&lt;/a&gt;した&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1011716/accepted-ruby-childprocess-090-1-source-into-unstable/&#34;&gt;ruby-childprocessパッケージをアップデート&lt;/a&gt;した&lt;/li&gt;
&lt;li&gt;twitterで不具合話を拾ったので、&lt;a href=&#34;https://tracker.debian.org/news/1011713/accepted-fonts-unfonts-core-1102-080608-16-source-into-unstable/&#34;&gt;fonts-unfonts-coreパッケージをアップデート&lt;/a&gt;した

&lt;ul&gt;
&lt;li&gt;fontforgeコマンドの指定で &lt;code&gt;Open(&amp;quot;UnDinaruLight.ttf&amp;quot;)&lt;/code&gt; のようにくくってやらないとエラーになることに気付くまでに時間を要してしまった…。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/1011506/accepted-ruby-aruba-0146-3-source-into-unstable/&#34;&gt;ruby-arubaパッケージをアップデート&lt;/a&gt;した。&lt;/p&gt;

&lt;p&gt;autopkgtestが &lt;code&gt;debian/control&lt;/code&gt; での &lt;code&gt;Testsuite: autopkgtest-pkg-ruby&lt;/code&gt; 行を起点として実施される（実際は &lt;code&gt;debian/ruby-tests.rake&lt;/code&gt; ファイルが実行されるのかな？）のだけど、この際に &lt;code&gt;gemspec&lt;/code&gt; ファイルの中身が実行される。ところがここで &lt;code&gt;git&lt;/code&gt; コマンドを使ってファイルの有無を確認するという形になってしまっていて、git への依存関係がないのでコケるという悲しい状態だった。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Ruby&#34;&gt;  s.files            = `git ls-files`.split(&amp;quot;\n&amp;quot;)
  s.test_files       = `git ls-files -- {spec,features}/*`.split(&amp;quot;\n&amp;quot;)
  s.executables      = `git ls-files -- bin/*`.split(&amp;quot;\n&amp;quot;).map{ |f| File.basename(f) }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかもどうやらこれはbundlerの雛形がそうなってるという…何なんだRuby。daiさんに Dir 使うというのを教えてもらってパッチを作って対処、&lt;a href=&#34;https://bugs.debian.org/910953&#34;&gt;Bug#910953&lt;/a&gt;をクローズ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Ruby&#34;&gt;diff --git a/aruba.gemspec b/aruba.gemspec
index c6ac3e7..1581e98 100644
--- a/aruba.gemspec
+++ b/aruba.gemspec
@@ -40,9 +40,9 @@ With aruba &amp;gt;= 1.0 there will be breaking changes. Make sure to read https://gith
 EOS
   end

-  s.files            = `git ls-files`.split(&amp;quot;\n&amp;quot;)
-  s.test_files       = `git ls-files -- {spec,features}/*`.split(&amp;quot;\n&amp;quot;)
-  s.executables      = `git ls-files -- bin/*`.split(&amp;quot;\n&amp;quot;).map{ |f| File.basename(f) }
+  s.files            = Dir[&#39;**/*&#39;].reject { |f| f =~ %r{^debian/} }
+  s.test_files       = Dir[&#39;spec/*,features/*&#39;]
+  s.executables      = Dir[&#39;bin/*&#39;].map{ |f| File.basename(f) }
   s.rdoc_options     = [&amp;quot;--charset=UTF-8&amp;quot;]
   s.require_path     = &amp;quot;lib&amp;quot;
 end
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>Retrospective 2018 11 26</title>
            <link>https://henrich.github.io/blog/2018/11/26/retrospective-2018-11-26/</link>
            <pubDate>Mon, 26 Nov 2018 12:09:56 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/11/26/retrospective-2018-11-26/</guid>
            <description>&lt;p&gt;すっかりかまけてしまったので、思い出しつつ何やったかとか…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://debian-mirror.sakura.ne.jp&#34;&gt;debian-mirror.sakura.ne.jp&lt;/a&gt; のIPv6逆引きの設定変更を依頼されたので、さくらさんに依頼→受理された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=914448&#34;&gt;eclipseパッケージの削除依頼が登録された&lt;/a&gt;ため、依存するパッケージである&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=914566&#34;&gt;Pleiadesも削除依頼が登録された&lt;/a&gt;。正直複雑な心境。

&lt;ul&gt;
&lt;li&gt;Eclipseを再パッケージしなおせばいいのだろうが、どうやるのかさっぱりだよな…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=909426&#34;&gt;psphereパッケージを削除&lt;/a&gt;。これは問題なし。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1004788/accepted-fonts-sawarabi-mincho-20181115-1-source-into-unstable/&#34;&gt;fonts-sawarabi-minchoパッケージを更新&lt;/a&gt;、単にフォントファイルが指定位置にあるかを確認するだけというsmokeテストを追加。これ、フォントファイルとして認識できる（壊れてない）というのも追加したほうが本当は良さそう&lt;/li&gt;
&lt;li&gt;fonts-ibm-plexが追加された、というのを見て中身をチラ見したら&lt;code&gt;debian/upstream/metadata&lt;/code&gt;ファイルが追加されてた。これは真似ると良さそう

&lt;ul&gt;
&lt;li&gt;その流れで他のパッケージの&lt;code&gt;debian/upstream/metadata&lt;/code&gt;ファイル見てみたら、saneのがalioth指定したままだった…ので&lt;a href=&#34;https://salsa.debian.org/debian/sane-backends/merge_requests/2&#34;&gt;merge request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1005906/accepted-snapper-081-1-source-into-unstable/&#34;&gt;snapperパッケージの更新&lt;/a&gt;。&lt;a href=&#34;https://wiki.debian.org/UpstreamMetadata&#34;&gt;Wiki&lt;/a&gt;を参考にして、&lt;code&gt;debian/upstream/metadata&lt;/code&gt;ファイルを追加してみた。

&lt;ul&gt;
&lt;li&gt;ついでにbackportsパッケージも生成。&lt;/li&gt;
&lt;li&gt;水野さんにmetadataの作り方をpingしておく&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1005996/accepted-libuninameslist-20180701-1-source-into-unstable/&#34;&gt;libuninameslistパッケージの更新&lt;/a&gt;。

&lt;ul&gt;
&lt;li&gt;しかし、&lt;code&gt;python binding&lt;/code&gt;が有効になっていない…configure.acではpythonの所在を確認している。&lt;/li&gt;
&lt;li&gt;これも&lt;code&gt;metadata&lt;/code&gt;作るか？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.debian.org/debian-devel/2018/11/msg00640.html&#34;&gt;メールを投げてみる&lt;/a&gt;→「unstableを快適にするのじゃなくて、freezeを改善する方に力入れようぜ！」というような反応。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Todo の書き出しとか…。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Natural Language Processing (Japanese) &amp;lt;team+pkg-nlp-ja@tracker.debian.org&amp;gt;&lt;/code&gt; 配下になっているパッケージ、少なすぎ？と思ったら &lt;code&gt;&amp;quot;Natural Language Processing (Japanese)&amp;quot; &amp;lt;team+pkgnlpja@tracker.debian.org&amp;gt;&lt;/code&gt; もあった。どっちの表記が正しいのだ？本来であればidentiferの部分で&lt;code&gt;-&lt;/code&gt;が含まれていてもきちんと処理されるのが理想なはずだが。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/teams/pkg-nlp-ja/&#34;&gt;trackerページ&lt;/a&gt;を作り直してみた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mecab-ipadicとか、辞書パッケージの統一した扱いを何とか…&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;[jcodings]()と[jruby-joni]()のアップデート。jcodingsではメンテナアドレスを戻した際に書き間違えるというポカをやらかして、慌てて再アップロードした。jruby-joniはアップロード後にさらにupstreamが新しいバージョンを出しているようだったので、こちらは後日対処予定。&lt;/li&gt;
&lt;li&gt;os-autoinst、arm* やら mips* などでテストがコケるのだが何故だろう？と思って手元のBBBでテストしたが、qemuを起動している時にメモリサイズが足らなくてqemuが立ち上がらずにテストが実行できずにエラーになってしまった…builddの方は問題なく動作しているので、手元での問題。ログでwgetがらみのエラーが出てたところがあったので、build-dependsに追加してみたが、はてさて。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>DDのおしごと</title>
            <link>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;依頼を受けたので&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dcut dm --uid 0xD22C1A883455D448 --allow fcitx-dbus-status fcitx-imlist gntp-send groonga growl-for-linux hal-flash libsylph sylfilter sylph-searcher sylpheed groonga-normalizer-mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として林さんのDM uploadを設定しておいた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>HP Elitebook 830 G5で苦しむ</title>
            <link>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</link>
            <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</guid>
            <description>&lt;p&gt;debian-installerが何をやっても画面がブランクになってしまってDebianがインストールできないという。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;birdfont&lt;/code&gt;パッケージ、&lt;a href=&#34;https://buildd.debian.org/status/fetch.php?pkg=birdfont&amp;amp;arch=kfreebsd-i386&amp;amp;ver=2.23.0-1&amp;amp;stamp=1537307881&amp;amp;raw=0&#34;&gt;kfreebsd-i386&lt;/a&gt;と&lt;a href=&#34;https://buildd.debian.org/status/fetch.php?pkg=birdfont&amp;amp;arch=kfreebsd-amd64&amp;amp;ver=2.23.0-1&amp;amp;stamp=1537300422&amp;amp;raw=0&#34;&gt;kfreebsd-amd64&lt;/a&gt;で同じエラー…。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-make&#34;&gt;rm debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf
rm: cannot remove &#39;debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf&#39;: No such file or directory
make[1]: *** [debian/rules:20: override_dh_auto_install] Error 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なぜエラーになるのか？ &lt;code&gt;debian/rules&lt;/code&gt; をちょっと直して様子見するか？…と思ったが、既にdebian/patchesで削ったのを準備済みだったのでアップロードした&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmdk-stream-converter&lt;/code&gt; の tag push を忘れていた…&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libsql-splitstatement-perl&lt;/code&gt; を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libdbix-class-optimisticlocking-perl&lt;/code&gt; を更新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libdbix-class-schema-config-perl&lt;/code&gt; は Perlのバージョンアップに伴ってだろうか、モジュールが欠けてたので追加。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cat debian/upstream/metadata
---
Archive: CPAN
Contact: Brian Phillips &amp;lt;bphillips@cpan.org&amp;gt;
Name: DBIx-Class-OptimisticLocking
Repository: http://github.com/brianphillips/dbix-class-optimisticlocking
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;debian/upstream/metadata&lt;/code&gt; はこういうのを書くのかぁ。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;os-autoinstパッケージを放置していたので、アップデート作業を実施。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;upstreamをpullしてdebian/sidブランチにmerge&lt;/li&gt;
&lt;li&gt;ビルド…するも、testでエラーが出る。しかもランダム。どうも test が serial に実施される前提で書かれていて、ある test での input file が別の test でも使われてたりする＆その test 実施後に削除されたりするので、順序によっては input file が存在しない、ということでエラーになったりするようだ。仕方がないので &lt;code&gt;--no-parallel&lt;/code&gt; オプションを dh_auto_test につけて &lt;code&gt;make -j1&lt;/code&gt; で実行されるようにする&lt;/li&gt;
&lt;li&gt;それでも 02-test_ocr.t だけがコケ続けたりする（上記の際にはごくごく稀にだが成功したりする…）。&lt;code&gt;t/02-test_ocr.t.log&lt;/code&gt; を見てみる…。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-debug&#34;&gt;FAIL: 02-test_ocr.t
===================

Use of uninitialized value in index at ../needle.pm line 44.
Use of uninitialized value $bmwqemu::vars{&amp;quot;PRJDIR&amp;quot;} in addition (+) at ../needle.pm line 45.
[2018-09-24T07:08:55.0584 UTC] [debug] MATCH(bootmenu-ocr.ref:1.00)
Tesseract Open Source OCR Engine v4.0.0-beta.4-50-g07acc with Leptonica
Warning. Invalid resolution 0 dpi. Using 70 instead.
Estimating resolution as 132
Tesseract Open Source OCR Engine v4.0.0-beta.4-50-g07acc with Leptonica
Warning. Invalid resolution 0 dpi. Using 70 instead.
Estimating resolution as 138
Warning. Invalid resolution 0 dpi. Using 70 instead.
Estimating resolution as 132
#   Failed test &#39;multiple OCR regions&#39;
#   at ./02-test_ocr.t line 42.
1..2
# Looks like you failed 1 test of 2.
FAIL 02-test_ocr.t (exit status: 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;最初は &lt;code&gt;Warning. Invalid resolution 0 dpi. Using 70 instead.&lt;/code&gt; というエラーメッセージからテストデータの png ファイルに解像度データが存在しないことが原因だろう…と推測して convert コマンドで &lt;code&gt;convert a.png -density 300 -units PixelsPerInch b.png&lt;/code&gt; のようにして埋め込んだのだが、さっぱり出力が変わらない。&lt;/li&gt;
&lt;li&gt;ぐぐったところ&lt;a href=&#34;https://blog.machine-powers.net/2018/08/02/learning-tesseract-command-utility/&#34;&gt;「tesseractコマンドの実行時に、下記のメッセージが表示されますが、これは内部で使用している画像処理ライブラリ（Leptonica）の警告メッセージで無視して問題ないです。」&lt;/a&gt;という説明のページを見つけてへたりこんだり。&lt;/li&gt;
&lt;li&gt;どうしたらいいのかなぁ、ということで、一体何が起きてるのかをprintデバッグしよう、と &lt;code&gt;Data::Dumper&lt;/code&gt; を使う&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;use Data::Dumper;
...
print Dumper $ocr;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;おかしな文字列が出てきていてどうしたものかと試行錯誤。で、「OCR で認識する部分がずれてたりする？」と思いつき、gimpで &lt;code&gt;t/data/bootmenu-ocr.png&lt;/code&gt; を開き、認識してる文字列の座標を確認→ &lt;code&gt;t/data/bootmenu-ocr.ref.json&lt;/code&gt; を調整→成功！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make check-doc&lt;/code&gt; でエラー。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# [ -z &amp;quot;$(podspell testapi.pm | spell)&amp;quot; ]
# echo $?
1
# podspell testapi.pm | spell
deselected
VM
kvm
VM
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;これ、&lt;code&gt;spell&lt;/code&gt; の問題じゃないの？とは思うけど、&lt;code&gt;sed&lt;/code&gt; で削って対応。&lt;/li&gt;
&lt;li&gt;ビルドは問題なくできるようになったので、piuparts…と変なエラーが出たが、os-autoinstのパッケージには含まれてない問題なので無視（フォント絡みなので後で追わないといけない気もする…）。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-debug&#34;&gt;5m12.7s ERROR: FAIL: Package purging left files on system:
  /usr/local/share/fonts/        not owned
  /usr/local/share/fonts/.uuid   not owned
  /usr/share/fonts/      owned by: fonts-dejavu-core
  /usr/share/fonts/.uuid         not owned
  /usr/share/fonts/truetype/     owned by: fonts-dejavu-core
  /usr/share/fonts/truetype/.uuid        not owned
  /usr/share/fonts/truetype/dejavu/      owned by: fonts-dejavu-core
  /usr/share/fonts/truetype/dejavu/.uuid         not owned
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで &lt;a href=&#34;https://bugs.debian.org/893645&#34;&gt;Bug#893645&lt;/a&gt;と&lt;a href=&#34;https://bugs.debian.org/880791&#34;&gt;Bug#880791&lt;/a&gt;をcloseにしておいた。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-changelog&#34;&gt; os-autoinst (4.5.1527308405.8b586d5-1) unstable; urgency=medium
 .
   * New upstream release
   * debian/patches
     - refresh patch
     - add 0003-adjust-to-avoid-ocr-test-failure.patch (Closes: #893645)
     - add 0004-avoid-make-check-doc-failure.patch
     - add 0005-set-perl-path.patch to avoid lintian error
   * debian/control
     - add Build-Depends: libsocket-msghdr-perl, spell for test
     - move Vcs-* to salsa.debian.org
   * debian/rules
     - set --no-parallel for dh_auto_test to avoid random test failure
       (Closes: #880791)
&lt;/code&gt;&lt;/pre&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmdk-stream-converter&lt;/code&gt; が、aliothを指したままだったので&lt;a href=&#34;https://tracker.debian.org/news/989198/accepted-vmdk-stream-converter-02-4-source-all-into-unstable/&#34;&gt;とりあえず更新&lt;/a&gt;。python2依存なんだよね、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=883804&#34;&gt;patchはある&lt;/a&gt;のでupstreamが対応してくれないものか。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sphere&lt;/code&gt; はupstreamが開発停止＆VMWare自体がライブラリを出していてそちらは既にDebianにあるのでそちらを推す格好で&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=909426&#34;&gt;削除依頼&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jcodings&lt;/code&gt;が何故か細かくバージョンアップが繰り返されたので追従。1.0.34が&amp;ndash;deleyedでまだ入ってなかったので、それが入ってからになるように調整。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jruby-joni&lt;/code&gt;も同様。patchのrefreshが面倒くさい。最新のjcodings依存になっているようなので、ビルドはまだ。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>OSSummit Japanでボランティアスタッフした</title>
            <link>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</link>
            <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</guid>
            <description>&lt;p&gt;&lt;sup&gt;6&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;-22で行われた&lt;a href=&#34;https://events.linuxfoundation.org/events/open-source-summit-japan-2018/&#34;&gt;Open Source Summit Japan&lt;/a&gt;でのボランティアスタッフに参加してきました。会場の様子は&lt;a href=&#34;https://www.flickr.com/photos/linuxfoundation/albums/72157670342071148/page1&#34;&gt;公式の写真&lt;/a&gt;（&lt;a href=&#34;https://www.flickr.com/photos/linuxfoundation/albums/72157670342071148/page2&#34;&gt;その２&lt;/a&gt;）で雰囲気をどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linusが「プロダクションで使ってるカーネルが7年前ので、次に乗り換えた時に「必要な機能が無くなってる！」とかいうのやめて。継続的にリリースしてるんだからテスト環境でテストしてよ」っていうのはホントそれ、と思った。とはいえ、Debianの場合だと「リリース」という区切りが無くてテスト環境に投入しないのはあるのじゃないか？という思いもある。やはりbuster~pre-release-2018-06みたいな月で無理やり区切ってでもsnapshotリリースすべきだろうか。どうしたらもっとテストしてもらえるようになるか、を考えたほうがいい。&lt;/li&gt;
&lt;li&gt;CIPは&lt;a href=&#34;https://schd.ws/hosted_files/ossalsjp18/e4/20180620-CIP-OSSJ-v2.1-web.pdf&#34;&gt;Debian LTSに協力が進んでいる&lt;/a&gt;けど、もっとコラボレーションの要素を増やしたいね&amp;hellip;。CIPに関わる人にパッケージングのレクチャーとか？&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ossalsjp18.sched.com/event/EaY5/oss-license-compliance-for-software-developers-not-for-legal-experts-satoru-ueda-sony&#34;&gt;CELFイベントでお会いした方&lt;/a&gt;に挨拶できたのは良かった&lt;/li&gt;
&lt;li&gt;Licenseを考える、というので開発者側のモチベーションをどう引き出すか、という視点は面白いので検討したい。単なる面倒事、と捉えるだけだと「避ける」しか出てこない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ossalsjp18.sched.com/event/Eat7/dandified-way-to-package-management-in-yocto-project-zheng-ruoqin-fujitsu&#34;&gt;DNFを拡張してライセンスとかも表示したりとか&lt;/a&gt;というのは面白かった。aptだとどうだろうか。そもそもバイナリのライセンスがなにか、というのとソースのライセンスがなにか、というのは完全に同一ではないのだけど（複数のソースファイルが違うライセンスの場合とか複雑）。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://schd.ws/hosted_files/ossalsjp18/6a/LTSI-OSSJ2018-final.pdf&#34;&gt;LTS kernelはmainline＋8000コミットぐらいある&lt;/a&gt;というところから考えるに、1コミットするのに5万払うとか考えたら4億の価値があるんだな。。。これを自力でやるとなるとかなり辛い。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
