<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forget me not... on Forget me not...</title>
    <link>https://henrich.github.io/blog/</link>
    <description>Recent content in Forget me not... on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Fri, 04 Jan 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/blog/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;Ultimate Debian Databaseの&lt;a href=&#34;https://udd.debian.org/bugs/?release=buster_and_sid&amp;amp;merged=ign&amp;amp;done=only&amp;amp;rc=1&amp;amp;flastmod=ign&amp;amp;flastmodval=5&amp;amp;sortby=last_modified&amp;amp;sorto=asc&amp;amp;ctags=1&amp;amp;cdeferred=1&amp;amp;caffected=1&amp;amp;cautormtime=1&amp;amp;cmissingbuilds=1&amp;amp;&#34;&gt;Bug search Cleaner view&lt;/a&gt;から。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;xfce4関連パッケージがメンテナアドレスがaliothの消滅に伴う無効化されたもので、experimentalでは直ってるというしょーもない状態だったので状況を調査。

&lt;ul&gt;
&lt;li&gt;どうやら4.13というupstreamではdevelopment releaseな奴でアップデートしたからunstableに放り込むのがためらわれてるようだ&lt;/li&gt;
&lt;li&gt;fedoraとxubuntuはそれでも4.13リリースをぶち込んだ模様。&lt;/li&gt;
&lt;li&gt;というのを踏まえて「どーする？」という質問を投げた→「わかってる、4.14がリリースされたらそれを入れる」という回答。んーしばらくは放置か…。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;uglifyjsのFTBFS、experimentalでは直ってるよ、という話

&lt;ul&gt;
&lt;li&gt;semver（セマンティックバージョニング）でわかるように大幅に変更されてるから、依存関係で不具合でるんじゃね？という理由でexperimentalに隔離されているようだ&lt;/li&gt;
&lt;li&gt;では、ということでお手軽に&lt;code&gt;apr-rdependes&lt;/code&gt;で依存パッケージの確認&lt;/li&gt;
&lt;li&gt;emscriptenは内部に古い古いuglifyjs持ってるみたい…&lt;/li&gt;
&lt;li&gt;lavaはソース落としてみたけど、バージョン指定の情報は特に無し。&lt;/li&gt;
&lt;li&gt;node-grunt-contrib-uglifyは新しいバージョンならサポートしてる&lt;/li&gt;
&lt;li&gt;node-uglifyjs-webpack-pluginも新しいバージョンならサポートしてる&lt;/li&gt;
&lt;li&gt;ruby-uglifierも新しいバージョンならサポートしている&lt;/li&gt;
&lt;li&gt;というのを踏まえると、node-grunt-contrib-uglify、node-uglifyjs-webpack-plugin、ruby-uglifierを最新バージョンにしてexperimentalに上げる、がいいのかな。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;powermockがJava9ではビルドできないけど、新しいupstreamバージョンならOKよ、という話

&lt;ul&gt;
&lt;li&gt;やってみようとしたらビルドシステムからまるっと変わっていて（maven→gradle）、どうしようかな、というところ。gradle全然使ったこと無いのよね…&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.debian.org/Java/Packaging/Gradle&#34;&gt;Debian Wikiのページ&lt;/a&gt;にあった。&lt;code&gt;gradle-debian-helper&lt;/code&gt;パッケージをBuild-Dependsに加えて、&lt;code&gt;debian/rules&lt;/code&gt;で&lt;code&gt;dh $@ -with buildsystem=gradle&lt;/code&gt;&amp;hellip;って間違ってるやん&lt;code&gt;--buildsystem=gradle&lt;/code&gt;だよね…。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;* What went wrong:
A problem occurred configuring root project &#39;powermock&#39;.
&amp;gt; Could not resolve all files for configuration &#39;:classpath&#39;.
   &amp;gt; Could not resolve org.springframework.build.gradle:propdeps-plugin:0.0.7.
     Required by:
         project :
      &amp;gt; No cached version of org.springframework.build.gradle:propdeps-plugin:0.0.7 available for offline mode. 
      &amp;gt; No cached version of org.springframework.build.gradle:propdeps-plugin:0.0.7 available for offline mode. 
      &amp;gt; No cached version of org.springframework.build.gradle:propdeps-plugin:0.0.7 available for offline mode.
      &amp;gt; No cached version of org.springframework.build.gradle:propdeps-plugin:0.0.7 available for offline mode.
   &amp;gt; Could not resolve com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4.
     Required by:  
         project : 
      &amp;gt; No cached version of com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4 available for offline mode.
      &amp;gt; No cached version of com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4 available for offline mode.   
      &amp;gt; No cached version of com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4 available for offline mode.      
      &amp;gt; No cached version of com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4 available for offline mode.   
   &amp;gt; Could not resolve net.researchgate:gradle-release:2.4.0.
     Required by:
         project :   
      &amp;gt; No cached version of net.researchgate:gradle-release:2.4.0 available for offline mode.
      &amp;gt; No cached version of net.researchgate:gradle-release:2.4.0 available for offline mode.    
      &amp;gt; No cached version of net.researchgate:gradle-release:2.4.0 available for offline mode. 
      &amp;gt; No cached version of net.researchgate:gradle-release:2.4.0 available for offline mode.
   &amp;gt; Could not resolve com.github.jengelman.gradle.plugins:shadow:1.2.4.  
     Required by:
         project : 
      &amp;gt; No cached version of com.github.jengelman.gradle.plugins:shadow:1.2.4 available for offline mode.     
      &amp;gt; No cached version of com.github.jengelman.gradle.plugins:shadow:1.2.4 available for offline mode. 
      &amp;gt; No cached version of com.github.jengelman.gradle.plugins:shadow:1.2.4 available for offline mode.        
      &amp;gt; No cached version of com.github.jengelman.gradle.plugins:shadow:1.2.4 available for offline mode.  
   &amp;gt; Could not resolve org.shipkit:shipkit:2.0.31.
     Required by:      
         project :
      &amp;gt; No cached version of org.shipkit:shipkit:2.0.31 available for offline mode.
      &amp;gt; No cached version of org.shipkit:shipkit:2.0.31 available for offline mode.
      &amp;gt; No cached version of org.shipkit:shipkit:2.0.31 available for offline mode.
      &amp;gt; No cached version of org.shipkit:shipkit:2.0.31 available for offline mode.
   &amp;gt; Could not resolve ru.vyarus:gradle-animalsniffer-plugin:1.4.1.
     Required by:
         project :
      &amp;gt; No cached version of ru.vyarus:gradle-animalsniffer-plugin:1.4.1 available for offline mode.
      &amp;gt; No cached version of ru.vyarus:gradle-animalsniffer-plugin:1.4.1 available for offline mode.
      &amp;gt; No cached version of ru.vyarus:gradle-animalsniffer-plugin:1.4.1 available for offline mode.
      &amp;gt; No cached version of ru.vyarus:gradle-animalsniffer-plugin:1.4.1 available for offline mode.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーに出ている足りないパッケージについて、適当にパッケージ名を付けて&lt;code&gt;Build-Depends&lt;/code&gt;に指定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; pbuilder-satisfydepends-dummy : Depends: gradle-bintray-plugin which is a virtual package and is not provided by any available package
                                 Depends: gradle-release which is a virtual package and is not provided by any available package
                                 Depends: gradle-shadow which is a virtual package and is not provided by any available package
                                 Depends: gradle-shipkit which is a virtual package and is not provided by any available package
                                 Depends: gradle-animalsniffer-plugin which is a virtual package and is not provided by any available package
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gradle-propdeps-plugin&lt;/code&gt;はパッケージがあったので追加。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle-animalsniffer-plugin&lt;/code&gt;は&lt;a href=&#34;https://github.com/xvik/gradle-animalsniffer-plugin&#34;&gt;https://github.com/xvik/gradle-animalsniffer-plugin&lt;/a&gt;かららしい。

&lt;ul&gt;
&lt;li&gt;で、これは&lt;code&gt;animalsniffer&lt;/code&gt;に依存している。&lt;code&gt;libanimal-sniffer-java&lt;/code&gt;パッケージがあるのでこれだな。&lt;/li&gt;
&lt;li&gt;注意点が書いてある&lt;code&gt;「Use version 1.17 (toolVersion=1.17) if you need to run on java 9, but note that 1.17 can&#39;t be used on java 8 (and that&#39;s why it is not set by default)」&lt;/code&gt;→Java11でbusterはリリースされるので1.17が必要&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libanimal-sniffer-java&lt;/code&gt; は1.16なので、まずコイツのアップデートが必要…。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ apt-rdepends -r libanimal-sniffer-java&lt;/code&gt;の結果は何もなかったので、ぶっ込んでも大丈夫じゃないかな。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle-shipkit&lt;/code&gt;は&lt;a href=&#34;https://github.com/mockito/shipkit&#34;&gt;https://github.com/mockito/shipkit&lt;/a&gt;だな&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle-shadow&lt;/code&gt;は&lt;a href=&#34;https://github.com/johnrengelman/shadow&#34;&gt;https://github.com/johnrengelman/shadow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle-release&lt;/code&gt;は&lt;a href=&#34;https://github.com/researchgate/gradle-release&#34;&gt;https://github.com/researchgate/gradle-release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradle-bintray-plugin&lt;/code&gt;は&lt;a href=&#34;https://github.com/bintray/gradle-bintray-plugin&#34;&gt;https://github.com/bintray/gradle-bintray-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;os-autoinstを&lt;code&gt;dh12&lt;/code&gt;に上げたらビルドがコケるように。あれ？&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# root@hp:/build/os-autoinst-4.5.1527308405.8b586d5# find . -name &#39;*.pm&#39; -print
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/sshXtermIPMI.pm
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/vnc_base.pm
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/localXvnc.pm
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/sshX3270.pm
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/sshVirtsh.pm
./debian/os-autoinst/usr/libexec/os-autoinst/consoles/virtio_terminal.pm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おいおい。何故か&lt;code&gt;/usr/libexec&lt;/code&gt;以下にインストールするようになっとるやん。&lt;code&gt;man debhelper&lt;/code&gt;で答えを探す…見つけた。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The build systems meson and autoconf no longer explicitly set the --libexecdir variable and thus relies on the build system default - which should be /usr/libexec (per FHS 3.0, adopted in Debian Policy 4.1.5).&lt;/code&gt;ということで。どうやって直すかね。。。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;YubikeyでSSH接続しようとしたら謎のエラーがでて焦る。結局、手元の&lt;code&gt;~/.gnupg/private-keys-v1.d&lt;/code&gt;のファイルが腐ってるというオチだったのだけど、絞り込むのも時間かかった…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yubikey側の異常を疑って、testing環境で接続→問題なし（これでYubikeyが壊れた疑惑はなくなった）&lt;/li&gt;
&lt;li&gt;異常がでたdesktopのunstable環境の問題を疑って、別のunstable環境なマシンで接続→問題なし（設定が全くしていなかったのでちょっと戸惑った、これでunstableだと壊れてるというパッケージ側の問題は無い）&lt;/li&gt;
&lt;li&gt;ユーザー環境の差異を疑って、テストユーザーを作って接続→問題なし（これでいつものユーザーのhome directoryの設定が問題だろうと絞り込めた）&lt;/li&gt;
&lt;li&gt;とりあえず&lt;code&gt;mv .gnupg bak.gnupg&lt;/code&gt;などとして接続→問題なし（これで&lt;code&gt;.gnupg&lt;/code&gt;以下のファイルのうちどれかがおかしい）&lt;/li&gt;
&lt;li&gt;ひたすら旧ディレクトリから１つずつディレクトリやファイルをコピーする→絞り込めた&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やれやれ。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;今日は成果が得られなかった一日。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906688&#34;&gt;ruby-netrcパッケージのバグ&lt;/a&gt;のtriage。どうもテストケースがbuilddだと問題になるようだ（これは後に間違いだと気付く）。&lt;code&gt;assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_path&lt;/code&gt;が以下のような結果になる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  1) Failure:
TestNetrc#test_missing_environment [/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/test/test_netrc.rb:203]:
--- expected
+++ actual
@@ -1,2 +1 @@
-# encoding: ASCII-8BIT
-&amp;quot;/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/.netrc&amp;quot;
+&amp;quot;/build/.netrc&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;&lt;/code&gt;なんて変わった値が放り込まれてしまっている?…と思ったら、これは「builddでのログ出力で置き換えてるだけ」なのか。手元でビルドする時は&lt;code&gt;cowbuilder&lt;/code&gt;でやってしまっていたので、&lt;code&gt;sbuild&lt;/code&gt;環境を用意するのにも時間が&amp;hellip;あれ？&lt;code&gt;sbuild&lt;/code&gt;でも普通にビルドできちゃった。というか、builddでも以前にビルド自体は出来てるのか…。はてな？&lt;/p&gt;

&lt;p&gt;バグレポートを再度よく読み、テスト部分を再確認。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  def test_missing_environment
    nil_home = nil
    ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;]
    assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_path
  ensure
    ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;]
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;default_path&lt;/code&gt;でgrep…。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  def self.default_path
    File.join(ENV[&#39;NETRC&#39;] || home_path, netrc_filename)
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あー、これだ。&lt;code&gt;NETRC&lt;/code&gt;が存在しない場合に&lt;code&gt;home_path&lt;/code&gt;、つまりは上記のエラーになる環境では&lt;code&gt;/build&lt;/code&gt;が指定されてるのにもかかわらず、ビルドをしている&lt;code&gt;Dir.pwd&lt;/code&gt;は別、ということだろうな。さて、どういうふうにして回避するかね…&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;    p nil_home
    p ENV[&amp;quot;HOME&amp;quot;]
    p Netrc.home_path
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;&amp;quot;/home/henrich&amp;quot;
nil
&amp;quot;/build/ruby-netrc-0.11.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が返る。あれ？予想と違う。&lt;code&gt;home_path&lt;/code&gt;は&lt;code&gt;/build/ruby-netrc-0.11.0&lt;/code&gt;なのか。&lt;code&gt;ENV[&amp;quot;HOME&amp;quot;]&lt;/code&gt;が&lt;code&gt;nil&lt;/code&gt;であっても問題なし、ということを言いたいとすれば以下のようにするのが良さそう&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;--- a/test/test_netrc.rb
+++ b/test/test_netrc.rb
@@ -200,7 +200,7 @@
   def test_missing_environment
     nil_home = nil
     ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;]
-    assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_path
+    assert_equal File.join(Netrc.home_path, &#39;.netrc&#39;), Netrc.default_path
   ensure
     ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;]
   end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でアップロードした。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;ruby-eventmachineパッケージのFTBFSがpendingに１０ヶ月ぐらいなったままなので&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=816640#26&#34;&gt;質問した&lt;/a&gt;。→どうやらsegfaultするという問題があるらしい。うーむ。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;os-autoinstを直せるかな、と思ってビルドするも&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;The following packages have unmet dependencies:
 libopencv-imgcodecs3.2 : Depends: gdal-abi-2-3-0 which is a virtual package and is not provided by any available package

 libvtk6.3 : Depends: gdal-abi-2-3-0 which is a virtual package and is not provided by any available package 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;げぇ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Package: libgdal20
Version: 2.4.0+dfsg-1
Priority: optional
Section: libs
Source: gdal
Maintainer: Debian GIS Project &amp;lt;pkg-grass-devel@lists.alioth.debian.org&amp;gt;
Installed-Size: 20.2 MB
Provides: gdal-abi-2-4-0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こいつか…。&lt;a href=&#34;https://release.debian.org/transitions/html/gdal-2-4-0.html&#34;&gt;Transition tracker&lt;/a&gt;を見る限り、ここ１時間でビルドされたりしてるので、今日はたまたまあたってしまった、という感じか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/1016843/accepted-fonts-monapo-20170722-2-source-into-unstable/&#34;&gt;fonts-monapoパッケージをアップデート&lt;/a&gt;。upstreamが配布しなくなってた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;ubuntu-keyringパッケージの変更の続き。build時にもファイルチェックをするようにしたり。shellscriptでは&lt;code&gt;tempdir=`mktemp -d`&lt;/code&gt;のようにしてtempdirを指定したのだけど、makeでは&lt;code&gt;$$tempdir&lt;/code&gt;が空になるので、&lt;code&gt;$(CURDIR)/debian/tmp&lt;/code&gt; 決め打ちで逃げた…どうやるのがいいんでしょうねぇ？&lt;/p&gt;

&lt;p&gt;autopkgtest実施時にパッケージの分割・リネームの結果、パッケージリポジトリに該当のパッケージがなくてパッケージを引っ張ってこようとしてエラーとなるという予想外のエラー。気付くまでにまたしても時間を要した。とりあえず&lt;code&gt;sudo cowbuilder --login --inputfile a.deb --inputfile b.deb --save-after-exec&lt;/code&gt;としてchroot環境に入り&lt;code&gt;apt install /buildd/a.deb /buildd/b.deb&lt;/code&gt;などとしてローカル環境に加えて様子見→エラー解消。やれやれ。しかし、これを失念してその後で&lt;code&gt;piuparts&lt;/code&gt;でパッケージチェックしたらdebconf関連ファイルがそのまま残ってるぞ、というエラーになって苦悶した（&lt;code&gt;sudo cowbuilder --create&lt;/code&gt;しなおして対処）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パッケージを分割した&lt;/li&gt;
&lt;li&gt;インストールするkeyringをUbuntuのパッケージを参考にして変更した&lt;/li&gt;
&lt;li&gt;debconfで質問される &lt;code&gt;/etc/apt/trusted.gpg.d&lt;/code&gt; にsymlinkを張るkeyringをUbuntuのパッケージを参考に調整した&lt;/li&gt;
&lt;li&gt;autopkgtestをまともなものにした&lt;/li&gt;
&lt;li&gt;build時にもautopkgtest相当が動作するようにした&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回の変更はこんな感じか。パッケージ分割で新しいバイナリパッケージが増えるから&lt;a href=&#34;https://ftp-master.debian.org/new.html&#34;&gt;NEW queue&lt;/a&gt;待ちに。どれだけかかるのかな。。&lt;/p&gt;

&lt;p&gt;そしてアップロード後もエラーを踏む。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source-only uploads to NEW are not allowed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なんと、そうだったのか。最近は&lt;code&gt;arch=all&lt;/code&gt;パッケージとかも手元でビルドしたバイナリではなくbuilddでビルドしたものを、と思って&lt;code&gt;git-buildpackage&lt;/code&gt;のオプションで&lt;code&gt;--git-pbuilder-options=&amp;quot;--source-only-changes&amp;quot;&lt;/code&gt;などとしていたのが仇に。&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;淡々と&lt;a href=&#34;https://tracker.debian.org/news/1016437/accepted-jcodings-1042-1-source-into-unstable/&#34;&gt;jcodingsパッケージをアップデート&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;grcompilerに&lt;a href=&#34;https://tracker.debian.org/news/1016599/accepted-grcompiler-42-7-source-into-unstable/&#34;&gt;投稿されてたパッチをマージ&lt;/a&gt;。自分の作った地雷を踏むという失態を。

&lt;ul&gt;
&lt;li&gt;upstreamが4.3を出してるのだけど、これをマージした所ビルドも通らない代物だったのでそのまま放置してたのを忘れてパッチを当ててビルドが通らないものとして悩んでしまった。一旦debian/4.2ブランチを作ってこっちに。&lt;/li&gt;
&lt;li&gt;で、全部終わってpushしようとしたらrejectされる…って他のメンテナが変更を加えてた。変更を&lt;code&gt;git format-patch&lt;/code&gt;して一旦逃してから全削除→&lt;code&gt;git clone&lt;/code&gt;して当て直し。そしてメンテナの作業ミスを見つけて直すなども。やれやれ。
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;ubuntu-keyringパッケージの変更の続き。Ubuntu側と内容を合わせる形に変更で、パッケージを増やしたり。&lt;code&gt;.install&lt;/code&gt;ファイルの指定が微妙でインストールされるファイルが被ってしまう問題、&lt;code&gt;[0-9]*&lt;/code&gt;で数字だけ指定されるかと思ったら、そうでなかった。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keyrings/ubuntu-keyring-[0-9]*[!a-z]-archive.gpg      usr/share/keyrings/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というようにした。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/&#34;&gt;先日のMerge Request&lt;/a&gt;に「amd64 specificで指定してるけど、これi386でも動くんじゃない？」というコメントがメンテナから来たので&lt;a href=&#34;https://salsa.debian.org/kernel-team/linux/merge_requests/92/diffs?commit_id=629e0562f2416eea4a477ea12b83a73347da86e2&#34;&gt;x86指定に変更した&lt;/a&gt;→マージされました。&lt;/li&gt;
&lt;li&gt;昨日の&lt;a href=&#34;https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/&#34;&gt;ruby-loofahパッケージの更新で脆弱性修正&lt;/a&gt;したのだが、Debian9 &amp;ldquo;stretch&amp;rdquo;では変更をbackportしないといけない（まぁ、Debian Security Advisoryを出すほどでもない＝no-dsaと見なされる可能性もあるけど）。根本的な変更はword１個消すだけ＋XSS対策の追加コードだけだったので、&lt;a href=&#34;https://salsa.debian.org/ruby-team/ruby-loofah/commits/debian/stretch&#34;&gt;作業して&lt;/a&gt;セキュリティチームに連絡だけしといた。&lt;/li&gt;
&lt;li&gt;なんかKernelで問題が起きてるぞ、これは意図的なのか？というバグレポートを横目で見たので、以前の省電力化Kernel configパッチの影響であり&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=917906#8&#34;&gt;意図的なものだということだけを伝えるreply&lt;/a&gt;をした（changelogにきちんと書いたんだがな…）。その際、大元のFedoraでの変更をしたRHの人にCC入れておいた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/news/1015820/accepted-ubuntu-keyring-201809181-1-source-into-unstable/&#34;&gt;ubuntu-keyringパッケージを最新に更新&lt;/a&gt;。もうちょっと待とうかとも思ったのだけど、testが壊れたものをアップロードしてたのと前のアップロードの鍵はチェックでfailする謎の状態だったので。

&lt;ul&gt;
&lt;li&gt;次はUbuntu側とパッケージ名を合わせる変更を入れ込むかね…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://udd.debian.org/bugs/?release=buster_and_sid&amp;amp;merged=ign&amp;amp;rtbuster-will-remove=ign&amp;amp;rtbuster-can-defer=ign&amp;amp;autoremovals=ign&amp;amp;deferred=ign&amp;amp;fnewer=ign&amp;amp;fnewerval=30&amp;amp;rc=1&amp;amp;cpopcon=1&amp;amp;chints=1&amp;amp;ctags=1&amp;amp;cclaimed=1&amp;amp;cdeferred=1&amp;amp;caffected=1&amp;amp;crttags=1&amp;amp;sortby=last_modified&amp;amp;sorto=asc&amp;amp;#results&#34;&gt;Debian10 &amp;ldquo;buster&amp;rdquo;リリースの障害となるRelease Criticalバグ一覧&lt;/a&gt;から簡単に直せそうなのを探して作業。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ruby-slimパッケージ、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=895500#16&#34;&gt;New upstream version導入でFTBFS修正&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ruby-sinatra-contribパッケージ、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=911869#12&#34;&gt;New upstream version導入でFTBFS修正&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ruby-loofahパッケージ、&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912398#14&#34;&gt;New upstream version導入でCVE修正&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;１文字でFTBFSが直せるやつだったので&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=893821&#34;&gt;やっといた&lt;/a&gt;&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;たまたまbug reportを見かけてmerge request作ったほうが話が早い奴だと思ったので&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=917388#10&#34;&gt;やっといた&lt;/a&gt;。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;debian-installerのコンポーネントの一つ、&lt;a href=&#34;https://salsa.debian.org/installer-team/partman-lvm/merge_requests/1/&#34;&gt;partman-lvmでのバグ修正&lt;/a&gt;が含まれたパッケージがようやくアップロードされた。&lt;/p&gt;

&lt;p&gt;もう一つ、重要なコンポーネントのdebootstrapの昨日の変更だけど、リリースマネージャーが難色を示しているのでamd64以外でもチェックすることに。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;手元の放置してたBBBを設定、&lt;a href=&#34;http://select.marutsu.co.jp/list/detail.php?id=235&#34;&gt;参考ページ&lt;/a&gt;を元に初期化し直し&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://beagleboard.org/latest-images&#34;&gt;stretchベースのイメージ&lt;/a&gt;をSDカードに。ちなみにxz圧縮したままで展開せずに書き込めるのでGNOMEなかなか優秀である。&lt;/li&gt;
&lt;li&gt;２つ前のバージョン（1.0.110~bpo9+1）のがstretch-backportsに入ってるので、そちらをインストールして stretch / buster / sid のchroot環境を作る。あとは各環境で &lt;code&gt;dpkg --get-selections &amp;gt; distro.txt&lt;/code&gt; のようにしてパッケージ一覧を作成。次にunstableから debootstrap 1.0.112 を入れて同じことを繰り返し。この後で diff をとってそれぞれのchrootで違いが出てるのかどうかをチェックする、という流れ。しかし、SDカードへの書き込みは遅く、マシンも非力なためにめっちゃ時間が…

&lt;ul&gt;
&lt;li&gt;ちなみにBBB＝armhfアーキテクチャでも特に変化は見られませんでした。そりゃそうだ、と思うのですが…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;あとはarm64アーキテクチャである&lt;a href=&#34;https://db.debian.org/machines.cgi?host=amdahl&#34;&gt;debian.orgのporterboxマシン&lt;/a&gt;にsshログインしたものの、password設定わからず（どうなってるんだっけ？）sudo出来なかったのでこちらは明日以降で…&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/1013790/accepted-debootstrap-10112-source-into-unstable/&#34;&gt;debootstrapをアップデート&lt;/a&gt;。Mr.FAIのハックによってスピードが格段に速くなった。一応、前のバージョンと比較して取得パッケージの差異が無いのは確認済みだが、なんかregressionがあるのも嫌なので &lt;a href=&#34;https://planet.debian.org/&#34;&gt;Planet Debian&lt;/a&gt; にも載ってる&lt;a href=&#34;https://henrich-on-debian.blogspot.com/2018/12/debootstrap-speed-up.html&#34;&gt;blogで告知&lt;/a&gt;もしておいた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>DDのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;アップロードがrejectされてたので&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ dcut dm --uid 0x9394F354891D7E07 --allow fonts-mmcedar
Uploading commands file to ftp.upload.debian.org (incoming: /pub/UploadQueue/)
Picking DM Youhei SASAKI &amp;lt;uwabami@gfd-dennou.org&amp;gt; with fingerprint 66A4EA704FE240558D6AC2E69394F354891D7E07
Uploading henrich-1545485367.dak-commands to ftp-master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として佐々木さんのDM uploadを設定しておいた。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>DDのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;倉敷さんがビルドマシンが家のNASで遅いという話をしていたので、CloudGarageさんの開発者支援制度でお借りしているホストを一台セットアップして渡した。外堀を埋める方向。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;p&gt;作業途中で夏から放置してた&lt;a href=&#34;https://tracker.debian.org/news/1013364/accepted-ubuntu-keyring-20160513-2-source-into-unstable/&#34;&gt;ubuntu-keyringパッケージをアップロード&lt;/a&gt;。debconfを使って&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=826558&#34;&gt;デフォルトではtrusted GPG keyringとしては扱わないように変更&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;さらにnew upstream release対応を手元で作成。Ubuntuでのrulesを見るとGPGファイルのチェックをしてたので、それを参考にしてautopkgtestを追加。いろいろGPGのオプションを指定する必要があった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--trusted-key &amp;quot;$trusted_keyid&amp;quot;&lt;/code&gt; のようにして署名鍵を信頼しないとエラーになる。通常なら自分のtrustdbに追加されてる感じだけど、テスト環境にはそんなのはないし、fetchするのもネット環境必須になってしまうので。もう一つの解としてはローカルに落としておく、だけど、それは大仰かな。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-auto-check-trustdb&lt;/code&gt; を付けないとtrustdbのチェックにやたら時間がかかるので&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;先日、&lt;a href=&#34;https://salsa.debian.org/ocaml-team/camlimages/commit/152b6a35c9ff24fd0ad96a2b3d1e5aab3e404055&#34;&gt;camlimagesパッケージの変更をmerge request&lt;/a&gt;したのだけど、最小なテスト作っても意図通りにならなかったな、ということだけ覚えていたのでメモしておく。何をどうやったのか、は思い出したら書こう…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/news/1013368/accepted-fonts-kanjistrokeorders-4002dfsg-1-source-into-unstable/&#34;&gt;fonts-kanjistrokeordersパッケージをアップデート&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;久々に&lt;a href=&#34;https://lists.debian.or.jp/pipermail/debian-doc/2018-December/000078.html&#34;&gt;installation guide訳を更新&lt;/a&gt;。&lt;/p&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>めんてなのおしごと</title>
            <link>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
            <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
            <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tdiary-contrib&lt;/code&gt; の &lt;code&gt;tdiary-mode&lt;/code&gt; が Release Critical bug が出ていたのが解消できてないのをメーリングリストに投げたのだけど、実は依存パッケージ起因で tdiary-mode 悪くなかったという。直してもらってめでたしめでたし、なのだが、さらに elpa の管理下にしてもらうといいなーと言ったら&lt;a href=&#34;https://twitter.com/uwabami/&#34;&gt;佐々木さん&lt;/a&gt;がパッチ書いてくれて更新してくれた。言ってみるもんだね。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bundler&lt;/code&gt;の &lt;code&gt;git ls-files -z&lt;/code&gt; が何故使われるのか？という疑問。「git管理下にないファイルを含めないため」という理由では？という意見を頂いた。うーん、そうするとupstreamでのDirで置き換えは厳しいか…。かと言ってgitを使うのもsourceパッケージを展開してのautopkgtestではエラーになるよね…地道に対応するしか無い？それは負けな気がする…。&lt;/li&gt;
&lt;/ul&gt;
</description>
          </item>
        
      
    
      
        
          <item>
            <title>initfamrs-toolsのバグを踏んでいた</title>
            <link>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</link>
            <pubDate>Thu, 20 Dec 2018 13:16:51 +0900</pubDate>
            <author>henrich@debian.org (Hideki Yamane)</author>
            <guid>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</guid>
            <description>&lt;p&gt;先日btrfsが破滅して入れ直しをしたThinkPad、久々に再起動してみたらkernel panicに。？？？と思って一つ前のカーネルで試すとそちらもkernel panic。最後に一番古いカーネルでbootを試したら上手くいった。&lt;/p&gt;

&lt;p&gt;？？？と思って調べてみると、どうやらinirdの行が存在してない…ってinitramfsなファイルがbootしたカーネル以外では存在してない！ということでinitramfsの作り方を調べて &lt;code&gt;sudo update-initramfs -c -k 4.9.0-3-amd64&lt;/code&gt; のようにしてみる…が、何も起こらない。エラーも起きない。何か設定が必要だったりするのか？といろいろ探し回った末に奇妙なことを見つけた。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ LC_ALL=C ls -al /usr/sbin/update-initramfs*
lrwxrwxrwx 1 root root    9 Oct 24 11:14 /usr/sbin/update-initramfs -&amp;gt; /bin/true
-rwxr-xr-x 1 root root 7093 Jul 26 02:16 /usr/sbin/update-initramfs.distrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あかんがなー！！！どうやらupdate-initramfs.distrib側が本体だろうな、と &lt;code&gt;sudo update-initramfs/distrib -c -k 4.9.0-3-amd64&lt;/code&gt; のようにすると無事にイメージが作られたので、&lt;code&gt;update-grub&lt;/code&gt; を実行して変更を反映、再起動すると無事起動できた。更に調べたところ&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dpkg -L initramfs-tools
(snip)
diverted by pkgsel to: /usr/sbin/update-initramfs.distrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで &lt;code&gt;pkgsel&lt;/code&gt; なるパッケージがこれを実施したことが判明。
じゃぁ、と &lt;code&gt;apt show pkgsel&lt;/code&gt; しても出てこない…あ、これはudebだね、ということで&lt;a href=&#34;https://packages.debian.org/sid/pkgsel&#34;&gt;サイト&lt;/a&gt;を確認…あたり。
&lt;code&gt;apt source pkgsel&lt;/code&gt; して &lt;code&gt;debian/changelog&lt;/code&gt; をみたら &lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912073&#34;&gt;Bug#912073&lt;/a&gt; を踏んでいたと判明。んもー。寝る前の貴重な時間が…&lt;/p&gt;
</description>
          </item>
        
      
    
  </channel>
</rss>
