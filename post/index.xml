<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Forget me not...</title>
    <link>https://henrich.github.io/blog/post/</link>
    <description>Recent content in Posts on Forget me not...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <managingEditor>henrich@debian.org (Hideki Yamane)</managingEditor>
    <webMaster>henrich@debian.org (Hideki Yamane)</webMaster>
    <lastBuildDate>Fri, 31 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://henrich.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> インストールガイドのアップデートやりかけを見つけたのでpushしておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 報告者が2年ほど放置しているのでバグを閉じるのはどうか？とsuggestion snapのCVE、タグ付けと修正コミットへのリンクを。修正はどうしたもんかねぇ mass rebuildでFTBFS報告があったが、ちょうどアップロードしたところのやつだったので閉じた  mass rebuildどうやるか情報確認しておくか…これかな？    </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fontconfigのRCバグ、直ってるよという報告者の話があったのに閉じてなかったので閉じた jrubyのCVEバグだが、rubygem由来でパッチそのものがあったので適用して閉じた snapdのCVEバグ、あとで確認しよう… gucharmapのFTBFS、unicode-data 12.0由来なので弄ってビルド通るようにしてアップロードした ghostscriptのunblockをメンテナに代わって実施してあげた Linuxパッケージのバグ、upstreamで直ってたのでタグ付け
 リリースノートをいじる
 CDがメディアとして挙げられてるが、基本DVDメディアになったのでそのあたり httpsで繋がるところはhttpsに直した。 ビルドがうまくいってないところが出てきちゃう、とあったので一部revert  notoフォントパッケージのバグじゃない？という問い合わせに対応
 firmware-atherosパッケージ変、というのがあったのでreplyしてみた
  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 1.0.0がmasterにマージされたので、sphinx-intlパッケージをアップデートした 酷いバグレポートを見かけたので閉じておいた。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> docker.ioパッケージがアップデートされたのを見て、パッケージ情報見てたらupstreamのサイトが移動してたのでMergeRequestだした  マージされた   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> git-buildpackageのサンプルgbp.confの設定がbzip2使っていたのでxzに置き換えパッチだした  マージされた  unblock: ubuntu-keyring/2018.09.18.1-5が通った、が指摘を受けてた点は別バグとしてファイルされた。見直さないとな… sphinx-intlパッケージをアップデートした  1.0.0が最新、となっているもののmasterブランチにはタグが見当たらないのでIssue立てといた  jcodingsパッケージをアップデートした。  debian/libjcodings-java.pomsで--no-parentオプションを使えばいいのを発見してdebian/patchesはdropした。なんで今まで気づいてなかったんだ。  jruby-joniパッケージをアップデートした その他、フリーズ中でアップロードしないほうがいいかな、と思ったのは更新したのをgitリポジトリにアップロードするに止めた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-parallel-testsパッケージをアップデート ruby-serverengineパッケージをアップデート  今見たらciがコケてる…要調査だ。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>fonts-sawarabi-minchoをアップデート</description>
    </item>
    
    <item>
      <title>OSSummit Japan 2019ボランティアスタッフに応募</title>
      <link>https://henrich.github.io/blog/2019/05/15/ossummit-japan-2019%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%AB%E5%BF%9C%E5%8B%9F/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/15/ossummit-japan-2019%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%AB%E5%BF%9C%E5%8B%9F/</guid>
      <description>OSSummit Japan 2019のボランティアスタッフに応募しておいた。DebConfの移動があるので初日だけ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> DebConf19に向けて思いつきのCfPを投げた GUIXの売り文句が素晴らしいのでホントかなー？と思ってVMを立ち上げるもいきなりぶっ壊れててまともに動かせない様に見えるので涙した。  </description>
    </item>
    
    <item>
      <title>ライターのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/08/%E3%83%A9%E3%82%A4%E3%82%BF%E3%83%BC%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/08/%E3%83%A9%E3%82%A4%E3%82%BF%E3%83%BC%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>検証用にHDD 2TB「Seagate IronWolf 3.5」を一つ購入した…。PCのバックアップ体制をきちんと整理しておかねば、という思いが強まった。 そして「2.5&amp;frasl;3.5インチSATA HDDエンクロージャーの不具合」についても問い合わせ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-parallel-tests、ruby-serverengine、ruby-strptimeがリポジトリに入った。fluentdに向けてだいぶ進んだ。 令和対応状況メールを投げた 「ppc64elのインストールに失敗した〜」メールを見たあとで、たまたまちょうどそのVPSサービス提供してるところがツイートしてたのを見つけたので「手助けしてくれへん？」と訪ねたら返事が来た。とはいえ、キャパオーバーしてるので別の人に「頼めんかなぁ？」と打診メールを→「オッケー」と来たのでバトンを渡した。 jdのbackports削除依頼を出した。 byobuの依存関係のパッケージ名が古かったのでパッチ出した  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/05/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/05/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> firefox-esrでの証明書問題でoldstable向けに騒いでたのが居たので、LTSメーリングリストにmentionを飛ばして、コマンドメールでfixedバージョンを追加しておいた。 gsの修正がunblock依頼が出てなかったのでつついた linux-image-4.19.0-4-amd64で、Xがまともに立ち上がらない件、複数のバグレポートが上がっていたのでもう一つの方に「あっちも同じ問題じゃね？」とだけコメントしたらマージしてくれた様子。あとは次のリリースで加わるといいね。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>手元の日経Linux誌見たらPPA指定が必要になっていたaobookのITP登録してuploadしといた。現実逃避だけど。
「OpenJDK 11.0.3/8u212 LTS以降でのリリースノートや脆弱性の追い方」は一読しただけでは理解が追いつかないな…。
debian/watchのOSDNでの書き方は下記が良いらしい。うーん、RSS必死に見てたのは不要だったか…
https://osdn.net/projects/@PACKAGE@/releases/rss \ https://osdn.net/projects/@PACKAGE@/downloads/\d*/@PACKAGE@-@ANY_VERSION@@ARCHIVE_EXT@/ debian uupdate  uscanにバグ登録したほうが良いか
ASFがGitHubに移行してた。
IPAexフォントのアップデートを放り込んだ。
upstreamの方に確認したいことがあったので、問い合わせページから以下のような問い合わせを送った
IPAフォントならびにIPAexフォントをLinuxディストリビューション Debianにてパッケージとして配布しています。 問１）IPAフォントならびにIPAexフォントの問題・要望報告先としてOSDNにプロジェクト https://ja.osdn.net/projects/ipafonts/ を開設されていますが、こちらに報告をしても全く反応がありません。今回のIPAexフォントの配布もこちらで実施されてないようです - こちらのプロジェクトは活動しているのでしょうか - していないとしたら、どこで誰に連絡をすればよいのでしょうか - GitHub等に移行はできないでしょうか。 問２）IPAexフォントの配布ページがバージョンごとに毎回URLが変更されており、機械的に新しいバージョンが出ているかのチェックがしずらいのですが、何故この様な形にしているのでしょうか（以前の https://ipafont.ipa.go.jp/old/ipafont/download.html であれば問題なく確認が出来ましたので、改悪と言えます）。  openjdk-11パッケージの中身をチェックしようとdebcheckoutコマンドで落としたのだが、どうにもおかしい。git checkout &amp;lt;tag&amp;gt;として古いバージョンなのに令和対応がされてる、というように見えてしまう。悩んだ結果、openjdk-11パッケージのリポジトリはdebianディレクトリ以下の保守しかしておらず、debcheckoutコマンドがおせっかいにもtarballを落としてきてたという。
$ debcheckout openjdk-11 declared git repository at https://git.launchpad.net/~openjdk/ubuntu/+source/openjdk/+git/openjdk -b openjdk-11 git clone https://git.launchpad.net/~openjdk/ubuntu/+source/openjdk/+git/openjdk -b openjdk-11 openjdk-11 ... Cloning into &#39;openjdk-11&#39;... remote: Counting objects: 722, done. remote: Compressing objects: 100% (706/706), done. remote: Total 722 (delta 422), reused 103 (delta 10) Receiving objects: 100% (722/722), 824.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>glibcの令和対応パッチをupstreamから取ってきてペタペタした  対応されたのでbusterは対応になるだろう。stretchどうするかねぇ  openjdk8での令和対応をBTSに登録した icuでの令和対応をBTSに登録した  OpenChainのワーキンググループでツールの話を聞いてきたので、どんな感じかなーとfosslogyのWNPPバグを覗いてみた。
ついでにSPDXのtoolのパッケージングが出来ないかを色々と。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> jessieのstable-updatesリポジトリ削除でaptのエラー→jessieを利用してたコンテナ環境がビルド失敗という話題があったが、「stretchではstable-updatesは削除しないで」というバグをファイルしておいた。関係する人たちとかにも伝えておいたほうが良いだろうということで、CircleCI側でも告知しておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>fonts-arphic-bkai00mpパッケージの更新（引退したbubulleをUploadresから削除）を実施。
IPAフォントの令和対応チケットを起票しておいた。忘れそうだったので。 最悪、IPAフォントの「令」「和」から「㍻」を真似て作る、だろうか。
OpenBVE界隈の人がDebianからパッケージが削除されてて困ってたので、スポンサーするよという話をしておいたらWNPPバグに登録したようなので、内容をざっくりレビューしておいた。疲れた…。ライセンス周りはまだ精査が必要そう。
一応リポジトリは用意しておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>fluentdのrubyサポートバージョンについて、各distroではこうなんだから、もう切っちゃっても良いんじゃない？というのを書いてきた。まぁ、継続されても別に問題はないんだけど。
で、パッケージング。通ったり通らなかったりするテストを落として、名前がかぶるテストを名前変えて、ようやく100%通るように。
------------------------------------------------------------------------------- 2705 tests, 10932 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications 100% passed ------------------------------------------------------------------------------- 3.13 tests/s, 12.67 assertions/s rake aborted!  ちょ、なんで100% passedなのにrake aborted!なのよ？このために止まってる。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>武藤さんにrieceが起動しないバグを見つけてもらって、木下さんにも助力いただき対応策が分かったので適用して閉じた</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>まずはruby-sigdumpパッケージが入った。これでbuild用の独自chroot環境なくすのに一歩近づいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>残りのメモ。まだ長いなぁ。
fontforge (U) should switch to dh. Current build system: cdbs (source version: 1:20170731~dfsg-1) fontforge (U) git repository still hosted on alioth. Should move to salsa. (source version: 1:20170731~dfsg-1) fonts-arphic-gkai00mp (U) git repository still hosted on alioth. Should move to salsa. (source version: 2.11-15) fonts-breip (U) git repository still hosted on alioth. Should move to salsa. (source version: 1:0.5.1-1) fonts-ipafont (U) git repository still hosted on alioth. Should move to salsa.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ひたすらbad smellを消す作業。
fonts-dejima-mincho (U) git repository still hosted on alioth. Should move to salsa. (source version: 227-15) fonts-oradano-mincho-gsrr (U) git repository still hosted on alioth. Should move to salsa. (source version: 0.2018-1) fonts-ricty-diminished (U) git repository still hosted on alioth. Should move to salsa. (source version: 4.1.1-1) fonts-kouzan-mouhitsu (U) git repository still hosted on alioth. Should move to salsa. (source version: 20170411-2) fonts-motoya-l-cedar (U) git repository still hosted on alioth. Should move to salsa.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>trends.debian.netより
Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; fontforge (U) should switch to dh. Current build system: cdbs (source version: 1:20170731~dfsg-1) fontforge (U) git repository still hosted on alioth. Should move to salsa. (source version: 1:20170731~dfsg-1) fonts-arphic-bsmi00lp (U) git repository still hosted on alioth. Should move to salsa. (source version: 2.10-17) fonts-arphic-gbsn00lp (U) git repository still hosted on alioth. Should move to salsa. (source version: 2.11-15) fonts-arphic-gkai00mp (U) git repository still hosted on alioth. Should move to salsa.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>fluentdパッケージングでのテストエラー続き。
? Encoding: US-ASCII-8BIT =============================================================================== : (0.005571) test: should output compressed file when compress option is gzip: F =============================================================================== Failure: test: should output compressed file when compress option is gzip(FileOutputSecondaryTest::write) /build/fluentd-1.4.2/test/plugin/test_out_secondary_file.rb:129:in `check_gzipped_result&#39; /build/fluentd-1.4.2/test/plugin/test_out_secondary_file.rb:154:in `block (2 levels) in &amp;lt;class:FileOutputSecondaryTest&amp;gt;&#39; 151: path = d.instance.write(@chunk) 152: 153: assert_equal &amp;quot;#{TMP_DIR}/out_file_test.0.gz&amp;quot;, path =&amp;gt; 154: check_gzipped_result(path, @es.to_msgpack_stream.force_encoding(&#39;ASCII-8BIT&#39;)) 155: end 156: 157: test &#39;should output plain text when compress option is default(text)&#39; do &amp;lt;&amp;quot;\x92\xD7\x00\\\xAC\x83\x81\x04\x04Z\x9F\x81\xA3key\xA5value&amp;quot;&amp;gt;(ASCII-8BIT) expected but was &amp;lt;&amp;quot;\x92\xD7\x00\\\xAC\x83\x81\x04\x04Z\x9F\x81\xA3key\xA5value&amp;quot;&amp;gt;(US-ASCII) diff: 潰^@\ｬメ^D^DZ氈｣key･value  文字列の比較のようだが、同じ様に見える…のにエンコーディングが違う？どこでこのエンコーディング指定してるのだろう？とTravis CIのログをみてなるほどーとなってパッチ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>fluentdのビルド…テストがエラーになる。
2748 tests, 11159 assertions, 15 failures, 3 errors, 0 pendings, 0 omissions, 1 notifications  という感じ。見ていく。
Failure: test: dump txt[--format=markdown --verbose --compact](TestFluentPluginConfigFormatter::arguments): Exception raised: Errno::ENOENT(&amp;lt;No such file or directory @ realpath_rec - /build/fluentd-1.4.2/debian/fluentd/usr/lib/ruby/templates&amp;gt;) /build/fluentd-1.4.2/test/command/test_plugin_config_formatter.rb:270:in `block (3 levels) in &amp;lt;class:TestFluentPluginConfigFormatter&amp;gt;&#39;  # grep templates -r ./ (snip) ./lib/fluent/command/plugin_generator.rb: (Pathname(__dir__) + &amp;quot;../../../templates/new_gem&amp;quot;).realpath ./lib/fluent/command/plugin_config_formatter.rb: (Pathname(__dir__) + &amp;quot;../../../templates/plugin_config_formatter/#{name}&amp;quot;).realpath  /build/fluentd-1.4.2/templatesを見たいのに/build/fluentd-1.4.2/debian/fluentd/usr/lib/ruby/templatesを参照しにいってるので、ここを直せば良い。templatesをlib配下に持っていって相対パスをadjustするのがよいかね。
/usr/lib/ruby/vendor_ruby/flexmock/core.rb:92: warning: instance variable @flexmock_closed not initialized /usr/lib/ruby/vendor_ruby/flexmock/core.rb:92: warning: instance variable @flexmock_closed not initialized /usr/lib/ruby/vendor_ruby/flexmock/core.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>パッケージング、残りはruby-strptimeとruby-tzinfo-dataか、ということでruby-strptimeのITP作業した。ruby-tzinfo-dataの方はtzdataを引っ張ってこれない環境だと必要なのでは？と判断して削る方向で…あ、ruby-parallel-testsも追加。
これで大体依存関係終わったかな…。
 ruby-cool.io ruby-sigdump ruby-serverengine ruby-strptime ruby-parallel-tests  ここまで来て、ようやくfluentdのパッケージングに再度入れる。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日gem2debで変換したruby-dig-rbを仕上げておこうとしてdescription書く際にサイトを見て「ん？」と気付く。
Ruby 2.3.0 introduced #dig on Hash, Array, and Struct. With this gem, you can have dig on ruby pre 2.3.0, or any ruby lacking dig. If you are writing an app and want to use dig in it you should probably just upgrade to ruby 2.3.0. But if you are writing a gem and want it to work with both MRI 2.3.0 and others (including JRuby 9.0.x), this gem is for you.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>itamaeのアップデートにfluentdが必要そうなのでこちらをやろうとしてみる。
$ gem2deb fluentd fluentd doesn&#39;t seem to exist. Let&#39;s try to download it with &#39;gem fetch fluentd&#39; gem fetch fluentd Fetching: fluentd-1.4.2.gem (100%) Downloaded fluentd-1.4.2 -- Creating source tarball from fluentd-1.4.2.gem ... tar xfm /home/henrich/src/pkg-ruby-extras/fluentd-1.4.2.gem &amp;quot;tar xzfm data.tar.gz&amp;quot; tar czf /home/henrich/src/pkg-ruby-extras/fluentd-1.4.2.tar.gz fluentd-1.4.2 -- Successfully created ./fluentd-1.4.2.tar.gz -- Creating Debian source package from ./fluentd-1.4.2.tar.gz ... tar xzf ruby-fluentd_1.4.2.orig.tar.gz -- Generated Debian source tree in ruby-fluentd-1.4.2 -- Building Debian package ... dpkg-buildpackage -us -uc dpkg-buildpackage: info: source package ruby-fluentd dpkg-buildpackage: info: source version 1.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ubuntu-keyringのunblockが進まないのでping。tomoyo-toolsは閉じた。 itamaeのバグの話がlaunchpadに上がってるのを見たので、Debian側に報告&amp;amp;修正してアップロードした。どうせあっちでは何もやらんでしょ…。あとでunblockもしとかないと。忘れそうだ… itamaeのバージョンが古いので、新しいのを作業…と依存関係でruby-fluentd-loggerのパッケージ申請を登録。あらかた終わったけど、テスト実行どうやるんだっけ…。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> snapperをアップデートした fonts-sawarabi-minchoをアップデートした ruby-arubaをアップデートした libuninameslistをアップデートした  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>jcodingsのunblockを出した</description>
    </item>
    
    <item>
      <title>サポート終了コンポーネントのアーカイブ削除に寄せて</title>
      <link>https://henrich.github.io/blog/2019/03/26/%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E7%B5%82%E4%BA%86%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%82%A2%E3%83%BC%E3%82%AB%E3%82%A4%E3%83%96%E5%89%8A%E9%99%A4%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/26/%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E7%B5%82%E4%BA%86%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%82%A2%E3%83%BC%E3%82%AB%E3%82%A4%E3%83%96%E5%89%8A%E9%99%A4%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6/</guid>
      <description>先日、ミラーアーカイブからDebian7とDebian8のサポート終了コンポーネントが削除されました。すると、Docker使ってる人やCircleCI使ってる人が「ぎゃー！」と叫び始めたという。どうも背景を理解されてる方は少ないようなので、簡単にざっと説明を書きました（ユーザーならともかく、イメージを提供するベンダー側は把握しておいてほしいですけどね…）。
ベースイメージとしてDebian8 &amp;ldquo;jessie&amp;rdquo;を使っているという前提で話をします。
 Debian8はDebian9のリリースに伴って「oldstable」（旧安定版）という扱いになっています。oldstableはstableに比べて限定されたサポートの提供となります。そりゃぁでっかいリポジトリを複数バージョンに渡って長期間メンテナンスなんて難しいですからね。oldstable使ってる時点で色々制限が出てくる、ってもんです。ベストプラクティスとしては「ベースイメージのDebianはstableを使おう」です。  え？Ubuntu LTSだってでっかいリポジトリで長期間サポートしてるじゃん、って？…彼らは2000パッケージぐらいのmainコンポーネントはサポートしてるけど、その他の50000パッケージぐらいのuniverseはコミュニティに寄るサポート≒Debianその他から持ってくるよ、という状態なんですよ。知らなかったでしょ？  jessie-updatesコンポーネントが無くてビルドがー！という人：-updatesは「stableにおけるパッケージのうち、定期的な更新が必要なものを提供」という位置づけなので、jessieがoldstableになった時点で死んでます。外しちゃえばいいです。 (追記) http://security.debian.org/debian-security jessie/updates mainも削除…はしちゃダメです！ その行はセキュリティアップデートの取得です（取得先サーバーがsecurity.debian.orgでしょ？) たしかにjessie/updatesというところだけを見たら削除したくなるかもしれませんが、LTSサポートのセキュリティアップデートが降ってくるのを消したらアカンですよ…。 jessie-backportsが無くなってギャー！という人：-backportsは「stableへの新しいバージョンの移植」という位置づけのコンポーネントなので、jessieがoldstableになった時点で死んでます。なんで使ってんの？ということです。そもそも新しいバージョンが必要だ、というならoldstable使ってる時点で前提がおかしいですよ？まずはstableに移行しましょう  Debian9がでて早２年近く、そろそろDebian10の足音も聞こえてるので、開発側としてはいまさらDebian8に固執してほしくはない、というのが正直な所。ベースイメージのバージョン移行は計画的に…。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> tomoyo-toolsも一応unblockを出した。通らないかもしれないけど、一応そこまでdiffがでかくないよ―というアピール。  →ダメだった。そらそーか。  squid-deb-proxyは問い合わせてみたが特に反応がないが、週末だったので--deleyed 3でアップロードした。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今回はubuntu-keyringパッケージを題材に「full freeze期間に入ってしまったが、unstableにあるパッケージをリリース対象＝testingに入れたい」場合の手順をメモしてみました。
まず、testingにあるバージョンとunstableにあるバージョンの差分（diff）を生成します。今だとgit diffでも良さそうな気はするのですが、慣例的にはソースパッケージに対してdebdiffを使って作ります。ソースパッケージをdgetコマンドで取得し、.dscファイルに対してdebdiffコマンドを実行しています。ソースパッケージのURLはdistro trackerからコピペしていますが、別のやり方もあるでしょう。
$ dget http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-4.dsc \ http://deb.debian.org/debian/pool/main/u/ubuntu-keyring/ubuntu-keyring_2018.09.18.1-5.dsc $ debdiff ubuntu-keyring_2018.09.18.1-4.dsc ubuntu-keyring_2018.09.18.1-5.dsc &amp;gt; ubuntu-keyring.diff  diffが出来たので、これを元にunblockリクエストをバグ登録します。ツールとしてはreportbugコマンドを使うとウィザード形式で行ってくれるので間違いがなくて楽です。reportbugはreportbug &amp;lt;package&amp;gt;という形でパッケージを指定してバグ登録するのですが、今回のような場合はリリース関連の調整をトラッキングするための疑似パッケージ(psuedo package)であるrelease.debian.orgを指定します。
$ reportbug release.debian.org Detected character set: UTF-8 Please change your locale if this is incorrect. Using &#39;Hideki Yamane &amp;lt;henrich@debian.org&amp;gt;&#39; as your from address. Will send report to Debian (per lsb_release). What sort of request is this? (If none of these things mean anything to you, or you are trying to report a bug in an existing package, please press Enter to exit reportbug.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debootstrapにバグレポート来てたから確認したが、報告者がミスってるだけだった…</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>RCバグでunstableにuploadされてNEW queue待ちのがあったようなので、タグ付けした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>RCバグつぶし出来ないかなーと眺めて、squid-deb-proxy-clientにパッチを送っておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> cowbuilderを動かしてて、そういえばコイツ…というかpbuilderはbaseイメージ作成の際にdebootstrapを呼ぶな、という考えに至り、--cache-dirオプションが使えるのではないか？と思いつく。で、MergeRequestした。  その中でmanpageの--debootstrapオプションの設定が間違っていたようなので、こちらもMergeRequest  もう一つ、man pbuilderした時だったかにapt lineがftp.jp.debian.orgやftp.de.debian.orgを指定してたのでdeb.debian.org指定に変更のMergeRequest。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>LFのメーリングリストが復旧した。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> partman-lvmのregression修正、release managerからは「もう遅い」と言われてしまったが、アップロードされた。恐らくBug Squashing Partyのおかげ。 リリースノートの翻訳を始めたが、細かい所（entityで「svn」の文字が残ってるのが気になった）のでMerge Requestしたら速攻でMergeされた。 live-buildがbuster対応してない件、未だにアップロードされないのでバグ登録しておいた。patchはマージ済みなのに。  その日のうちにアップロードが来ました。よしよし  色々泣きそうになりながらubuntu-keyringパッケージに対して自分で仕込んだバグへの対応。バグレポートの指摘がありがたい。。。なんとかクローズ。  shellcheckを自動でkickするようにしたほうが良い気がしてきた…   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日のdebootstrap話で平松さんがarchitecture指定がDebianだと独特なのがあって混乱する（例: amd64）と仰っていたので、パッチ作成した。 birdfontのtestingへのmigrationを待って更新を押し込んだ。 libuninameslistはライブラリ更新だし、ということで作業はしたけどアップロードは見送り。 jcodingsの更新をアップロード  よく考えたらjruby-joniでのjcodings指定が上記の更新したバージョン依存であった…ミラーに来るのを待って明日更新しよう…。  tomoyo-toolsがリリースされてたのでこちらもアップロード  OpenChainの下調べで日本のワーキンググループのメーリングリストに参加しようとするもエラーが出るので、list ownerに問い合わせを送った…のだがエラーになって帰ってくるよ？
&amp;lt;openchain-japan-wg-owner@mail.linuxfoundation.org&amp;gt; (expanded from &amp;lt;openchain-japan-wg-owner@lists.linuxfoundation.org&amp;gt;): Command died with status 1: &amp;quot;/usr/lib/mailman/mail/mailman owner openchain-japan-wg&amp;quot;. Command output: mailowner script, list not found: openchain-japan-wg  そのうちページにも一切アクセスできなくなった…なんだこれは、ということでLFのアカウントを取って（というか取り直して？）、Jiraに報告した。
メーリングリストの案内についてはページを指すようにPull Request送った。
laptop（HP Elitebook G5 830）のBIOSアップデートを実施。UFEI画面から有線LAN経由でアップデートできるのは良い（Dockの方からは行けないのが残念）。一度処理途中で止まってしまい、電源強制切断からの更新のrevertと再アップデートしたのも中々ヒヤヒヤした。あとはDockとかのファームウェアのアップデートもしたいところだが、こちらはWindowsが無いとダメっぽいんだよな…。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Japan Linux Jamboreeでdebootstrapの話をしてきました。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> os-autoinstのtestでのrace condition bugの修正を先日NMUしてもらったのだけど、何故かbugが自動で閉じられてなかったので処理。  後で気づいたが、これi386でのビルドがまたコケてるね…それでか。  jruby-joniのバグがupstreamでようやく修正されたのでupload そういえばSoftware Design2019年4月号の画像を見かけたのでJPサイトに追加 JDimのtestがらみのissueにコメント  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Debian JPのミラーサーバ一覧、Ring Serverプロジェクトの部分を更新しておいた。</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/27/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/27/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>libhinawaをアップロードした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日のbirdfontの修正に漏れがあった（linksが修正されてなかった）ので対応。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontの依存関係を微調整するバグレポートが来てたので対応した。
W: birdfont source: inconsistent-appstream-metadata-license resources/linux/birdfont.appdata.xml (gpl-3.0+ != gpl-3+)  とあったが、これはどっちに揃えるのが良いのだろうね？</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>いつの頃からかデスクトップのapt updateがまともに働かなくなった。どうやらsquid-deb-proxy-clientがおかしい。
squid-deb-proxy-clientの中身を見てコマンドを実行。
23443 ? Ss 1:44 \_ tmux -u -2 -f /usr/share/byobu/profiles/tmuxrc new-session -n - /usr/bin/byobu-shell 23450 pts/2 Ss 0:00 \_ /bin/bash 22690 pts/2 S+ 0:00 | \_ /usr/bin/python /usr/share/squid-deb-proxy-client/apt-avahi-discover http://deb.debian.org/debian 22691 pts/2 Z+ 0:00 | \_ [avahi-browse] &amp;lt;defunct&amp;gt;  というようになったので、試しに引数なしで
23450 pts/2 Ss 0:00 \_ /bin/bash 24148 pts/2 S+ 0:00 | \_ /usr/bin/python /usr/share/squid-deb-proxy-client/apt-avahi-discover 24149 pts/2 Z+ 0:00 | \_ [avahi-browse] &amp;lt;defunct&amp;gt;  おお、defunct…。
この後、どうやらlaptopでもapt-cacher-ngが動いていて、こちらを消したら動くようになった。釈然としないので再度追試とかしてみるか…</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debian-mirror.sakura.ne.jpでのmuninでの監視で、ちゃんと動いてなかったのを放置していたのを直そうと思い立った。
You don&#39;t have permission to access /munin-cgi/munin-cgi-graph/sakura.ne.jp/debian-mirror.sakura.ne.jp/apache_volume-pinpoint=1550237708,1550928908.png on this server.  ということなので、いろいろ調べて http://munin-monitoring.org/wiki/MuninConfigurationMasterCGI を見てから
$ sudo apt-get install libapache2-mod-fcgid $ sudo a2enmod rewrite $ sudo a2enmod fcgid  としてから/etc/apache2/conf-enabled/munin.confを以下のように書き換え。
--- /tmp/munin.conf 2019-02-23 23:06:32.694400917 +0900 +++ /etc/apache2/conf-enabled/munin.conf 2019-02-23 23:06:41.302614319 +0900 @@ -11,7 +11,7 @@ ScriptAlias /munin-cgi/munin-cgi-graph /usr/lib/munin/cgi/munin-cgi-graph &amp;lt;Location /munin-cgi/munin-cgi-graph&amp;gt; - Require local + Require all granted &amp;lt;IfModule mod_fcgid.c&amp;gt; SetHandler fcgid-script &amp;lt;/IfModule&amp;gt;  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>MathLibreをいじっててlive-buildパッケージでbusterサポートが抜けてたのでMerge Requestした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimでのDebian向けの開発環境説明を修正した。 partman-lvmの修正がregressionを起こしてrevertされたので再チャレンジ  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/09/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/09/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>groonga 9.0.0 を deleyed 3 でアップロードした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> CONFIG_IMX_THERMALがマージされた CONFIG_ARM_ARMADA_37XX_CPUFREQがマージされた CONFIG_LEDS_PCA963Xは「アーキテクチャ限定したほうが良いんじゃね？」というサジェスチョン。 jdimをstretch-backportsにアップロードした。これもNEW行きかな？入ったらjdを削除依頼しないと。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/08/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/08/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> groongaとhinawa-utilsのアップロードが何故か上手くいかないようなので代理作業。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-misakiがサイト移転＆アップデートしてたので対応を。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> linuxパッケージのconfigをいじる作業の続き。Bug#920809とBug#918114がマージされた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> gem2debのテンプレートでruby-interpreterが入ってたのを削除するパッチがマージされた。リリースはまだ。 ubuntu-keyringパッケージのdebconf poの更新を取り込んだ。これ、次回からMerge Requestの方が良いような…  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-arubaのアップデート ruby-childprocessのissueに返信があったので、さらにコメント追記。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#918589がマージされた。 Bug#912597がマージされた。 ruby-childprocessパッケージ、upstreamが1.0.0を出してたので追随しようとしたらエラーになった。まずはissue登録しておく。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#917388がマージされた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimをビルドしたのでアップロードした。NEW queue待ち。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDimのITPを投げた。Bug#920684が割り当てられました。 cdimage.debian.or.jpを先日9.7へのリンクに更新したけど、背景画像がhttpを参照しててmixed contentsになっていたので修正しといた。 PublickeyのSSPL記事について、Chrisの発言はftpmaster teamとしての発言である旨などを指摘して修正してもらった。 Maintainer Dashboardでsnapperのアップデートを見つけたので、放り込んだ。  backportsを忘れないうちに準備しておこう…と思ったら、なんかビルドできないな。なんでだっけな&amp;hellip;あぁ、backportsを加えてないからか。と気付くまでに時間を要した。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Internetwatchの記事の見出しが「「Debian GNU/Linux」に関する脆弱性が171件、第4四半期「JVN iPedia」への登録状況」と、Debianだけ危険みたいな感じだったので苦情を入れた。こんな感じ。
IPAの該当レポートについては、確かにDebianについての脆弱性数がトップであることは事実として記述されておりましたが、レポートの構成としてはサポートが終了するJava8、それからXSS脆弱性とバッファオーバーランについてが多くを占めています（それぞれ章立てされていました）。ここに全く触れていないことはどの様な意図があったのでしょうか。 「3. 脆弱性対策情報の製品別登録状況」の項にてDebianの脆弱性数が述べられていますが、DebianやUbuntuそしてRed Hat Enterprise Linuxの様なLinuxディストリビューションはWindows Serverなどとは違ってOSのみだけではなくLibreOfficeなどのオフィススイート、Firefoxなどのブラウザ、Tomcatなどのミドルウェア、Apacheなどのサーバーなどを全て含んで提供されています。Debianでの配布ソフトウェアパッケージ数はおおよそ5〜6万です。その背景を把握せずに、単純に「脆弱性が多い」とだけ見出しに書かれるのは、大変遺憾であると同時に、記事の薄さを指摘せざるを得ません。 今後の改善に期待したいと思います。失礼します。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Bug#912597向けにMergeRequest Bug#832458でのCONFIG_SND_SOC_INTEL_BYT_MAX98090_MACH=mはすでにdeprecatedで代わりの奴が有効になっているのをコメント追加。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> experimental用に作業してマージされたパッチだけど、buster用にもいれたほうがいいかな、とおもったので別途MergeRequestを作った Bug#918589向けパッチを作成、テストビルドは無事通った Bug#918114向けパッチを作った。 ubuntu-keyringパッケージがいつまで待ってもNEW queueから出てこないので、ftpmasterにお手紙→入った  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> whizzytexのパッチをもうひとつ取り込み忘れてたので作業。まだtestingに前のが落ちてないので待ち。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 昨日のjdパッケージの削除依頼が実行されてた。早いなー。ruby-bcatパッケージの削除もその日のうちだったし。 systemdの脆弱性の話で「gccの-fstack-clash-protectionオプション指定してるディストリビューションは影響受けない」という話があって「これ、適用しないの？」と聞いたら該当のバグ登録を教えてもらった。subscribeして様子見しよう。 ubuntu-keyringパッケージのdebcont templateのレビューを反映した。なるほどなー  既に翻訳版を送ってくれた方々に「こっちでお願い」を送った  ubuntu-keyring、ubuntu-archive-keyringをtransitional package にすべきと言われてなるほどなーとなったので更新して再度NEW queueへ grcompiler、4.2.7以降のがテストこけちゃうのでtest failureをreportした curlが最新にならないかなぁ、というつぶやきを見かけたので、前のBTSのpushの意味も兼ねてバグ登録した fonts-sawarabi-minchoを更新 nadokaが古いままでwatchもエラーになっていたので、重い腰を上げて更新しておいた。前のメンテナの安井さんにも連絡済み。 whizzytexのパッチを取り込み忘れてたので作業。まだtestingに前のが落ちてないので待ち。 jruby-joniパッケージがFTBFSになってる？なぜだ… org.jcodings.exception.CharacterPropertyException: invalid character property name &amp;lt;graphemeclusterbreak=emodifier&amp;gt;と出てくるのでその辺りから検索したけど、よくわからんよね…issue登録だけしておいた  $ grep emodifier -r ./ ./src/org/joni/Parser.java: static final byte[]Grapheme_Cluster_Break_E_Modifier = &amp;quot;graphemeclusterbreak=emodifier&amp;quot;.getBytes();   気になったのでgem2debのテンプレートからruby-interpreterを削除するMRを送っておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> JDパッケージの削除を登録した  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/14/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/14/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>武藤さんがDDを引退されたので、その引き継ぎとしてmltermパッケージの今後のsponsor uploadを引き受けることになった。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> whizzytexパッケージをアップロード。作業自体は以前にあらかたしていた。
 問題だったのはautopkgtest。ファイルを開くだけでwhizzytex-modeを実行しないとテストの意味がないのでemacs --script test.el test.texのようにしてtest.elの中で以下のようにするなどした。  (find-file (nth 0 command-line-args-left)) (whizzytex-mode 1)   その後、どうやっても1つ目のテスト以外コケるな…と思ったら、もともとのtestfileファイルにtypoがあってtest.texとすべきところをtest.txtになってて、存在しないファイルなのでコケるという…ターミナル中で実行した時はbashの補完だったから気づかなかったよ… ruby-arubaパッケージをアップロード ruby-bcatへの依存、ずっと前から要らなくなっていたようだ…見落としてた。これでCIが通るようになるはず。 ん？ということはruby-bcatをRMしてもいいんじゃないか。ざっくりapt-rdependsした結果では依存はないし、codesearch.debian.netの検索結果もそれらしいものはない。grep-dctrlでも同様なので、RM依頼を登録  $ grep-dctrl -FBuild-Depends ruby-bcat -sPackage /var/lib/apt/lists/*Sources Package: ruby-aruba  libmojo-ioloop-readwriteprocess-perlパッケージが入ってくれたので、手元のos-autoinstをmaster HEADに更新。予想通りだが、i386でのエラーは変わらず…。
 ubuntu-keyringパッケージのdebconf template査読が返ってきてたので、mergeしないと…。
 だいぶ前にjdがクラッシュするよ、とlaunchpadの方でレポートがあった（けど、debianからsyncしてるだけだからあんまり見ないんだよね、launchpad…ログインするのも手間だし）のだけど、その後のreplyに何の返答もない。それでいて「Debian/Ubuntuのパッケージはメンテされてない」とか言いふらすのは止めてほしいよね…（こちらとしては、そもそも2ch（今は5chなんだっけ）の方で仕様変更が云々あって見ない＆使わない状態が続いてるのに加えて、upstreamに動きがないためにチェックする機会も無かったのだ）。で、forkだと思しきrepositoryの方では名称変更が検討されてたので、パッケージにしたいなーというのは伝えておいた。
  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> debootstrapにバグレポートが。  busyboxではdateのparseに失敗する、とのことだったのでそのチェックを追加 もう一つはInReleaseファイルの書式の方なので、もうちょっと検討する。Valid-Until: Tue, 15 Jan 2019 20:29:52 UTCのようにValid-Untilがあるのが普通と思ったが、Stretchだとないな…「存在しなければOKを返す」が必要そうだ。  DSA-4364-1が出た。お疲れ様でした。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 眠れなくなってしまったのでsnapperパッケージのミス修正とR3いれてアップロード もう月曜日だ！ということでdebootstrapのアップロードを上げる 某所の喧々諤々のメールのやり取りに辟易して「おまらディスカッション好きなの結構だがな、とっととコード書けやコラ」というメールを送ってしまう。ふー。 os-autoinstのperltidyの問題、バージョン間の非互換性によるものだった  で、amd64でのビルドは通ったのでi386でやったらまたも同じエラー…仕方がないのでチケットを上げた  先日のsecurity update、「前のパッチにノイズがー」と言われて「？？？」となったが、よく見たらgit-buildpackageによるpatchへの変更が入ってた…取り除いてsecurity-masterへアップロード。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>snapperパッケージのbug triage  報告から３年、moreinfoタグ付けて「もっと詳しくー」と書いたのに何も有用な話が無いバグを閉じた 「snapshotでディスクフルになるー」は、0.8.0からどうやら新しいオプションが増えて有用そうなので「これで解決しない？」と聞いてみる その過程でmanで書いてあることとconfigで書いてあることが違うのを見つけたのでpull requestして、パッケージの方に当ててアップロード  debootstrapの変更をpush ruby-なパッケージのtest failed、佐々木さんのblogにあった「test/ 以下で実行されることを前提として, 相対パスで必要なライブラリを読み込んでいたりする gem とか?」ということやね。  ということで、ruby-netrcパッケージについてrequire_relative に書き換えて実施してみる。あとで結果確認しよう…   昨日のos-autoinst、対象アーキテクチャを絞ったつもりで忘れてた…アップロード…ぬぉぉ i386アーキテクチャでFAIL: 01-test_needle.tとテストに失敗するぞ…、手元のsbuildでも同じだ…以前は問題なく通ってたのにどうなってんだ？
not ok 14 - found area is the original one too # Failed test &#39;found area is the original one too&#39; # at ./01-test_needle.t line 73. # got: &#39;944&#39; # expected: &#39;108&#39;  うーん。
とはいえ、upstreamでは直ってるかもしれないよな、と１年間タグが打たれてないupstream HEADをmergeしてビルドする…とテストがコケまくる。一つは依存関係のパッケージが無かったのでいれたのだけど、もう一つのMojo::IOLoop::ReadWriteProcessはパッケージ自体がDebianのリポジトリにない…仕方がないからdh-make-perlで手元で作ってITP(intend to package)して、アップロードした。
で、libmojo-ioloop-readwriteprocess-perlパッケージをテスト環境のchrootに突っ込んでビルドの様子見るか…としたら、やっぱりFAIL: 03-testapi.tとエラーが出る。
^* matches null string many times in regex; marked by &amp;lt;-- HERE in m/^* &amp;lt;-- HERE \.</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/05/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/05/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>倉敷さんのgoldencheetahパッケージの状況をヒアリング。
 libusb0.1に依存しているが、libusb0.1はもう古いからDebianから消したいよねという動きがある。 でもgoldencheetah側としては「マルチプラットフォーム対応してるので、壊したくないよね」なのでlibusb1.0に動くのは消極的 libusb-compatという「libusb1.0のwrapperで0.1相当の動きをする」のがあるから、これを使えば？という流れはある。  ただし、goldencheetahでは「使うようにしよう」というPRが来ているものの実装はされてない感じ Debian側もdeadからhalf-deadになるだけじゃね？というコメントもある。 個人的にはhalf-deadならいいじゃん、と思うけど… ちなみにlibusb-compatはDebianではパッケージになっていない  ついでの気晴らしにdebianディレクトリ以下をレビューしてmerge requestを送った。要点は以下の感じ  最新のdh12に更新、不要になったファイルやオプションを消す insecureなgitプロトコルやhttpをhttpsに置き換え debian/watchはv4形式にして簡易に書ける  cosmetic changesなわけだけど、パッケージの「メンテナンス」ってそんなもんですよ、っと。これが最初の「パッケージング」だと色々と技術的にどう対処するか？の問題を解く感じになる。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>“debhelper-compat (= 12)” is now releasedを読む。Rules-Requires-Root support when the field is set and dpkg-dev notifies debhelper that it supports the feature (requires dpkg-dev from Debian buster). Besides removing the need for (fake)root it can also remove about 3 invocations of debian/rules.との記述。Rules-Requires-Root: noのようにするとfakerootの起動とdebian/rulesの呼び出しが無くなって早くなるぜ、ということらしい。
試しにdpkg-devをBuild-Dependsにしてみたら
E: os-autoinst source: build-depends-on-build-essential-package-without-using-version dpkg-dev [build-depends: dpkg-dev]  あら。。。dpkg-dev 1.19.0からサポートのようなので修正。しかし、ビルドにroot権限が必要なパッケージのほうが少なさそうだから、これはnoをデフォルトにしてRules-Requires-Root: yesを明示的に宣言させるほうが良くないかね？と思ったので質問してみた→やはりそのようだ。しかし、それを実装するとなると対応パッケージが多数になってしまうだろうという懸念がある模様。
 上記の変更その他を加えてos-autoinstパッケージをアップロード。RCバグはseverityを下げておいた。 debootstrapパッケージ、夏に作業して放置してたMergeRequestを変更を追加してMergeした。git rebaseなんて初めて使ったぞ。反応を様子見してから月曜にでもアップロードするかな。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/04/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>倉敷さんがビルドマシンが家のNASで遅いという話をしていたので、CloudGarageさんの開発者支援制度でお借りしているホストを一台セットアップして渡した。外堀を埋める方向。</description>
    </item>
    
    <item>
      <title>debootstrapを速くするには</title>
      <link>https://henrich.github.io/blog/2019/01/04/debootstrap%E3%82%92%E9%80%9F%E3%81%8F%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/debootstrap%E3%82%92%E9%80%9F%E3%81%8F%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</guid>
      <description>debootstrapは最低限のDebian環境の作成に使われるツール。pbuilderやcowbuilder（とその環境を使うpiuparts）などのツールの裏側でも動くし、dockerイメージの裏側もコイツ。ちなみに環境構築にはリポジトリから必要なパッケージを取得してくるので、それなりに時間がかかる（しかも最初はaptも使えないのでwgetで取得するんだぜ？）。うーむ。
で、どうやって時間を短縮するか？というと、以下のような選択肢がある。
 ローカルミラーをセットアップしてそれを参照する ローカルプロキシをセットアップしてそれを参照する ローカルキャッシュをセットアップしてそれを参照する   1のミラーはまるっとDebianリポジトリをコピーするやり方。  クライアントが何十台、スペックによっては何百台とかあっても対応できる どのパッケージでもLAN内にあるので取得が早い でも、ミラーを構築するには最低でも数百GBのディスクを使うことになるし、更新も追随するとなるとそれなりにトラフィックが生じる ぶっちゃけオーバースペックすぎる。牛刀をもって鶏頭を裂く、的な。 あと、必ずそのミラー参照するようになるので、Laptopで作って移動したときには面倒になるかも 構築するならftpsync使おうね。他のツールはダメダメ。  2のプロキシはsquidなどのサーバーを立てるやり方。  取得したパッケージだけをキャッシュするのでディスク容量がミラーより格段に少なくて済む ミラーと同様に複数のマシンからも参照可能 debootstrap 1.0.96からsquid-deb-proxy-clientをインストールしておくと、squid-deb-proxyで立ち上げたプロキシサーバーを自動的に参照するようになる。apt-cacherなどだと一々プロキシがどこにあるのかを指定しないといけないので、squid-deb-proxyマジおすすめ  3のキャッシュは--cache-dirオプションを使って、適当なところにキャッシュしておいたdebパッケージを参照するやり方。`  debootstrap 1.0.97から実装済み。一台だけでやるならこれで十分。 --cache-dir=/home/henrich/tmp/cachedirというように、このオプションでは絶対パスで参照するのが必要。~/tmp/cachedirの様な指定はできない。   あと、リポジトリのミラーはdebootstrap 1.0.85からdeb.debian.orgを参照するようになっている。これはFastly提供のCDNだけど、個人的には自分が運用しているdebian-mirror.sakura.ne.jpを使っている。これは異常があったらすぐ気付くように、というドッグフーディングの側面もあるが、利用者がそんなに多くないので快適だということもある。もっと使っていいのよ？
最後に、記述時の最新であるdebootstrap 1.0.112はMr.FAIことThomas Langeさんのハックによってパッケージ依存関係の最適化（これもaptが使われてはいない）が図られているので、随分と時間が短縮されている。
結論：debootstrap 1.0.112以降を使おう。debootstrapはshell script＋embedded perlコードというアレなやつなので、環境依存が極小であり、どのバージョンでも動くよ。バグがあったら教えてくださいな。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Ultimate Debian DatabaseのBug search Cleaner viewから。
 xfce4関連パッケージがメンテナアドレスがaliothの消滅に伴う無効化されたもので、experimentalでは直ってるというしょーもない状態だったので状況を調査。  どうやら4.13というupstreamではdevelopment releaseな奴でアップデートしたからunstableに放り込むのがためらわれてるようだ fedoraとxubuntuはそれでも4.13リリースをぶち込んだ模様。 というのを踏まえて「どーする？」という質問を投げた→「わかってる、4.14がリリースされたらそれを入れる」という回答。んーしばらくは放置か…。  uglifyjsのFTBFS、experimentalでは直ってるよ、という話  semver（セマンティックバージョニング）でわかるように大幅に変更されてるから、依存関係で不具合でるんじゃね？という理由でexperimentalに隔離されているようだ では、ということでお手軽にapr-rdependesで依存パッケージの確認 emscriptenは内部に古い古いuglifyjs持ってるみたい… lavaはソース落としてみたけど、バージョン指定の情報は特に無し。 node-grunt-contrib-uglifyは新しいバージョンならサポートしてる node-uglifyjs-webpack-pluginも新しいバージョンならサポートしてる ruby-uglifierも新しいバージョンならサポートしている というのを踏まえると、node-grunt-contrib-uglify、node-uglifyjs-webpack-plugin、ruby-uglifierを最新バージョンにしてexperimentalに上げる、がいいのかな。    powermockがJava9ではビルドできないけど、新しいupstreamバージョンならOKよ、という話  やってみようとしたらビルドシステムからまるっと変わっていて（maven→gradle）、どうしようかな、というところ。gradle全然使ったこと無いのよね… Debian Wikiのページにあった。gradle-debian-helperパッケージをBuild-Dependsに加えて、debian/rulesでdh $@ -with buildsystem=gradle&amp;hellip;って間違ってるやん--buildsystem=gradleだよね…。   * What went wrong: A problem occurred configuring root project &#39;powermock&#39;. &amp;gt; Could not resolve all files for configuration &#39;:classpath&#39;. &amp;gt; Could not resolve org.springframework.build.gradle:propdeps-plugin:0.0.7. Required by: project : &amp;gt; No cached version of org.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ruby-netrcパッケージのバグのtriage。どうもテストケースがbuilddだと問題になるようだ（これは後に間違いだと気付く）。assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_pathが以下のような結果になる。
1) Failure: TestNetrc#test_missing_environment [/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/test/test_netrc.rb:203]: --- expected +++ actual @@ -1,2 +1 @@ -# encoding: ASCII-8BIT -&amp;quot;/&amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;/.netrc&amp;quot; +&amp;quot;/build/.netrc&amp;quot;  &amp;lt;&amp;lt;PKGBUILDDIR&amp;gt;&amp;gt;なんて変わった値が放り込まれてしまっている?…と思ったら、これは「builddでのログ出力で置き換えてるだけ」なのか。手元でビルドする時はcowbuilderでやってしまっていたので、sbuild環境を用意するのにも時間が&amp;hellip;あれ？sbuildでも普通にビルドできちゃった。というか、builddでも以前にビルド自体は出来てるのか…。はてな？
バグレポートを再度よく読み、テスト部分を再確認。
def test_missing_environment nil_home = nil ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;] assert_equal File.join(Dir.pwd, &#39;.netrc&#39;), Netrc.default_path ensure ENV[&amp;quot;HOME&amp;quot;], nil_home = nil_home, ENV[&amp;quot;HOME&amp;quot;] end  default_pathでgrep…。
def self.default_path File.join(ENV[&#39;NETRC&#39;] || home_path, netrc_filename) end  あー、これだ。NETRCが存在しない場合にhome_path、つまりは上記のエラーになる環境では/buildが指定されてるのにもかかわらず、ビルドをしているDir.pwdは別、ということだろうな。さて、どういうふうにして回避するかね…
p nil_home p ENV[&amp;quot;HOME&amp;quot;] p Netrc.home_path  とすると
&amp;quot;/home/henrich&amp;quot; nil &amp;quot;/build/ruby-netrc-0.11.0&amp;quot;  が返る。あれ？予想と違う。home_pathは/build/ruby-netrc-0.11.0なのか。ENV[&amp;quot;HOME&amp;quot;]がnilであっても問題なし、ということを言いたいとすれば以下のようにするのが良さそう
--- a/test/test_netrc.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ubuntu-keyringパッケージの変更の続き。build時にもファイルチェックをするようにしたり。shellscriptではtempdir=`mktemp -d`のようにしてtempdirを指定したのだけど、makeでは$$tempdirが空になるので、$(CURDIR)/debian/tmp 決め打ちで逃げた…どうやるのがいいんでしょうねぇ？
autopkgtest実施時にパッケージの分割・リネームの結果、パッケージリポジトリに該当のパッケージがなくてパッケージを引っ張ってこようとしてエラーとなるという予想外のエラー。気付くまでにまたしても時間を要した。とりあえずsudo cowbuilder --login --inputfile a.deb --inputfile b.deb --save-after-execとしてchroot環境に入りapt install /buildd/a.deb /buildd/b.debなどとしてローカル環境に加えて様子見→エラー解消。やれやれ。しかし、これを失念してその後でpiupartsでパッケージチェックしたらdebconf関連ファイルがそのまま残ってるぞ、というエラーになって苦悶した（sudo cowbuilder --createしなおして対処）。
 パッケージを分割した インストールするkeyringをUbuntuのパッケージを参考にして変更した debconfで質問される /etc/apt/trusted.gpg.d にsymlinkを張るkeyringをUbuntuのパッケージを参考に調整した autopkgtestをまともなものにした build時にもautopkgtest相当が動作するようにした  今回の変更はこんな感じか。パッケージ分割で新しいバイナリパッケージが増えるからNEW queue待ちに。どれだけかかるのかな。。
そしてアップロード後もエラーを踏む。
Source-only uploads to NEW are not allowed.  なんと、そうだったのか。最近はarch=allパッケージとかも手元でビルドしたバイナリではなくbuilddでビルドしたものを、と思ってgit-buildpackageのオプションで--git-pbuilder-options=&amp;quot;--source-only-changes&amp;quot;などとしていたのが仇に。
 淡々とjcodingsパッケージをアップデート。 grcompilerに投稿されてたパッチをマージ。自分の作った地雷を踏むという失態を。  upstreamが4.3を出してるのだけど、これをマージした所ビルドも通らない代物だったのでそのまま放置してたのを忘れてパッチを当ててビルドが通らないものとして悩んでしまった。一旦debian/4.2ブランチを作ってこっちに。 で、全部終わってpushしようとしたらrejectされる…って他のメンテナが変更を加えてた。変更をgit format-patchして一旦逃してから全削除→git cloneして当て直し。そしてメンテナの作業ミスを見つけて直すなども。やれやれ。    </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2019/01/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ubuntu-keyringパッケージの変更の続き。Ubuntu側と内容を合わせる形に変更で、パッケージを増やしたり。.installファイルの指定が微妙でインストールされるファイルが被ってしまう問題、[0-9]*で数字だけ指定されるかと思ったら、そうでなかった。。。
keyrings/ubuntu-keyring-[0-9]*[!a-z]-archive.gpg usr/share/keyrings/  というようにした。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 先日のMerge Requestに「amd64 specificで指定してるけど、これi386でも動くんじゃない？」というコメントがメンテナから来たのでx86指定に変更した→マージされました。 昨日のruby-loofahパッケージの更新で脆弱性修正したのだが、Debian9 &amp;ldquo;stretch&amp;rdquo;では変更をbackportしないといけない（まぁ、Debian Security Advisoryを出すほどでもない＝no-dsaと見なされる可能性もあるけど）。根本的な変更はword１個消すだけ＋XSS対策の追加コードだけだったので、作業してセキュリティチームに連絡だけしといた。 なんかKernelで問題が起きてるぞ、これは意図的なのか？というバグレポートを横目で見たので、以前の省電力化Kernel configパッチの影響であり意図的なものだということだけを伝えるreplyをした（changelogにきちんと書いたんだがな…）。その際、大元のFedoraでの変更をしたRHの人にCC入れておいた。 ubuntu-keyringパッケージを最新に更新。もうちょっと待とうかとも思ったのだけど、testが壊れたものをアップロードしてたのと前のアップロードの鍵はチェックでfailする謎の状態だったので。  次はUbuntu側とパッケージ名を合わせる変更を入れ込むかね…   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>Debian10 &amp;ldquo;buster&amp;rdquo;リリースの障害となるRelease Criticalバグ一覧から簡単に直せそうなのを探して作業。
 ruby-slimパッケージ、New upstream version導入でFTBFS修正 ruby-sinatra-contribパッケージ、New upstream version導入でFTBFS修正 ruby-loofahパッケージ、New upstream version導入でCVE修正  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>１文字でFTBFSが直せるやつだったのでやっといた</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>たまたまbug reportを見かけてmerge request作ったほうが話が早い奴だと思ったのでやっといた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debian-installerのコンポーネントの一つ、partman-lvmでのバグ修正が含まれたパッケージがようやくアップロードされた。
もう一つ、重要なコンポーネントのdebootstrapの昨日の変更だけど、リリースマネージャーが難色を示しているのでamd64以外でもチェックすることに。
 手元の放置してたBBBを設定、参考ページを元に初期化し直し stretchベースのイメージをSDカードに。ちなみにxz圧縮したままで展開せずに書き込めるのでGNOMEなかなか優秀である。 ２つ前のバージョン（1.0.110~bpo9+1）のがstretch-backportsに入ってるので、そちらをインストールして stretch / buster / sid のchroot環境を作る。あとは各環境で dpkg --get-selections &amp;gt; distro.txt のようにしてパッケージ一覧を作成。次にunstableから debootstrap 1.0.112 を入れて同じことを繰り返し。この後で diff をとってそれぞれのchrootで違いが出てるのかどうかをチェックする、という流れ。しかし、SDカードへの書き込みは遅く、マシンも非力なためにめっちゃ時間が…  ちなみにBBB＝armhfアーキテクチャでも特に変化は見られませんでした。そりゃそうだ、と思うのですが…  あとはarm64アーキテクチャであるdebian.orgのporterboxマシンにsshログインしたものの、password設定わからず（どうなってるんだっけ？）sudo出来なかったのでこちらは明日以降で…  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>debootstrapをアップデート。Mr.FAIのハックによってスピードが格段に速くなった。一応、前のバージョンと比較して取得パッケージの差異が無いのは確認済みだが、なんかregressionがあるのも嫌なので Planet Debian にも載ってるblogで告知もしておいた。</description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/22/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>アップロードがrejectされてたので
$ dcut dm --uid 0x9394F354891D7E07 --allow fonts-mmcedar Uploading commands file to ftp.upload.debian.org (incoming: /pub/UploadQueue/) Picking DM Youhei SASAKI &amp;lt;uwabami@gfd-dennou.org&amp;gt; with fingerprint 66A4EA704FE240558D6AC2E69394F354891D7E07 Uploading henrich-1545485367.dak-commands to ftp-master  として佐々木さんのDM uploadを設定しておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>作業途中で夏から放置してたubuntu-keyringパッケージをアップロード。debconfを使ってデフォルトではtrusted GPG keyringとしては扱わないように変更。
さらにnew upstream release対応を手元で作成。Ubuntuでのrulesを見るとGPGファイルのチェックをしてたので、それを参考にしてautopkgtestを追加。いろいろGPGのオプションを指定する必要があった。
 --trusted-key &amp;quot;$trusted_keyid&amp;quot; のようにして署名鍵を信頼しないとエラーになる。通常なら自分のtrustdbに追加されてる感じだけど、テスト環境にはそんなのはないし、fetchするのもネット環境必須になってしまうので。もう一つの解としてはローカルに落としておく、だけど、それは大仰かな。 --no-auto-check-trustdb を付けないとtrustdbのチェックにやたら時間がかかるので  先日、camlimagesパッケージの変更をmerge requestしたのだけど、最小なテスト作っても意図通りにならなかったな、ということだけ覚えていたのでメモしておく。何をどうやったのか、は思い出したら書こう…
fonts-kanjistrokeordersパッケージをアップデート
久々にinstallation guide訳を更新。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> tdiary-contrib の tdiary-mode が Release Critical bug が出ていたのが解消できてないのをメーリングリストに投げたのだけど、実は依存パッケージ起因で tdiary-mode 悪くなかったという。直してもらってめでたしめでたし、なのだが、さらに elpa の管理下にしてもらうといいなーと言ったら佐々木さんがパッチ書いてくれて更新してくれた。言ってみるもんだね。 bundlerの git ls-files -z が何故使われるのか？という疑問。「git管理下にないファイルを含めないため」という理由では？という意見を頂いた。うーん、そうするとupstreamでのDirで置き換えは厳しいか…。かと言ってgitを使うのもsourceパッケージを展開してのautopkgtestではエラーになるよね…地道に対応するしか無い？それは負けな気がする…。  </description>
    </item>
    
    <item>
      <title>initfamrs-toolsのバグを踏んでいた</title>
      <link>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</link>
      <pubDate>Thu, 20 Dec 2018 13:16:51 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/20/initfamrs-tools%E3%81%AE%E3%83%90%E3%82%B0%E3%82%92%E8%B8%8F%E3%82%93%E3%81%A7%E3%81%84%E3%81%9F/</guid>
      <description>先日btrfsが破滅して入れ直しをしたThinkPad、久々に再起動してみたらkernel panicに。？？？と思って一つ前のカーネルで試すとそちらもkernel panic。最後に一番古いカーネルでbootを試したら上手くいった。
？？？と思って調べてみると、どうやらinirdの行が存在してない…ってinitramfsなファイルがbootしたカーネル以外では存在してない！ということでinitramfsの作り方を調べて sudo update-initramfs -c -k 4.9.0-3-amd64 のようにしてみる…が、何も起こらない。エラーも起きない。何か設定が必要だったりするのか？といろいろ探し回った末に奇妙なことを見つけた。
$ LC_ALL=C ls -al /usr/sbin/update-initramfs* lrwxrwxrwx 1 root root 9 Oct 24 11:14 /usr/sbin/update-initramfs -&amp;gt; /bin/true -rwxr-xr-x 1 root root 7093 Jul 26 02:16 /usr/sbin/update-initramfs.distrib  あかんがなー！！！どうやらupdate-initramfs.distrib側が本体だろうな、と sudo update-initramfs/distrib -c -k 4.9.0-3-amd64 のようにすると無事にイメージが作られたので、update-grub を実行して変更を反映、再起動すると無事起動できた。更に調べたところ
$ dpkg -L initramfs-tools (snip) diverted by pkgsel to: /usr/sbin/update-initramfs.distrib  ということで pkgsel なるパッケージがこれを実施したことが判明。 じゃぁ、と apt show pkgsel しても出てこない…あ、これはudebだね、ということでサイトを確認…あたり。 apt source pkgsel して debian/changelog をみたら Bug#912073 を踏んでいたと判明。んもー。寝る前の貴重な時間が…</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 水野さんのsilversearcher-agパッケージをアップロードした。  あわせてsalsa.debian.orgにリポジトリを追加し、権限を付与した さらにsilversearcher-ag-elも追加  birdfontパッケージをアップデートした  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-rspec-instafailパッケージをアップデートした ruby-childprocessパッケージをアップデートした twitterで不具合話を拾ったので、fonts-unfonts-coreパッケージをアップデートした  fontforgeコマンドの指定で Open(&amp;quot;UnDinaruLight.ttf&amp;quot;) のようにくくってやらないとエラーになることに気付くまでに時間を要してしまった…。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/12/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ruby-arubaパッケージをアップデートした。
autopkgtestが debian/control での Testsuite: autopkgtest-pkg-ruby 行を起点として実施される（実際は debian/ruby-tests.rake ファイルが実行されるのかな？）のだけど、この際に gemspec ファイルの中身が実行される。ところがここで git コマンドを使ってファイルの有無を確認するという形になってしまっていて、git への依存関係がないのでコケるという悲しい状態だった。
s.files = `git ls-files`.split(&amp;quot;\n&amp;quot;) s.test_files = `git ls-files -- {spec,features}/*`.split(&amp;quot;\n&amp;quot;) s.executables = `git ls-files -- bin/*`.split(&amp;quot;\n&amp;quot;).map{ |f| File.basename(f) }  しかもどうやらこれはbundlerの雛形がそうなってるという…何なんだRuby。daiさんに Dir 使うというのを教えてもらってパッチを作って対処、Bug#910953をクローズ。
diff --git a/aruba.gemspec b/aruba.gemspec index c6ac3e7..1581e98 100644 --- a/aruba.gemspec +++ b/aruba.gemspec @@ -40,9 +40,9 @@ With aruba &amp;gt;= 1.0 there will be breaking changes. Make sure to read https://gith EOS end - s.files = `git ls-files`.</description>
    </item>
    
    <item>
      <title>Retrospective 2018 11 26</title>
      <link>https://henrich.github.io/blog/2018/11/26/retrospective-2018-11-26/</link>
      <pubDate>Mon, 26 Nov 2018 12:09:56 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/11/26/retrospective-2018-11-26/</guid>
      <description>すっかりかまけてしまったので、思い出しつつ何やったかとか…。
 debian-mirror.sakura.ne.jp のIPv6逆引きの設定変更を依頼されたので、さくらさんに依頼→受理された eclipseパッケージの削除依頼が登録されたため、依存するパッケージであるPleiadesも削除依頼が登録された。正直複雑な心境。  Eclipseを再パッケージしなおせばいいのだろうが、どうやるのかさっぱりだよな…  psphereパッケージを削除。これは問題なし。 fonts-sawarabi-minchoパッケージを更新、単にフォントファイルが指定位置にあるかを確認するだけというsmokeテストを追加。これ、フォントファイルとして認識できる（壊れてない）というのも追加したほうが本当は良さそう fonts-ibm-plexが追加された、というのを見て中身をチラ見したらdebian/upstream/metadataファイルが追加されてた。これは真似ると良さそう  その流れで他のパッケージのdebian/upstream/metadataファイル見てみたら、saneのがalioth指定したままだった…のでmerge request  snapperパッケージの更新。Wikiを参考にして、debian/upstream/metadataファイルを追加してみた。  ついでにbackportsパッケージも生成。 水野さんにmetadataの作り方をpingしておく  libuninameslistパッケージの更新。  しかし、python bindingが有効になっていない…configure.acではpythonの所在を確認している。 これもmetadata作るか？  メールを投げてみる→「unstableを快適にするのじゃなくて、freezeを改善する方に力入れようぜ！」というような反応。  Todo の書き出しとか…。
 Natural Language Processing (Japanese) &amp;lt;team+pkg-nlp-ja@tracker.debian.org&amp;gt; 配下になっているパッケージ、少なすぎ？と思ったら &amp;quot;Natural Language Processing (Japanese)&amp;quot; &amp;lt;team+pkgnlpja@tracker.debian.org&amp;gt; もあった。どっちの表記が正しいのだ？本来であればidentiferの部分で-が含まれていてもきちんと処理されるのが理想なはずだが。  trackerページを作り直してみた。  mecab-ipadicとか、辞書パッケージの統一した扱いを何とか…  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/10/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> [jcodings]()と[jruby-joni]()のアップデート。jcodingsではメンテナアドレスを戻した際に書き間違えるというポカをやらかして、慌てて再アップロードした。jruby-joniはアップロード後にさらにupstreamが新しいバージョンを出しているようだったので、こちらは後日対処予定。 os-autoinst、arm* やら mips* などでテストがコケるのだが何故だろう？と思って手元のBBBでテストしたが、qemuを起動している時にメモリサイズが足らなくてqemuが立ち上がらずにテストが実行できずにエラーになってしまった…builddの方は問題なく動作しているので、手元での問題。ログでwgetがらみのエラーが出てたところがあったので、build-dependsに追加してみたが、はてさて。  </description>
    </item>
    
    <item>
      <title>DDのおしごと</title>
      <link>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/10/01/dd%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>依頼を受けたので
$ dcut dm --uid 0xD22C1A883455D448 --allow fcitx-dbus-status fcitx-imlist gntp-send groonga growl-for-linux hal-flash libsylph sylfilter sylph-searcher sylpheed groonga-normalizer-mysql  として林さんのDM uploadを設定しておいた。</description>
    </item>
    
    <item>
      <title>HP Elitebook 830 G5で苦しむ</title>
      <link>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/26/hp-elitebook-830-g5%E3%81%A7%E8%8B%A6%E3%81%97%E3%82%80/</guid>
      <description>debian-installerが何をやっても画面がブランクになってしまってDebianがインストールできないという。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontパッケージ、kfreebsd-i386とkfreebsd-amd64で同じエラー…。  rm debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf rm: cannot remove &#39;debian/birdfont/usr/share/birdfont/Roboto-Regular.ttf&#39;: No such file or directory make[1]: *** [debian/rules:20: override_dh_auto_install] Error 1  なぜエラーになるのか？ debian/rules をちょっと直して様子見するか？…と思ったが、既にdebian/patchesで削ったのを準備済みだったのでアップロードした
 vmdk-stream-converter の tag push を忘れていた… libsql-splitstatement-perl を更新 libdbix-class-optimisticlocking-perl を更新 libdbix-class-schema-config-perl は Perlのバージョンアップに伴ってだろうか、モジュールが欠けてたので追加。  $ cat debian/upstream/metadata --- Archive: CPAN Contact: Brian Phillips &amp;lt;bphillips@cpan.org&amp;gt; Name: DBIx-Class-OptimisticLocking Repository: http://github.com/brianphillips/dbix-class-optimisticlocking  debian/upstream/metadata はこういうのを書くのかぁ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>os-autoinstパッケージを放置していたので、アップデート作業を実施。
 upstreamをpullしてdebian/sidブランチにmerge ビルド…するも、testでエラーが出る。しかもランダム。どうも test が serial に実施される前提で書かれていて、ある test での input file が別の test でも使われてたりする＆その test 実施後に削除されたりするので、順序によっては input file が存在しない、ということでエラーになったりするようだ。仕方がないので --no-parallel オプションを dh_auto_test につけて make -j1 で実行されるようにする それでも 02-test_ocr.t だけがコケ続けたりする（上記の際にはごくごく稀にだが成功したりする…）。t/02-test_ocr.t.log を見てみる…。  FAIL: 02-test_ocr.t =================== Use of uninitialized value in index at ../needle.pm line 44. Use of uninitialized value $bmwqemu::vars{&amp;quot;PRJDIR&amp;quot;} in addition (+) at ../needle.pm line 45. [2018-09-24T07:08:55.0584 UTC] [debug] MATCH(bootmenu-ocr.ref:1.00) Tesseract Open Source OCR Engine v4.0.0-beta.4-50-g07acc with Leptonica Warning. Invalid resolution 0 dpi.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> vmdk-stream-converter が、aliothを指したままだったのでとりあえず更新。python2依存なんだよね、patchはあるのでupstreamが対応してくれないものか。 sphere はupstreamが開発停止＆VMWare自体がライブラリを出していてそちらは既にDebianにあるのでそちらを推す格好で削除依頼。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/09/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> jcodingsが何故か細かくバージョンアップが繰り返されたので追従。1.0.34が&amp;ndash;deleyedでまだ入ってなかったので、それが入ってからになるように調整。 jruby-joniも同様。patchのrefreshが面倒くさい。最新のjcodings依存になっているようなので、ビルドはまだ。  </description>
    </item>
    
    <item>
      <title>OSSummit Japanでボランティアスタッフした</title>
      <link>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/06/26/ossummit-japan%E3%81%A7%E3%83%9C%E3%83%A9%E3%83%B3%E3%83%86%E3%82%A3%E3%82%A2%E3%82%B9%E3%82%BF%E3%83%83%E3%83%95%E3%81%97%E3%81%9F/</guid>
      <description>6&amp;frasl;20-22で行われたOpen Source Summit Japanでのボランティアスタッフに参加してきました。会場の様子は公式の写真（その２）で雰囲気をどうぞ。
 Linusが「プロダクションで使ってるカーネルが7年前ので、次に乗り換えた時に「必要な機能が無くなってる！」とかいうのやめて。継続的にリリースしてるんだからテスト環境でテストしてよ」っていうのはホントそれ、と思った。とはいえ、Debianの場合だと「リリース」という区切りが無くてテスト環境に投入しないのはあるのじゃないか？という思いもある。やはりbuster~pre-release-2018-06みたいな月で無理やり区切ってでもsnapshotリリースすべきだろうか。どうしたらもっとテストしてもらえるようになるか、を考えたほうがいい。 CIPはDebian LTSに協力が進んでいるけど、もっとコラボレーションの要素を増やしたいね&amp;hellip;。CIPに関わる人にパッケージングのレクチャーとか？ CELFイベントでお会いした方に挨拶できたのは良かった Licenseを考える、というので開発者側のモチベーションをどう引き出すか、という視点は面白いので検討したい。単なる面倒事、と捉えるだけだと「避ける」しか出てこない DNFを拡張してライセンスとかも表示したりとかというのは面白かった。aptだとどうだろうか。そもそもバイナリのライセンスがなにか、というのとソースのライセンスがなにか、というのは完全に同一ではないのだけど（複数のソースファイルが違うライセンスの場合とか複雑）。 LTS kernelはmainline＋8000コミットぐらいあるというところから考えるに、1コミットするのに5万払うとか考えたら4億の価値があるんだな。。。これを自力でやるとなるとかなり辛い。  </description>
    </item>
    
    <item>
      <title>まだdebootstrapいじってる</title>
      <link>https://henrich.github.io/blog/2018/06/26/%E3%81%BE%E3%81%A0debootstrap%E3%81%84%E3%81%98%E3%81%A3%E3%81%A6%E3%82%8B/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/06/26/%E3%81%BE%E3%81%A0debootstrap%E3%81%84%E3%81%98%E3%81%A3%E3%81%A6%E3%82%8B/</guid>
      <description>そういえば、1.0.100, 1.0.101, 1.0.102, 1.0.103, 1.0.104 という感じでdebootstrap直したりバグ埋め込んだりしてましたね。
この中で得た知見&amp;hellip;
 systemdのcontainer環境下かどうかは $container を見ればいい、あるいはsystemdが動作している環境なら /var/run/systemd/container 見る dnsmasq を使うと Proxy DHCP が簡単にできるので、既にLAN内でDHCPサーバーが動いている環境でPXEブートしてみたい、という時に便利（参考にさせてもらったサイト)  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 20 May 2018 12:07:33 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontがビルド依存しているlibgit2でtransitionが予定されてるから、experimentalに置いたパッケージで試して、というバグ登録がされたので、ビルドテスト。
sudo cowbuilder --create /var/cache/pbuilder/exp --distribution experimental sudo cowbuilder --build --base /var/cache/pbuilder/exp --distribution experimental --extrapackages &amp;quot;libgit2-dev/experimental libmbedtls-dev/experimental&amp;quot; birdfont_2.21.1+git8ae0c56f-2.dsc  &amp;hellip;しかし、dpkg-deb &amp;ndash;info で出来上がったパッケージを見てもlibgit2への依存が見当たらない？&amp;hellip;どうやらどこかでlibgit2への依存が無くなっていたようだ、ということで依存関係から削除してクローズにした。
あとは pkg-nlp-ja なパッケージを tracker.debian.org を使ってメールを送るように書き換え&amp;hellip;なのだけど、それに合わせて諸々の更新をしたためにひたすら作業&amp;hellip;。
 chasen darts mecab mecab-jumandic mecab-naist-jdic naist-jdic mecab-ipadic unidic-mecab  unidic-mecabはnew upstream releaseがあるものの、超巨大なデータのため、なんどかローカルの空き容量が０になってしまうと言う&amp;hellip;まだインポートが終わらない。
先日、Fedora28の省電力化のネタを見つけてBTSしたのだけど、linuxパッケージメンテナとしてはGitLabのMerge Requestの方がありがたいよ、と今日やっていたMini DebConfで発表していたのでsalsaでやることにした。
念の為に元々Fedoraで作業したRed Hatの方に質問メールして「このconfigであってるよね？」と確認したところ、サクッと返信いただき、自信を持って作業を進められた。
あとは足りなかった所（調子が悪い時に、どうやってオフにするのか）をメンテナに指摘されて、右往左往して探し回ってdebian/changelogに追加して完了。
diff --git a/debian/changelog b/debian/changelog index ace383d75..ffc538849 100644 --- a/debian/changelog +++ b/debian/changelog @@ -43,6 +43,19 @@ linux (4.17~rc5-1~exp1) UNRELEASED; urgency=medium [ Vagrant Cascadian ] * [armhf] Update mtd-modules: Replace pxa3xx_nand with marvell_nand.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 19 May 2018 22:38:44 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>OSDN側の仕様変更に追随。
 最新バージョンがブラウザ（Javascript）でしか表示されなくなって、uscanで取得できなくなった 要望を出した 対応としてRSS経由での取得が実装された &amp;hellip;ということで debian/watch ファイルを書き換えて取得できるように
opts=&amp;quot;uversionmangle=s/-beta/~beta/;s/-rc/~rc/;s/-preview/~preview/, \ pagemangle=s%&amp;lt;osdn:file url=&amp;quot;([^&amp;lt;]*)&amp;lt;/osdn:file&amp;gt;%&amp;lt;a href=&amp;quot;$1&amp;quot;&amp;gt;$1&amp;lt;/a&amp;gt;%g, \ downloadurlmangle=s%projects/sawarabi-fonts/downloads%frs/redir\.php?m=iij&amp;amp;f=sawarabi-fonts%g;s/xz\//xz/&amp;quot; \ https://osdn.net/projects/sawarabi-fonts/releases/rss \ https://osdn.net/projects/sawarabi-fonts/downloads/.*/sawarabi-mincho@ANY_VERSION@@ARCHIVE_EXT@/ debian uupdate   &amp;hellip;自分でも何やってるか、よくわからなくなる。
 https://osdn.net/projects/sawarabi-fonts/releases/rss が取得元のファイルなのだけど、RSSでxmlなのでHTMLではない。 で、uscan は &amp;lt;a href=&amp;quot;foobar.html&amp;quot;&amp;lt;/a&amp;gt; のような記述から対象のファイルを探している（これに気付くのにしばらくかかった） RSSを pagemangle オプションで無理やり書き換えてa hrefを作り出す これで最新版のバージョン自体は取得できる&amp;hellip;のだが、osdnはミラーサーバーにリダイレクトするので、取得先がそのページのHTMLになってしまう リダイレクト先のURLにdownloadurlmangleオプションで無理やり書き換え。ミラーサーバーはIIJ決め打ちになっちゃうが仕方がない。  ここまでやって、とりあえずfonts-sawarabi-michonパッケージのアップデートをした。
debootstrapのregressionな部分を直す提案&amp;hellip;とはいっても、先方のコードをそのまま頂いて調整するだけなのだけど。 set -- -O &amp;quot;$dest&amp;quot; &amp;quot;$from&amp;quot; &amp;quot;$@&amp;quot; は $@ に -O $dest $from を追加している。shellscriptはこんなふうにも指定できるのね。</description>
    </item>
    
    <item>
      <title>Fedora28のリリースを見て。</title>
      <link>https://henrich.github.io/blog/2018/05/05/fedora28%E3%81%AE%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%82%92%E8%A6%8B%E3%81%A6/</link>
      <pubDate>Sat, 05 May 2018 14:40:09 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/05/fedora28%E3%81%AE%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%82%92%E8%A6%8B%E3%81%A6/</guid>
      <description>Fedora28のリリースノートをつらつら眺めたら、libcurlのリンクをlibssh2からlibsshに変えたよ、というのがあった。へぇ、と思ってDebianでlibssh2に依存しているのを探してみた。
$ grep-dctrl -F Depends libssh2-1 -s Source /var/lib/apt/lists/*_Packages | sort | uniq Source: curl Source: gfal2 Source: guacamole-server Source: libgit2 Source: libpam-sshauth (0.4.1-2) Source: libssh2 Source: libvirt Source: mlterm (3.8.4-1) Source: php-ssh2 (1.1.2+0.13-1) Source: pylibssh2 Source: qemu Source: vlc (3.0.2-1) Source: yuma123 Source: zabbix  curl以外にも幾つかある。で、qemuの様子をみてみたが、今の所何度か提案パッチを書き直しているようで簡単にs/libssh2/libssh/すればいいわけでは無いようである。qemuの場合はパフォーマンスが落ちた、という話も出てる。
ともあれ、curlについてはupstreamが対応済みなのでFedoraがやったのと同じことは簡単にできそう&amp;hellip;ということでBTSしておいた。
 Glibc collation update and sync with CLDRを追いかけると、glibc2.28では取り込まれそうでパッチをDebian側で保持するのも面倒そうだから待ち状態がいいかな。 Timeの更新はまだかなーという感じ Laptopのバッテリ時間改善はカーネル側での変更が4.15で入っていて、どうにかしてポリシーをworkstationでは有効にしている、という感じだろうか？だとするとどうやって対応すればいいのやら。あとでworkstationをセットアップして見るしかないか&amp;hellip;。 Libcrypt replaced by libxcrypt in glibcは、Debianだとlibxcryptがあるけどこれはメンテされてない感じ&amp;hellip;。うーん。upstreamでの話としては https://sourceware.org/ml/libc-alpha/2017-08/msg01257.html で見れるようだ。glibcメンテナにlibxcryptもメンテしてもらうのが良い？ modularityは流石にDebian側でどうする、というのも難しい問題だからパスで&amp;hellip;。  そのうち過去のリリースノートも見てみるか。
&amp;hellip;とりあえずlibxcryptのパッケージを触ってみた。</description>
    </item>
    
    <item>
      <title>VyOSをもうちょっと眺める</title>
      <link>https://henrich.github.io/blog/2018/05/04/vyos%E3%82%92%E3%82%82%E3%81%86%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E7%9C%BA%E3%82%81%E3%82%8B/</link>
      <pubDate>Fri, 04 May 2018 12:03:23 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/04/vyos%E3%82%92%E3%82%82%E3%81%86%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E7%9C%BA%E3%82%81%E3%82%8B/</guid>
      <description>https://github.com/vyos を眺めてパッケージの一つ net-snmp のパッケージリポジトリを見たのだけど、変更点はdebian/rulesでconfigure option1行足してるだけ。issueが無いので質問も出来ないのだけど、これはdebian側で吸収してもらう検討をしたほうが良いのでは？
他のパッケージでもdebian/rulesでvyosの開発環境だったらバージョン番号を変更する、というパッチを書いてるだけだったり&amp;hellip;何のためのパッチなのだ？
これに類することを確認するには
 https://github.com/vyos 以下のリポジトリを全て眺めて、debian/changelogを見てみる？ とはいえchangelogまともに書いてない場合も多そうだから、export して元のバージョンのパッケージとdiffを作る？  </description>
    </item>
    
    <item>
      <title>VyOSと戯れてみた</title>
      <link>https://henrich.github.io/blog/2018/05/03/vyos%E3%81%A8%E6%88%AF%E3%82%8C%E3%81%A6%E3%81%BF%E3%81%9F/</link>
      <pubDate>Thu, 03 May 2018 11:43:52 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/03/vyos%E3%81%A8%E6%88%AF%E3%82%8C%E3%81%A6%E3%81%BF%E3%81%9F/</guid>
      <description>Note: VyOSの使い方とかは一切書いてません。
TwitterでVyOSのビルド説明の最新の場所を教えてもらったので、それに従って作業
$ git clone https://github.com/vyos/vyos-build.git $ sudo debootstrap jessie ./jessie-chroot http://debian-mirror.sakura.ne.jp/debian $ sudo cp -arp vyos-build jessie-chroot/root/ $ sudo chroot jessie-chroot  # cd root/vyos-build # ./configure /usr/bin/env: python3: No such file or directory  debootstrapで作った最小環境なのでそりゃそうですよね、ということでpython3パッケージを追加。
# apt install python3 # ./configure Checking if packages required for VyOS image build are installed Missing packages: sudo make live-build pbuilder devscripts python3-pystache python3-git Missing binaries: Build environment check failed, fix the issues and retry  # apt install sudo make live-build pbuilder devscripts python3-pystache python3-git Reading package lists.</description>
    </item>
    
    <item>
      <title>どうやってバグレポートしてるか、とか...</title>
      <link>https://henrich.github.io/blog/2018/05/02/%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%90%E3%82%B0%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%82%8B%E3%81%8B%E3%81%A8%E3%81%8B.../</link>
      <pubDate>Wed, 02 May 2018 00:07:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/02/%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%90%E3%82%B0%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88%E3%81%97%E3%81%A6%E3%82%8B%E3%81%8B%E3%81%A8%E3%81%8B.../</guid>
      <description>URLは非常に単純で https://bugs.debian.org/&amp;lt;package&amp;gt; とすればバグレポートを参照できる。今回はhttps://bugs.debian.org/git-buildpackage 。querybts git-buildpackageでも閲覧はできるのだけど、バグレポートが大量にあると行ったり来たりして参照するのはブラウザのほうがやりやすいので&amp;hellip;。
ソースの取得は apt source &amp;lt;package&amp;gt; で可能。なのだけど、パッケージ作業をGitで作業してたりすると、まぁHEADに合わせて変更して git format-patch したpatchファイルを送りつけた方が取り込んでもらいやすいのは間違いないので、Vcsで取得。どこにリポジトリがあってどのVcs使ってるか&amp;hellip;は特に考えること無くdebcheckoutコマンドを使う。debcheckout git-buildpackage として取得。
$ debcheckout git-buildpackage declared git repository at https://git.sigxcpu.org/cgit/git-buildpackage/ git clone https://git.sigxcpu.org/cgit/git-buildpackage/ git-buildpackage ... Cloning into &#39;git-buildpackage&#39;...  &amp;hellip;としたのだけど、なんで自前のrepoに保持してるのか。超遅い。通常ならsalsa.debian.org配下なので直ぐなのに、10分経っても全然応答が無い&amp;hellip;仕方がないので、今回はapt source git-buildpackageで取得。
さて、optionでgrepしたりして&amp;hellip;
 $ grep git-component -r ./ ./docs/manpages/gbp-buildpackage.xml: &amp;lt;arg rep=&#39;repeat&#39;&amp;gt;&amp;lt;option&amp;gt;--git-component=&amp;lt;/option&amp;gt;&amp;lt;replaceable&amp;gt;component&amp;lt;/replaceable&amp;gt;&amp;lt;/arg&amp;gt; ./docs/manpages/gbp-buildpackage.xml: &amp;lt;term&amp;gt;&amp;lt;option&amp;gt;--git-component=&amp;lt;/option&amp;gt;&amp;lt;replaceable&amp;gt;COMPONENT&amp;lt;/replaceable&amp;gt; ./tests/component/deb/test_buildpackage.py: &#39;--git-component=foo&#39;, ./tests/component/deb/test_buildpackage.py: &#39;--git-component=foo&#39;, ./tests/component/deb/test_buildpackage.py: &#39;--git-component=foo&#39;]) ./tests/component/deb/test_buildpackage.py: &#39;--git-component=foo&#39;,  あれ？全然引っかかってないね。componentで検索し直して、諸々を見てみるとcomp_typeとかで指定されてるようで、これはoptions.comp_typeから取ってる。んで、これはgbp.confで指定してるのか&amp;hellip;じゃぁ、複数のcomp_typeは存在できないね！という感じ。</description>
    </item>
    
    <item>
      <title>gbp buildpackage --git-componentオプションの罠</title>
      <link>https://henrich.github.io/blog/2018/05/01/gbp-buildpackage-git-component%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E7%BD%A0/</link>
      <pubDate>Tue, 01 May 2018 23:40:33 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/05/01/gbp-buildpackage-git-component%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E7%BD%A0/</guid>
      <description>poppler-dataパッケージは、一般的なパッケージと違ってupstream tarballが複数ある構成（multiple upstream tarball）なので、git-buildpackageが使えなかったのだけど、git-buildpackage側での実験的なサポートが追加されていたので思い立って作業。
まずはGitリポジトリにリリース済みのパッケージをインポートして、salsaにインポート。
$ gbp import-dscs --debsnap poppler-data $ git remote add salsa git@salsa.debian.org:debian/poppler-data.git $ git push salsa --all $ git push salsa --tags  で、manページを参照して実験的な &amp;ndash;git-component オプションの使い方を確認。
$ gbp buildpackage --git-pbuilder --git-pristine-tar --git-ignore-branch --git-component=ai0 --git-component=from-ghostscript   対象となるtarballはpoppler-data_0.4.9.orig-from-ghostscript.tar.xzとpoppler-data_0.4.9.orig-ai0.tar.gzとしてpristine-tarブランチにコミットされている multiple tarballは orig.tarball-.tar.[g|x]gという形で保持されているので、の部分だけを指定  &amp;hellip;というところまでは分かったのだけど、現状ではエラーになる。理由は指定される対象のtarballはtar.gzしか想定していないため&amp;hellip;。なんてこった。（追記：正確には、デフォルトで指定されているcompressionオプション＝gzip以外を見ない。これを変更するにはgbp.confで指定すればいいのだけど、全てのorig.tarballのcompression指定になってしまうので、multiple upstream tarballでcompressionが混在しているパターンの場合は必ずエラーになってしまう&amp;hellip;）
$ gbp buildpackage --git-pbuilder --git-pristine-tar --git-ignore-branch --git-component=from-ghostscript (snip) gbp:error: Error creating poppler-data_0.4.9.orig-from-ghostscript.tar.gz: Pristine-tar couldn&#39;t checkout &amp;quot;poppler-data_0.4.9.orig-from-ghostscript.tar.gz&amp;quot;: fatal: Path &#39;poppler-data_0.4.9.orig-from-ghostscript.tar.gz.delta&#39; does not exist in &#39;refs/heads/pristine-tar&#39; pristine-tar: git show refs/heads/pristine-tar:poppler-data_0.</description>
    </item>
    
    <item>
      <title>遅々として進まず</title>
      <link>https://henrich.github.io/blog/2018/04/29/%E9%81%85%E3%80%85%E3%81%A8%E3%81%97%E3%81%A6%E9%80%B2%E3%81%BE%E3%81%9A/</link>
      <pubDate>Sun, 29 Apr 2018 22:23:46 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/04/29/%E9%81%85%E3%80%85%E3%81%A8%E3%81%97%E3%81%A6%E9%80%B2%E3%81%BE%E3%81%9A/</guid>
      <description>Samsung SSDに/homeを移そうとコピーを実施したが、一晩経っても10GBぐらいしか進まず。これはいくらなんでも遅すぎる&amp;hellip;ということでファームウェアを更新することを決める。
http://www.samsung.com/semiconductor/minisite/ssd/download/tools/ にてファームウェアのisoファイルを取得、マウントしてimgファイルを取り出してさらにそれをマウントしてファイルを取り出し、FreeDOSのブータブルUSBメモリにコピーしてファームウェアのアップデートを行った。以前よりはマシになったが、それでも遅い&amp;hellip;。
古いThinkPad X121eにFedora28Betaを入れたのだが、何故かパスワードが通らなくなっていたので、今度はArchLinuxを入れてみようとする。インストールドキュメントに従ってインストール&amp;hellip;したのだけど、全く起動してこない。何故だ。何度か試したが変わらず。いや、正確には一度だけgrubが起動してくるまでにはなったが、指定されてるUUIDのパーティション見えないよ？というので結局起動せず。
次にUbuntu18.04 Server版を入れる&amp;hellip;jaistミラーから落としたら中身がdebian-installerで変わってない？途中のpartitionerのところ（47%までは進んだ）で進まなくなってしまったので中断して、改めてUbuntu.comから落としたら、こちらのイメージは独自インストーラー版に変わっていた。こちらを試したかったのよね、シンプルでいい感じですね&amp;hellip;とインストールは特にエラーも無く終わったのだけど、やっぱりoperating system not foundで変わらず。何故だ&amp;hellip;。
で、Debian9.4のインストーラーでやったら、普通にインストール終わり→起動したので、これにArchを上書きして完了。パーティションテーブルがおかしかったのだろうけど、d-iがなんとかしてくれた、という感じ。
めも * d-iのメッセージ、〜のロードは「〜の読み込み」でいい気がする * あと全体通して読み返してみたい所
Archはpacstrapとかarch-chrootとか変わったものがあるんだな―という感想。https://git.archlinux.org/arch-install-scripts.git/ にスクリプトがあるようだ。debootstrapよりも技巧的。なにか参考にできる部分があると良いな、ということでメモを残す。
poppler-dataのアップデートが出てた。Fedoraではどうやらpoppler-dataじゃなくて素のAdobe CMapデータをパッケージにしているようなのを先日見かけたので、それを伝えるべくpopplerのメーリングリストでのupstreamのAdobeがアップデートしたよ、という私からのメールには一切反応せず、か。相変わらずだな、popplerの人は&amp;hellip;。multiple upstream tarballの為にどうgitで扱うべか、という感じで未だにVCSには登録してない。
&amp;hellip;debian/changelogの記述間違えた。。。
あと libmojolicious-plugin-assetpack-perl もアップデートしておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 02 Apr 2018 12:51:55 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/04/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> debootstrapはNMUしてたら「普通にアップロードしてよ」と言われ、確認したらrepositoryの権限も貰っていた&amp;hellip;昔に追加されたのかな？とりあえず、アップロード→regression直しの繰り返しをしている。ツールとしての性格上致し方がないが、package外での利用が考慮漏れしてた。  ダウンロード済みの.debファイルを使うようにするパッチも投げた。これで手元ではかかる時間が半分に減ったので、できれば入れたいところ。 その前に既存のpatchを一掃する作業が待っているわけですが&amp;hellip;。  書き忘れていたが xfonts-jisx0213パッケージを木下さんの了解を得てfonts-team配下に移動して更新。 tiarraパッケージをexperimentalに放置してたのでunstableに上げた jcodingsパッケージをアップデート。その２ jruby-joniパッケージ fonts-sawarabi-minchoパッケージ sphinx-intlパッケージをアップデート、patchを入れ忘れていたので再度アップロード   xfonts-* パッケージを fonts-team で引き受けるべく ITA したのだけど、気力が足りなくて作業していない。  </description>
    </item>
    
    <item>
      <title>debootstrap bug triage</title>
      <link>https://henrich.github.io/blog/2018/03/24/debootstrap-bug-triage/</link>
      <pubDate>Sat, 24 Mar 2018 11:29:15 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/03/24/debootstrap-bug-triage/</guid>
      <description> ここしばらくの作業はdebootstrapのbug triageを中心。
 manpageの不備にはパッチ提案 エラーメッセージの不備にもパッチ提案 mawk固定でダメじゃんには、意味あるかな〜と思ってパッチ出したけど「意味ないじゃん、このパッチ」とやっぱりツッコミが。 ダウンロードエラーのメッセージが情報量０には提案パッチ出したけど、それ意味なくね？のツッコミが。もうちょっと続ける予定。 昔と同じ挙動にしてよには「パッチ当てるの反対の人〜？」と質問だけ流した。 libvirt-lxcで動かすパッチにはpatchタグがついてなかったので追加。 &amp;ndash;second-stageで指定したコンポーネント情報が欠落は挙動を確認して該当のソースを提示してコメント。 /homeをvfatなパーティションでマウントしてるとエラー出るは再現できないのでunreproducibleタグ variant=fakechrootが動かないも再現できないのでunreproducibleタグ Android+busyboxで動かないは情報量少なすぎなのでmoreinfoタグ sync指定があるがsync -fの方がいいも理由がわからないのでmoreinfoタグ Ubuntuのchroot作ろうとしてるのにdeb.debian.orgがリポジトリ指定されちゃうのを登録 Ubuntuのchroot作ろうとしてエラーになるのは登録したらLinuxカーネルパッケージのメンテナからamd64だと過去のカーネルと非互換性があるから、というのを教えてもらった apt-moveで作ったリポジトリだとエラーになるのは「SHA1は既に過去のものなので、このために対応する必要あるのかな？」というコメント入れて重要度下げた ChrootでもProxy設定引き継いで欲しいはパッと見でわかるようにタイトルを変えた ダウンロード時にどこからダウンロードしたのか表示して欲しいは「なんで？」とコメントしてmoreinfoタグ blankonというdistro対応してはパッチのリンクが全部死んでたのでmoreinfoタグ udebに不要なスクリプトファイルがあるよねを登録
 TriageではなくNMUを既に準備したのは Bug#864734、Bug#586158、Bug#718632、Bug#754318、Bug#762431、Bug#806780、Bug#833525、Bug#732628、Bug#734324、Bug#775444、Bug#798562、Bug#798564。大半はpatchが登録してあったのでそれを進めてるだけ。ただ、regressionが怖いので小分けにしてNMUし、10日ごとに投入していく予定。先は長い。
   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 07 Mar 2018 20:38:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/03/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>nailgunがjrubyビルドをぶっ壊してたのが見つかったので修正した。
 どうやら maven-debian-helper を使ってる場合は Depends: ${maven:Depends} しないとキチンと依存関係が書かれないようだった。気づいてなかった&amp;hellip;あと、debian/install で指定した以外のファイルも maven-debian-helper が勝手にインストールするようだ  debootstrapをNMUでuploadした。deleyed/10なので10日待つ。
debootstrap (1.0.93+nmu1) unstable; urgency=medium * Non-maintainer Upload. * Use force_md5 for breezy, dapper and edgy (Closes: #659360, #676373) Now you can create Ubuntu breezy/dapper/edgy chroot. * Add Suggests: ubuntu-archive-keyring for debootstraping Ubuntu on Debian. When you fetch Ubuntu packages ubuntu-archive-keyring is necessary. (Closes: #736995) * Change repository URI for old Ubuntu releases (Closes: #676370, #839073) Archived Ubuntu releases are at old-releases.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/03/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 04 Mar 2018 20:52:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/03/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> sylpheedパッケージの更新を放り込んだ sylpheedがJPilotサポートを既に落としてたので関連バグを閉じた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 03 Mar 2018 14:02:31 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/03/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ここしばらくの作業とか。
 林さんの依頼でlibhinawaをインポート birdfontが新しいvalacでコンパイルできない問題をupstreamに報告したら対応してもらえたので、更新してアップロード libmojo-rabbitmq-client-perlパッケージをアップロード libmojolicious-plugin-assetpack-perlパッケージをアップロード debootstrapパッケージと戯れたり。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 24 Feb 2018 19:46:10 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ここしばらくの作業とか。
 jruby-joniパッケージを更新 sphinx-intlパッケージ更新を目論んだが、チームメンテナンスにするためにsalsaに追加依頼。  reproducible buildパッチをupstreamにforward  林さんの依頼でrepositoryをインポート  fcitx-imlist、アイコン追加。 groonga、アイコン追加。 groonga-normalizer-mysql gntp-send growl-for-linux hal-flash  倉敷さんの依頼でrepositoryをインポート  goldencheetah yaskkserv  リポジトリをインポート  tomoyo-tools riece   salsaは二要素認証にしていたのだが、何故かこれが動かなくなった。Laptopでは動作するがこれは困る&amp;hellip;とメーリングリストで訪ねてみた所、systemd(udev) のバグ修正のサイドエフェクトで別パッケージ(libu2f-udev)が明示的に必要になった、ということだった。さらにFirefoxでもU2F使えるよ、という話も得られて塞翁が馬。
salsaのCIでpiupartsを動かしたかったのだけど、どうもdocker上だとfailする。debootstrapがコケる、ということでBTS調べてlxcとかのパッチなどとマージして変更を加えてみた&amp;hellip;のだけど、どうもlxcはテストしたけどlibvirt-lxcはどうなのかという確証が得られなくてdocker向けだけにしてパッチを投げた。
BTSに投稿されてるのを何とかマージして整頓できないかな、ということでFedoraやArchでコケるよ問題のパッチを検証してプッシュしてみたのと、Ubuntuなどの派生distroでコケるぜ、みたいな話を追いかけてみたり。その間で別の問題（fallbackする先が間違ってしまう）を見つけたり、sync -fするのはどうか、という話に首を突っ込んでみたり。
Kaliをサポートするためにコードをシェアできないのかね？というのにパッチしたり、その上でKaliサポートの追加のパッチ投げたり、謎の派生distroの追加要求に「まだ希望してる？」と問いかけたり、Ubuntuで何も言わずにfailするのでSuggests: ubuntu-archive-keyring 追加してみるのはどうか？を改めて押したり。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 14 Feb 2018 21:58:28 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> rieceパッケージを更新 tiarraパッケージの修正が不十分で動かなかったのでもう一度修正してexperimentalへ tomoyo-toolsパッケージを更新  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 12 Feb 2018 08:34:50 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>mirmonパッケージを更新 sylpheedパッケージを更新、Merge Requestもやってみる loquiパッケージを更新  shutterのアップデートが放置されてたので、やってもいい？と聞いてみた。
shutter (0.94-1) UNRELEASED; urgency=medium * Team upload [ gregor herrmann ] * Add libnet-oauth-perl to Recommends. Needed by the Dropbox module. (LP: #1372050) [ Hideki Yamane ] * New upstream release (Closes: #887887) * deian/control - s/perlmagick/libimage-magick-perl/ (Closes: #789236) - set Build-Depends: debhelper (&amp;gt;= 11) - set Standards-Version: 4.1.3 * debian/watch - update to version 4 * debian/compat - set 11 * debian/patches - drop 0002-Force-utf8-for-retrieved-window-name-from-Gtk2.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 11 Feb 2018 15:38:54 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>jruby-joniパッケージをアップデート
jruby-joni (2.1.14-1) unstable; urgency=medium * New upstream release * debian/patches - drop 0002-remove-build-time-for-reproducible-build.patch: merged upstream * debian/control - set Standards-Version: 4.1.3 - update Dependency version * debian/maven.rules - update junit version to 4.x to avoid FTBFS   @Testとしてjunit4以降を指定しているようなのに何故かpom.xmlでは3.xという指定になってる？ということで混乱したのだが、実はdebian/maven.rulesで上書きをしていると言う罠。Java関連パッケージはよくわからんなぁ&amp;hellip;。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 10 Feb 2018 09:11:54 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>xfonts-mplusを更新 xfonts-shinonomeを更新 xfonts-ayuを更新 xfonts-efont-unicodeを更新 xfonts-kanameを更新 xfonts-naga10を更新 fonts-aoyagi-kouzan-tを更新 fonts-arphic-bkai00mpを更新 jcodingsを更新、salsa移行はまだ目処立たず。 nailgunを更新、salsa移行はまだ目処立たず。   xfonts-kappa20を更新&amp;hellip;したのだけど、CIが落ちる
make[1]: Entering directory &#39;/builds/fonts-team/xfonts-kappa20&#39; bdftopcf k20m.bdf | gzip -c9 -n &amp;gt; pcf/k20m.pcf.gz /bin/sh: 1: cannot create pcf/k20m.pcf.gz: Directory nonexistent Makefile:36: recipe for target &#39;pcf/k20m.pcf.gz&#39; failed   確かにpcfディレクトリは存在していないし、作ってる形跡もない。なのに手元ではすんなり通る&amp;hellip;何故だ。対応してCIは通るようになったが謎だ。上げ直した。
sylpheedパッケージをもう少し変更。dh-execの利用の際、installファイルがchmod +xしてなかったら動かなかったのにちょっとハマってしまった。あと、設定しておいた超simple CI設定はdepenencyが変わった時に追随できなくてコケるのであった。。。これも見直しが必要だ。
 * debian/control - add Build-Depends: dh-exec to modify icon files&#39; name * debian/sylpheed.install - install icon files to appropriate locations (Closes: #823018) * debian/sylpheed.dirs - adjust as above * debian/dirs - unused, drop it * debian/sylpheed-debian.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 09 Feb 2018 23:35:23 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>libsylphを更新
libsylph (1.1.0-19) unstable; urgency=medium * debian/patches - add 0005-use-oniguruma-without-onig-config.patch (Closes: #889662) -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; Fri, 09 Feb 2018 23:32:14 +0900  sylpheedを少し変更。不要ライブラリを落として、libsylph同様のバグを修正。忘れないうちにupstreamにも登録
sylpheed (3.7.0-2) UNRELEASED; urgency=medium * debian/control - drop Build-Depends: libdbus-glib-1-dev It was introduced since enchant with zemberek crashes without it in 3.0, however, enchant package was built with &amp;quot;--disable-zemberek&amp;quot; option, so it isn&#39;t necessary. * debian/patches - add 0008-detect-oniguruma-without-onig-config.patch to use libonig-dev properly (Closes: #889971)  sylpheedの依存関係に疑問があったので、Ricardoの意見も聞くべくBTS</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 07 Feb 2018 20:53:43 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>コツコツと事務作業&amp;hellip;。
mecab (0.996-5) unstable; urgency=medium * debian/control - move Vcs-* to salsa.debian.org - use https for upstream Homepage - set Standards-Version: 4.1.3 - set Build-Depends: debhelper (&amp;gt;= 11) * debian/copyright - use https for upstream site * debian/compat - set 11 -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; Wed, 07 Feb 2018 20:45:32 +0900  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 06 Feb 2018 21:00:12 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 1日一つは、ということでdartsパッケージの更新。
darts (0.32-16) unstable; urgency=medium * debian/control - update Vcs-* to use salsa.debian.org - set Build-Depends: debhelper (&amp;gt;= 11) - set Standards-Version: 4.1.3 * debian/compat - set 11 * debian/watch - update to version 4 * debian/copyright - sort order to ignore lintian warning -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; Tue, 06 Feb 2018 20:23:18 +0900   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 05 Feb 2018 22:27:05 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>chasenパッケージの更新。
chasen (2.4.5-40) UNRELEASED; urgency=medium * debian/control - Vcs-* move to salsa.debian.org - use https for Homepage: - set Bulid-Depends: debhelper (&amp;gt;= 10), and drop unnecessary dh-autoreconf dependency (pulled automatically) - set Standards-Version: 4.1.3 * debian/rules - drop &amp;quot;--with autoreconf&amp;quot; - specify &amp;quot;--no-parallel&amp;quot; to avoid FTBFS * debian/compat - set 10 * debian/watch - update to version 4 -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; Mon, 05 Feb 2018 21:47:29 +0900  mecab-ipadicのbuildがdebhelperバージョンが低過ぎでコケてたので、そこだけまずは更新しておいた</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 04 Feb 2018 22:38:35 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>sylph-searcher, sylfilter, libsylph, sylpheed の超カンタンCIを debian/.gitlab-ci.yml でセットアップしておいた
image: debian:sid before_script: - echo &amp;quot;deb-src http://deb.debian.org/debian sid main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list &amp;amp;&amp;amp; apt update -qq &amp;amp;&amp;amp; apt build-dep -y -qq &amp;lt;package name&amp;gt; &amp;amp;&amp;amp; apt install -y -qq dpkg-dev build: script: - dpkg-buildpackage -us -uc -B  sylpheed 他をアップロード
 あれ、libsylphでonigurumaが有効になってない？
libsylph 1.1.0 OpenSSL : yes iconv : yes IPv6 : yes Oniguruma : no  checking whether Oniguruma is available... no   なんでだ？？</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 03 Feb 2018 23:14:20 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> sylpheedパッケージのpatchをforwardしておいた screenfetchパッケージのsmokeテストがさっそくfailしとった。。。。どうやら/proc/fbの値がxen cirrusdrmfbという形になっていたので、/usr/bin/screenfetch: line 1341: [: too many arguments となっていた、と。パッチ作ってアップロードしたけど、upstreamにforwardしようとしたら既に対策されてた。リリースしてほしいなぁ&amp;hellip;。 aliothから、sylph-searcher, sylfilter, libsylphをsalsaにインポート。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 01 Feb 2018 21:04:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/02/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>autopkgtestしたほうがいいよね、ということを考えてはや幾星霜。ようやく手を付けることにする。
まずは実際に追加されたテストのソースとドキュメントを見比べてどうやって実行するのかを調べる…のだけど、古い情報が引っかかってくる…きちんと隔離された環境での実行は後にして、どうやら autopkgtest . -- null をソースディレクトリで実行すると（とりあえずは）良いということのようだ。あと、pbuilder/cowbuilderだと hook スクリプトがあるのでそれを有効にしたら実行される…のはlintianとかと同じですね。
また、古い情報では debian/control に Testsuite: autopkgtest の宣言が要るようだけども、これは dh11 では自動実施なので不要（debhelperいくつで自動実施になったのだろう？ざっとdebhelperのmanpageを見たが不明…）で、逆に warning が出てきた。
単純に debian/tests/control ファイルとそこで定義した debian/tests/smoke ファイルをおけば完了。おもったよりも簡単。。。ではあるが、適切なtestをどう書く？それをどう担保する？みたいなのはあるね。。。
--- screenfetch-3.8.0/debian/tests/control 1970-01-01 09:00:00.000000000 +0900 +++ screenfetch-3.8.0/debian/tests/control 2018-02-01 17:07:09.000000000 +0900 @@ -0,0 +1,2 @@ +Tests: smoke +Depends: @, grep diff -Nru screenfetch-3.8.0/debian/tests/smoke screenfetch-3.8.0/debian/tests/smoke --- screenfetch-3.8.0/debian/tests/smoke 1970-01-01 09:00:00.000000000 +0900 +++ screenfetch-3.8.0/debian/tests/smoke 2018-02-01 16:37:53.000000000 +0900 @@ -0,0 +1,5 @@ +#!/bin/sh + +screenfetch + +[ ! `screenfetch | grep &#39;command not found&#39; &amp;gt; /dev/null` ]  でもやっぱり /usr/share/doc/autopkgtest/README.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 30 Jan 2018 06:41:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> nailgunのPR、ownerが変わって「6ヶ月経ったのでクローズするわ。なんかあったらreopenして」となっていたのでreopenしようとするも、forkしたリポジトリを消してしまっていたせいか、どうやってreopenするのかサッパリ不明&amp;hellip;新しくPR作ったところ、マージされた。これでパッケージ側のパッチがまた一つ減らせる。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 29 Jan 2018 22:50:46 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Sylpheedパッケージのリポジトリをsalsaに作成。過去のaliothのはdebianディレクトリ以下だけで、私には扱いづらかったので、別の独立したリポジトリとして含めている。
$ git checkout --orphan mones $ git rm --cached -r * $ rm -r ./* $ git pull alioth master $ git push salsa mones   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 28 Jan 2018 09:16:36 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>qrencodeパッケージをsalsaに配置してもらって、前に報告した些細な修正をぶっこむなど。別ブランチにしてマージしてもらったほうがスマートだっただろうか？ 同じくqrencodeパッケージの報告者の勘違いに起因すると思われるバグ二つをクローズしておいた  qrencode は upstream が Git 使ってないときから作業していたので、リポジトリは debian アーカイブから生成されたものになっている。masterブランチをdebianブランチと変えてgbp.confでdebianブランチがdebianであることを明示している。
さて、ここでupstreamのmergeを従来通りのtarballで実施するのか、それともupstreamのgit repositoryをmasterとして追加して都度mergeするのか、というのを考えた時、後者のほうがスマートであるように思える。前にも書いたかもしれないが手順を改めて整理しておこう。
 まず、debianブランチ上のupstream由来ファイルを全て消す＝debianディレクトリ以外を消す。mv debian /tmp; git rm -r ./*; mv /tmp/debian ./; git add debian; git commit -av などとした。 つぎに親が同一ではないブランチ（orphan branch)を作る git checkout --orphan master この段階では debianディレクトリが残ってしまってるので、含まれないようにこれも消す git rm --cached -r debian git remote add upstream https://github.com/fukuchi/libqrencode でupstreamを引っ張ってくる git pull upstream masterしたがtag持ってこなかったからgit pull upstreamも実行 git checkout debianして、同一ヒストリをもたないorphanなブランチと無理やりマージさせるために git merge v4.0.0 --allow-unrelated-histories  上記の変更点がackされたら提案したい
 svn-workbenchの1行パッチをフォワード。使いづらいな。。。 svn-workbenchのdebian/copyrightをcopyright format 1.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 27 Jan 2018 01:26:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>snapperのmanpageで/etc/sysconfigのままになっとるやんけ、という指摘。あー昔気づいて直さないとなぁ、と思ったきり忘れていた件でした。単にDebian側でパッチ当てるというのがシンプルなんですけど、debian/patches以下を増やしたくはないのでconfigure.acをいじってちゃんと条件分岐するようにしてPull Request。
--- configure.ac.orig 2018-01-27 15:56:50.839599352 +0000 +++ configure.ac 2018-01-27 16:24:56.910015986 +0000 @@ -60,11 +60,14 @@ fillupdir=/var/adm/fillup-templates +SYSCONFIG=/etc/sysconfig + AC_ARG_WITH([conf], AC_HELP_STRING([--with-conf], [Use a custom sysconfig directory (default is /etc/sysconfig)]), [with_conf=$withval], [with_conf=no]) -AS_IF([test &amp;quot;x$with_conf&amp;quot; != xno], [CPPFLAGS=&amp;quot;${CPPFLAGS} -DCONFDIR=&#39;\&amp;quot;${with_conf}\&amp;quot;&#39;&amp;quot;], - [CPPFLAGS=&amp;quot;${CPPFLAGS} -DCONFDIR=&#39;\&amp;quot;/etc/sysconfig\&amp;quot;&#39;&amp;quot;]) +AS_IF([test &amp;quot;x$with_conf&amp;quot; != xno], [SYSCONFIG=&amp;quot;${with_conf}&amp;quot;]) + +CPPFLAGS=&amp;quot;${CPPFLAGS} -DCONFDIR=&#39;\&amp;quot;${SYSCONFIG}\&amp;quot;&#39;&amp;quot; AC_ARG_ENABLE([btrfs], AC_HELP_STRING([--disable-btrfs],[Disable Btrfs internal snapshots support]), [with_btrfs=$enableval],[with_btrfs=yes]) @@ -153,6 +156,7 @@ AC_SUBST(LIBVERSION_MINOR) AC_SUBST(LIBVERSION_PATCHLEVEL) AC_SUBST(LIBVERSION_INFO) +AC_SUBST(SYSCONFIG) AC_SUBST(docdir) AC_SUBST(fillupdir) diff --git a/doc/snapper.xml.in b/doc/snapper.xml.in index 1507b5d.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 26 Jan 2018 23:34:14 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 先日のsnapperパッケージのメンテ続きで &amp;ndash;disable-ext4 オプション明示で処置。stringsコマンドで中身を見てチェック→参照なし！ということでアップロードした。こいつもsalsa移行組。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 25 Jan 2018 23:05:20 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>screenfetchをdockerで動かしたら一部の出力でcommand not foundが出てきた、というレポート。でもテストしたVPSで作ったminimalなdebootstrap環境だと再現できねぇな？と思って該当の所を見る&amp;hellip;
 thermal=&amp;quot;/sys/class/hwmon/hwmon0/temp1_input&amp;quot; if [ -e $thermal ]; then temp=$(bc &amp;lt;&amp;lt;&amp;lt; &amp;quot;scale=1; $(cat $thermal)/1000&amp;quot;) fi  おおぅ、なるほど。/sys/class/hwmon/hwmon0/temp1_inputなんてVMの環境下には生えてないからスルーしてたわけだ。よし、確認のため実マシンでdebootstrap&amp;hellip;しようとしたらdashのバグの影響を踏んでdebootstrap出来ない！&amp;hellip;別マシンで過去のchrootな環境を見つけてそこでテストして漸く確認。ついでにpgrepもcommand not found出てきたのはホスト側でXが動いているからか（報告者のdockerでは動いてなかったのだろう）。
で、チャチャッと変更して&amp;hellip;問題はこのrepositoryはaliothにまだあることでsalsaへのインポートを試してないこと。どうやるんだっけ&amp;hellip;
 debian-devel-announceなメールからDebian Wikiへ、そして該当の情報を取得。 スクリプトをコピーする GitLabのTokenを初めて生成してスクリプトに埋め込み ./salsa-import.sh screenfetch という感じで実行&amp;hellip;一瞬で終わって「え？マジ終わり？」という感想。 無事にインポートされてるのを確認  ここからはいつもどおりビルド→アップロード。gitのremote repo設定からaliothを消してsalsaを追加しておく。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 23 Jan 2018 21:16:11 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>snapperパッケージのメンテ。
 aptが動いたときの自動スナップショットを無効にできないか？調整する設定を追加してはどうか？という提案。「デフォルト有効ならいいように思う」とコメント。 e2fsprogsがessentialパッケージでなくなるのに伴い、e2fsprogsに依存してるみたいなんだけど、明示的にしてくれる？というバグレポート。ext4サポートがそもそも動いてなかったから明示的にdisableにするかーという結論なんだけど、確認方法がわからないとリリースできない。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 17 Jan 2018 19:33:48 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 新しいdebian-mirror.sakura.ne.jpの稼働に伴いmuninの設定を微調整。 新旧ミラーサーバーにて、自ホストをサーバーにして apt でパッケージを取得してみた。旧サーバーが65MB程度のところ、新サーバーだと95MB程度は出るので1.5倍というところか（乱暴だけど）。   LibO on macOSで日本語パック当てるとフォントでかいよ問題をレポートしておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 16 Jan 2018 21:22:06 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>qrencodeパッケージのバグレポートにコメント追加しておいた。数日様子を見てクローズするのが良いだろうと思う。 fonts-sawarabi-minchoパッケージをアップロード  salsaに移行する際にgitのURLが「git@salsa.debian.org:fonts-team/fonts-sawarabi-mincho.git」のように設定されているのにモニョモニョしている。今までは「git+ssh://anonscm.debian.org/&amp;hellip;git」のようにプロトコル指定だったが、これを追加するとエラーになる。でもgitコマンドはSSH使ってsalsaにアクセスしている。何故だ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 15 Jan 2018 19:18:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日苦しんだ問題をupstreamにissue報告した。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 14 Jan 2018 22:06:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> qrencodeパッケージがちょっと古くなっているようだ。upstreamのサイトが移動してるね、ということでBTS ついでに自分の手元でアップデート出来ないかな？と作業して大方できた。新規追加されたtestスクリプトがconfigureを引数なしでハードコードしていて実行されるのでパッケージのインストールが壊れるという問題があったのに引っかかって小一時間潰してしまった&amp;hellip;。  </description>
    </item>
    
    <item>
      <title>subversionからお引っ越し</title>
      <link>https://henrich.github.io/blog/2018/01/13/subversion%E3%81%8B%E3%82%89%E3%81%8A%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</link>
      <pubDate>Sat, 13 Jan 2018 21:51:19 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/13/subversion%E3%81%8B%E3%82%89%E3%81%8A%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</guid>
      <description>www.debian.or.jpのコンテンツはSubversionで管理していて、コミット可能なのはJPのメンバーだけだったのだけど、salsa.debian.orgに引っ越して見通しを良くしてみたくなったので作業した。
svn2gitを使いコンバート。
非常にわかりづらい（というか導線がない？）のだけど、GitLabにOrganizationというかTeamというかを登録するページからdebianjp-teamとして登録し、適当なsub projectとしてwebを作り、コンバートしたGit repositoryを突っ込む。
AnsibleでCloudGarageのVPSへデプロイ（ここで現状のサイトコンテンツの更新手順に更新漏れを見つけたり）。CloudGarageさんは開発者支援プログラムを使わせてもらっていて助かる。相変わらず書いたplaybook.ymlがちょっと出来のいいバッチファイル程度なのが気になるけど、仕方がない。
とまぁ、そんなこんなで時間を使った。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 08 Jan 2018 19:55:35 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-oradano-mincho-gsrrをアップロード birdfontをアップロード ミラーサーバーのリソースがCPUを中心に余ってるので、GitLab Runnerにホストを提供しようと思ったのだけども、salsa-adminに問い合わせた所「無理かもー」ともらった。排他的にサービスを提供する、という点だけがネック。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2018/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 07 Jan 2018 13:47:02 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2018/01/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>年末年始で間が空いてしまった&amp;hellip;。
 libxmlbirdをアップデート  年末年始でようやく新しいミラーサーバー new-debian-mirror.sakura.ne.jp の設定に手を付けました（ありがとうございます＞さくらインターネットさま）。初めてのAnsible&amp;hellip;ですが、今のところはバッチファイルよりちょっとマシ程度の状況。やはり複数サーバー運用して整理するのが必要とかじゃないとモチベーションが湧かないですね&amp;hellip;。まぁ、次にセットアップが必要になった場合は一発流せばいいだけというのは気楽にはなりました。
新しいサーバーにはbcacheを使っています、ありがとうArch Wiki。ディスクを大量に積むのもよいのですが、既に後2年ぐらいは戦えそうな容量を頂けたので、SSDでキャッシュする方向に走るのが良いかな、と。速度はそこまで出ないにしてもアクセスが多くなっても大丈夫よ、と。
CacheデバイスのSSDですが、最初はRAID1を設定してもらっていましたが、思い直して設定変更。JBODが選べないので仕方なくRAID0にしました。生まれて初めて使ったよ、RAID0&amp;hellip;。HDDよりは死にづらいかなーというのと、死んでも構わないよねー（負荷が増えるだけ）というのと、容量が欲しかったんや&amp;hellip;というのの3点からRAID0選択と相成りました。
#!/bin/sh BACKING_DEVICE=/dev/sda3 CACHE_DEVICE=/dev/sdb make-bcache -B $BACKING_DEVICE -C $CACHE_DEVICE echo `bcache-super-show $CACHE_DEVICE | grep cset.uuid | awk &#39;{print $2}&#39;` \ &amp;gt; /sys/block/bcache0/bcache/attach if [ -f /dev/bcache0 ]; then mkfs.xfs /dev/bcache0 else echo &amp;quot;There&#39;s no Bcache device.&amp;quot; fi  手作業でやったのを後からまとめ直すと上記のような感じ。短いな&amp;hellip;。チューンしたほうがいい点があるのかもしれませんが、知見がないのでデフォルト値そのまま。ファイルシステムにxfs選んだのは毎度ext?なので、ちょっとは変わったことしたかったのと、btrfsの利点を活かせることはなさそうだよなぁ、という辺りから。
ufwを実行しようかどうしようか、という辺りとSNMP監視が出来てない風味だよね？というのを確認したら、終わり。そして、切り替え前後でおかしなことが起きたらその対処、と。
muninの設定続き。
$ sudo munin-run http_loadtime auto http___localhost_.value /etc/munin/plugins/http_loadtime: line 105: -f: command not found  $time_binというのが無いようだ。which time してるだけなのに、見つからない？timeパッケージにあるのだけど、これが入ってないんだな&amp;hellip;
$ sudo munin-run acpi /etc/munin/plugins/acpi: 1: eval: bc: not found thermal_zone0.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 23 Dec 2017 20:17:49 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/12/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> apt-listchangesのpo訳が取り込まれました。   https://salsa.debian.org/ が動き始めたようだ。リポジトリは自動で移動したりするのだろうか？ とりあえず二要素認証をOnに&amp;hellip;と思って有効にしようとしたら、まずはQRコードをGoogle Authenticatorで読み取って有効にしないといけなかった。その上でYubiKeyを追加。何故この手順が必要なのだろう？デバイスが1つだけじゃない、ということが重要？   boot時のエラーメッセージが気になったので、BIOSを上げてみようと思い立つ。そう言えば昔grubから直接ISOイメージ起動した記憶が&amp;hellip;と思って調べるとgrub-imagebootというツールがあったのでインストール、該当のBIOSのISOイメージをダウンロードして、bootできるようにして再起動&amp;hellip;したのだけども、うんともすんとも言わず。仕方がないのでUSBメモリに書き出す方法の方で対応した。
$ sudo apt install genisoimage $ geteltorito biosimage.iso &amp;gt; biosupdate.img $ sudo dd if=biosupdate.img of=/dev/sdb bs=512K  BIOSは最新になった、でも消えない。。。ってあれ、これmicrocodeって言ってるからCPUじゃね？ということで apt install intel-microcode で直った（最新のパッケージはbackports提供なので、Stretchの人はbackportsから入れると良い）。AMDなCPUの人もamd-microcodeで。どちらもnon-freeコンポーネントに含まれてるが、まぁbinaryだしどうしようもないだろうなぁ。TPMのエラーもBIOSで有効にしたら消えた。残ってるのはACPIなエラーだけ。
  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/12/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 17 Dec 2017 17:42:42 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/12/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>GnuPGのバグを見つけたのでレポートしておきました。あとLFの人が書いてるガイドにIssueとPR。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/12/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 11 Dec 2017 21:01:31 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/12/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-ricty-diminishedを更新（GPGキーのテストをしていたらsignキーを間違えてたのでアップロードがものすごく遅くなった&amp;hellip;） os-autoinstのしょうもないミスを指摘されたので修正。なんで気づかなかったんや。。。 jruby-joniの更新  ついでに debian/patches 以下をforwardしてPull Request   </description>
    </item>
    
    <item>
      <title>GPGめも - subkey</title>
      <link>https://henrich.github.io/blog/2017/12/04/gpg%E3%82%81%E3%82%82-subkey/</link>
      <pubDate>Mon, 04 Dec 2017 18:55:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/12/04/gpg%E3%82%81%E3%82%82-subkey/</guid>
      <description>GPGのsubkeyについて。
 たとえば持ち運びを行うlaptopでGPGを使っているが、laptopを紛失盗難したとしたとする。当然、鍵のrevokeが必要になるがこの場合、  masterkeyのみの運用だとすると、新しいGPG鍵を作って1から知り合いなどとkeysignを交換してweb of trustを再構築する羽目になる。 laptopではsubkeyを運用していれば、それをrevokeしてもmasterkeyのweb of trustは失われない。  そしてprivate masterkeyは通常触らないところに厳重に保管しておける。通常使いはsubkeyで行い、どうしても&amp;hellip;という時にはmasterkeyを使うということができる。  なるほどねー。
ちなみにどうしてもという時というのは以下らしい。 - 他の人の鍵にsignする（キーサインのときですね）、あまりないけど前にしたsignをrevokeする - 自分の鍵をrevokeする - subkeyを作る・revokeする - 有効期限の変更 - masterkeyのrevoke用の証明書の作成 - UIDの設定変更
あー、今だとlaptopにはGPG鍵入れてないけど、これはありかもしれないね。ということでDebian WikiでのSubkey作成手順に従って作ってみる。
$ umask 077; tar -cf $HOME/gnupg-backup.tar -C $HOME .gnupg (バックアップ) $ gpg --list-keys henrich@debian.org (自分のKEYIDを取得) pub rsa4096 2009-05-23 [SC] [有効期限: 2019-05-21] 58E1222F9696C885A3CD104C5D328D082AAAB140 uid [ 究極 ] Hideki Yamane (Debian-JP) &amp;lt;henrich@debian.or.jp&amp;gt; uid [ 究極 ] Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; uid [ 究極 ] Hideki Yamane (private) &amp;lt;henrich@iijmio-mail.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/12/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 03 Dec 2017 20:11:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/12/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日のDebian勉強会であった人とのキーサインを済ませた。caff便利。
$ caff -u 58E1222F9696C885A3CD104C5D328D082AAAB140 &amp;lt;long KEYID&amp;gt;  で、既にサインして頂いてたのがメールで来てたのをimportしてkeyserverにsendしておく。
$ gpg --import ~/*.asc $ gpg --send-keys &amp;quot;58E1 222F 9696 C885 A3CD 104C 5D32 8D08 2AAA B140&amp;quot; gpg: 鍵5D328D082AAAB140をhkp://pgp.mit.eduへ送信  よしよし。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 30 Nov 2017 20:18:32 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>libreoffice (1:5.4.3-3) unstable; urgency=medium (snip) * debian/rules: - replace some manual dpkg-parsechangelog calls with $(DEB_VERSION) and $(DEB_DISTRIBUTION) and fix logic for --disable-dependency-tracking  ほぅ？そんな変数取れるのか？</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 28 Nov 2017 20:00:19 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> libxmlbirdをアップデートしようとしてgit mergeしようと思ったらタグがない。で、upstreamにpingしたのが反映されたのでmergeしてアップロード。ついでにreproducible buildパッチを減らすべくPull Request。人の褌で相撲を取るのは楽だわー ruby-serverspecパッケージで「netstat使ってるからnet-toolsにSuggestsした」というのを見かけて「後ろ向きだなぁ」と思ったのでちょっと調べた。  これ本当にnetstat呼んでるの？という疑問がでてgrepしたけど引っかからず。どうやらruby-specinfra側らしい。 確かにnetstatを呼んでいた。。。んだけど、どうもおかしい。Debian8からss使うように変えてる？これはいかんでしょ。I guess I am trying to understand which versions of Debian to support. Debian 6, 7, 8 all have ss by default.という発端のプルリクエストがそもそも間違っており、続いての修正のプルリクエストもI think jessie default command is ss.と間違ってる&amp;hellip;。 厄介そうなのは上記が参照しているように、JessieのDockerイメージの方がiproute2使ってるっぽいんだよね、何でだよ&amp;hellip;普通に直すとdockerのjessieでの動作を壊すことになる。それは避けたい。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 23 Nov 2017 19:51:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日fonts-junicodeの新しいバージョン入れて、というレポートをfixedにしたが、そういや報告者にはメール飛ばないよね、というのに気づいたのでDMしておいた unidic-mecabをアップロード。  Intel CPUの脆弱性判別ツールをダウンロードしたが、展開したらそのまま撒き散らす＆実行にはroot権限が必要と中々。
$ sudo ./intel_sa00086.py INTEL-SA-00086 Detection Tool Copyright(C) 2017, Intel Corporation, All rights reserved Application Version: 1.0.0.128 Scan date: 2017-11-23 11:09:42 GMT *** Host Computer Information *** Name: hp Manufacturer: Hewlett-Packard Model: p7-1040jp Processor Name: Intel(R) Core(TM) i5-2310 CPU @ 2.90GHz OS Version: debian buster/sid (4.13.0-1-amd64) *** Intel(R) ME Information *** Engine: Intel(R) Management Engine Version: 7.1.3.1053 SVN: 0 *** Risk Assessment *** Based on the analysis performed by this tool: This system is not vulnerable.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 21 Nov 2017 21:12:47 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> さくらのミラーでIPv6にてftp/rsync接続できてなかったようなので修正した。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 11 Nov 2017 12:59:52 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> birdfontをアップデート。先日のPRも取り込まれてた。 libmojolicious-plugin-assetpack-perlをアップデート。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 10 Nov 2017 22:51:45 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 先日報告したgit-buildpackageの問題が修正された
 * [1b5a344] buildpackage: Add back --git-pristine-tar-commit support. The call got lost when we split out export-orig. (Closes: #880624)  DPL来日に向けて今日もちまちまやり取り。
  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 09 Nov 2017 20:00:49 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> sphinx-intlがリポジトリに入った。最終目標としては現在debian-sgmlで作られているpolicy訳をマージすることだが、いつやろう&amp;hellip;。 libibushandler.soがupstreamにてビルドできない話の続きをする。以前懸念していたとおり、Squeezeなバージョンだとビルドできるという。BTSにも進捗としてコメントしておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 04 Nov 2017 09:52:17 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日のlibxmlbirdのタグが打たれてたのでアップデート。install.pyがちょっと変わってて手間取った。  os-autoinstがsbuildで（というかbuild-dependsで？）コケるので、| で指定ではなくアーキテクチャ指定に変えて通した。
- qemu-kvm (&amp;gt;= 2.0.0) | qemu-system (&amp;gt;= 2.0.0), qemu-utils, + qemu-kvm (&amp;gt;= 2.0.0) [amd64 i386], qemu-system (&amp;gt;= 2.0.0) [!amd64 !i386], qemu-utils,  手元のBBBで作ったarmhf環境ではtest failureが出るから、これなんで？というのを聞かないといけないっぽいけど&amp;hellip;まぁ、builddでログ見れた方が説明も早そう、ということで報告しておいた
libibushandler.soのビルドがやっぱりエラーになる。手順は以下（だろう）と思うのだけど、ibus周りがこのコードがリリースされた2011年から変わってるから？という思いが消せない。
$ g++ -shared -fPIC -I/usr/include/ibus-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/atk-1.0 -I../../common ibusutils.cpp ibushandler.cpp -o libibushandler.so 2&amp;gt;&amp;amp;1  これを確認するにはsqueezeあたりを入れないと&amp;hellip;となるのだけども、debootstrapしたらエラーになるし、そのままchrootしたらsegfaultだからVM用意しないと、となると腰が重い&amp;hellip;</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 03 Nov 2017 07:12:30 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>先日の問題は ~/.gbp.conf でのオプション指定が何故かエラーを引き起こすようになっていたのが原因だった（regressionだろうな）。ということで、バグ報告しておいた。バグ報告には &amp;ndash;pristine-tar-commit が動いてないのも付記しておいた。
 gnome-todo をとりあえずアップロード  git-buildpackageをダウングレードしてpristine-tarにも追加。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/11/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 01 Nov 2017 20:23:30 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/11/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>libmojolicious-plugin-assetpack-perlパッケージをアップデート libxmlbirdをアップデートしようと思ったらtarballはできてるのにtagがpushされてないので、またお願いしておく  gnome-todoをビルドしようとするとgbpがpristine-tar周りでエラーが出る&amp;hellip;
$ gbp buildpackage --git-pbuilder --git-ignore-branch --git-pristine-tar-commit --git-upstream-tag=GNOME_TODO_3_26_2 --git-verbose gbp:debug: [&#39;git&#39;, &#39;rev-parse&#39;, &#39;--show-cdup&#39;] gbp:debug: [&#39;git&#39;, &#39;rev-parse&#39;, &#39;--is-bare-repository&#39;] gbp:debug: [&#39;git&#39;, &#39;rev-parse&#39;, &#39;--git-dir&#39;] gbp:debug: /bin/true [] [] gbp:debug: [&#39;git&#39;, &#39;status&#39;, &#39;--porcelain&#39;] gbp:debug: [&#39;git&#39;, &#39;symbolic-ref&#39;, &#39;HEAD&#39;] gbp:debug: [&#39;git&#39;, &#39;show-ref&#39;, &#39;refs/heads/debian/sid&#39;] gbp:debug: [&#39;git&#39;, &#39;ls-tree&#39;, &#39;HEAD&#39;] gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/source/format&#39;] gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/changelog&#39;] gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/source/format&#39;] gbp:info: Building with (cowbuilder) for sid gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/source/format&#39;] gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/source/format&#39;] gbp:debug: [&#39;git&#39;, &#39;show&#39;, &#39;--pretty=medium&#39;, &#39;HEAD:debian/source/format&#39;] gbp:debug: [&#39;git&#39;, &#39;show-ref&#39;, &#39;refs/heads/pristine-tar&#39;] gbp:debug: [&#39;git&#39;, &#39;log&#39;, &#39;--pretty=format:%H&#39;, &#39;--grep=pristine-tar .</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 31 Oct 2017 21:05:15 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fontforgeのバグのtriageで、古いバグが再現しなくなっているのでcloseした  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 30 Oct 2017 20:02:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fontforgeのバグを古いliveイメージ落としてreproduce検証。Debian9では無くなっていたので、fixedタグつけてcloseしておいた。 もう一つfontfogeのバグレポートはfreefont側の問題なんじゃないかねぇ？という感じで再現もしなくなってるのでcloseしておいた。 BTSのパッチをupstreamにPRしといた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 29 Oct 2017 03:03:51 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>apt-fileのchangelogより
apt-file (3.1.5) unstable; urgency=medium * Remove rapt-file and two obsolete .sgml files from the source. * Set R³ to no; apt-file does not need (fake)root during the binary-targets in the package builds. * Skip dh_strip_determinism; it is a no-op at the moment and is planned to be removed eventually.  R³ ?? と思ったらdebian-develにRFCが出てた。また処理するべきことが増えるのかー&amp;hellip;。
 plumをアップデート。Multiarch hinterはtracker経由でしか見れないのが不満。 apt-listchangesのpoをファイルするのTodoを処理。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 28 Oct 2017 16:42:05 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ruby-bcatを更新 os-autoinstを更新&amp;hellip;なのだが、Build-Dependsでsbuildが文句を言うっぽい。どうするべきか。 mecab-jumandicを更新 sylfilterを更新 developers-referenceを更新  sylph-searcherをdh10にあげようとしたら、dh-autoreconfでエラーになる。
 dh_autoreconf libtoolize: putting auxiliary files in &#39;.&#39;. libtoolize: copying file &#39;./ltmain.sh&#39; libtoolize: Consider adding &#39;AC_CONFIG_MACRO_DIRS([m4])&#39; to configure.ac, libtoolize: and rerunning libtoolize and aclocal. libtoolize: Consider adding &#39;-I m4&#39; to ACLOCAL_AMFLAGS in Makefile.am. configure.ac:13: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated. For more info, see: configure.ac:13: http://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation configure.ac:21: installing &#39;./compile&#39; configure.ac:13: installing &#39;./missing&#39; Makefile.am: error: required file &#39;./AUTHORS&#39; not found commands/Makefile.am:9: warning: &#39;INCLUDES&#39; is the old name for &#39;AM_CPPFLAGS&#39; (or &#39;*_CPPFLAGS&#39;) commands/Makefile.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 26 Oct 2017 20:06:03 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> libtest-mock-time-perl がリポジトリに入った。これでようやくos-autoinstの更新に手を付けられる。 JPサイトにSDを追加 octiconsパッケージを更新 os-autoinstパッケージを更新 アホなミスをしていたミラー設定を修正。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 25 Oct 2017 04:29:36 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> ruby-crackパッケージをアップデート vmdk-stream-converterパッケージをアップデート jruby-joniパッケージをアップデート nailgunパッケージをアップデート さくらミラーの設定でpush元のキーをDSA鍵のままにしていたのがOpenSSHのアップデートで蹴られていたので差し替えた。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 24 Oct 2017 20:22:25 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> silversearcher-ag のレビューを終えたのでアップロード nailgunのアップロード psphereのアップロード sylpheedのPGP署名運用についてメールした。これが解決したら関連パッケージをアップデートする予定。 fontforgeパッケージを眺めて手を出せるところだけ。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 23 Oct 2017 21:46:54 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> HPEのリポジトリがStretch対応になっていたので、debian-mirror.sakura.ne.jpをStretchに上げました。 silversearcher-ag のレビューをした  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 22 Oct 2017 04:49:50 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> tomoyo-toolsを更新 fonts-mikachanを更新 fonts-yozvox-yozfontを更新 libsylphを更新 fonts-kouzan-mouhitsuを更新 fonts-aoyagi-kouzan-tを更新 fonts-aoyagi-sosekiを更新   openSUSE Asia Summit 2017に行ってきた。発表資料はslideshareとDebian Wikiに。upstreamとの面識が出来たので良かったよかった。一応cacheなファイルはGPLだという話をされたので、それでチャレンジしてみるかーという所（gbpがmultiple upstream tarballを実験的サポートなところが面倒だけども）。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 21 Oct 2017 08:08:37 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> screenfetchを少しだけ更新 pleiadesを少し修正 libsylphを修正 libspiroを更新。-dbgパッケージ落とし忘れてたのでこのへんを参考に更新。   openSUSE Asia Summit 2017に行ってきた。本番は明日。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 18 Oct 2017 05:10:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>ミラースクリプトを案内に従って入れ替えた libmojolicious-plugin-assetpack-perlを更新 fonts-arphic-umingを更新 yydebugのポカを修正&amp;hellip;。 libexport-attrs-perlがrejectされたので再アップロード nadokaを西山さんに押し付けるだけの仕事を :)  openQAでコケる所を抜粋
[ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;remotehost:&amp;quot; [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;localhost:&amp;quot; [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;host:&amp;quot; [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;host:&amp;quot; ./t/05-scheduler-cancel.t ................. ok ./t/05-scheduler-capabilities.t ........... ok [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;host:&amp;quot; [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;host:&amp;quot; [ERROR] Failed dispatching message to websocket server over ipc for worker &amp;quot;host:&amp;quot; .</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 17 Oct 2017 22:00:26 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 働きかけていたIDCFクラウドさんでのDebian8設定の不備が漸く公開された。  ただ、個人的には「不具合」だと思っていて、tipsで公開というのは足りないと思っています。セキュリティですし&amp;hellip;。   bind9のchangelogが興味深い。
 * Add support for downloading upstream sources using d/watch + Make d/copyright machine readable for Files-Excluded: support + Update Files-Exclude: * to remove obsolete software dropped in contrib/, but not really used  watchはこんな感じ
opts=\ repack,\ compression=xz,\ repacksuffix=+dfsg,\ uversionmangle=s/((rc|b)\d+)$/~$1/,\ dirversionmangle=s/((rc|b)\d+)$/~$1/,\ dversionmangle=s/\.dfsg\./-/;s/[\.\+]dfsg$//,\  copyrightはこんな感じ
Files-Excluded: contrib/idn contrib/dnsperf-2.1.0.0-1 contrib/nslint-3.0a2 contrib/query-loc-0.4.0 contrib/queryperf contrib/zkt-1.1.3  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 16 Oct 2017 07:01:55 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-sawarabi-minchoをアップロード yydebugのVcs-Gitが間違ったままだった&amp;hellip;直した。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 15 Oct 2017 07:39:55 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>パッケージを拾って色々分析居しているサイトが担当しているパッケージの問題を列挙してたので対応する。
 poppler-dataを更新 fonts-ipaexfontを更新 fonts-ipafont-nonfreeを更新 fonts-ipafont-nonfree-jisx0208を更新 fonts-ipafontを更新  packages overviewを参照して問題洗い出し
 git pushを忘れていたのを幾つか対応。 xfonts-* パッケージが今までのSection: x11でなくてSection: fontsをlintianで推奨されるようになったので、ホント？という質問をした pleaiadesのwatchファイルがhttpだったのを直した jcodingsのwatchファイルもhttpだったのを直した（まぁgitでmergeしてるんだけども） yydebugを諸々更新。 nailgunのウェブサイトを見たら、「facebookに移管するぜ」って書いてあったので、数カ月したらそっち見るようにしないと&amp;hellip;。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 14 Oct 2017 19:53:18 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 今日も今日とてopenQAに１行パッチ。 ttf-kacstを落として、というバグレポートがHolgerから。あーすっかり忘れてた&amp;hellip;。依存関係として落とさないといけないのかどうかの確証が得られず、質問をしてみた。  納得したので、Uploadした。関連ありそうな別パッケージについてはバグレポート。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 13 Oct 2017 21:59:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>-----------------------------------------------  $ git clone https://anonscm.debian.org/git/collab-maint/cutter-testing-framework.git Cloning into &amp;lsquo;cutter-testing-framework&amp;rsquo;&amp;hellip; remote: Counting objects: 3334, done. remote: Compressing objects: 100% (949&amp;frasl;949), done. remote: Total 3334 (delta 2336), reused 3323 (delta 2336) Receiving objects: 100% (3334&amp;frasl;3334), 3.69 MiB | 442.00 KiB/s, done. Resolving deltas: 100% (2336&amp;frasl;2336), done.
$ cd cutter-testing-framework/
$ gbp import-orig &amp;ndash;uscan &amp;ndash;pristine-tar gbp:error: Repository does not have branch &amp;lsquo;upstream&amp;rsquo; for upstream sources. If there is none see file:///usr/share/doc/git-buildpackage/manual-html/gbp.import.html#GBP.IMPORT.CONVERT on howto create it otherwise use &amp;ndash;upstream-branch to specify it.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 11 Oct 2017 05:09:21 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> DMの方の活動が年単位で無いのでping  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 10 Oct 2017 06:52:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>cutter-testing-frameworkのリポジトリを作っておいた  実作業はupstreamの@kenhysさんにお任せで  とりあえず、unidicをアップデートしてみるか？と少しだけ作業。  他のunidic辞書もパッケージにしても面白いか？  OSS Gateに拙著を寄贈しようと言う話をした。 昨日のos-autoinstのハングアップが直ったのでその旨連絡した。 os-autoinstでdebhelperが誤ってファイルを消すのを対処した。 guacamoleパッケージがおかしい、というつぶやきを見たので、MLにパッチの提案だけしておく  rustを使ったソースのパッケージングについて。
https://github.com/sharkdp/fd というのを見かけて面白そうなのでパッケージングしてみようとする。
$ git clone https://github.com/sharkdp/fd; cd fd $ git checkout -b debian $ dh_make --createorig -s -p fd_4.0.0 (debianディレクトリをいじる…) $ git add debian; git commit  で、ビルドすると通るけど何もしてない風味。ざっくりrustcを使うのはなにかあるのだろうか？と調べると dh-cargo というのが見つかった。どうやら、rustなパッケージは dh --buildsystem cargo という形で実施するようだ。
 dh_auto_install -O--buildsystem=cargo cp: cannot stat &#39;./debian/cargo-checksum.json&#39;: No such file or directory dh_auto_install: cp ./debian/cargo-checksum.json /build/fd-4.0.0/debian/cargo_registry/fd-4.0.0/.cargo-checksum.json returned exit code 1  debian/cargo-checksum.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 09 Oct 2017 14:31:17 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> os-autoinstが止まるのをinvestigation。  新しいperlモジュールがtestに必要になってたようなので、ビルドする。ITPもする。そのビルドに必要な別のperlモジュールもITPする ITPしたのは$ dtp alioth-repoという感じでpushしておいた。 が、やっぱり止まるのは変わらないのでissue登録。 何が原因だか、今の所サッパリなので Jessie や Strech 環境を作ったりしてテスト。Jessie だと libmojolicious-perl が古すぎてモジュールが含まれないせいでテストコケるのでsidのを持ってきたり。その流れでnewest upstreamのを手元でビルドして差し替えもしてみた。が、結局何も変わらず。  unidicのサイトが変更されたのに関するライセンス表記周りの意見。 忘れてたsphinxのissue登録をやっておいた  </description>
    </item>
    
    <item>
      <title>Fedora Modularity Memo</title>
      <link>https://henrich.github.io/blog/2017/10/08/fedora-modularity-memo/</link>
      <pubDate>Sun, 08 Oct 2017 14:04:21 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/08/fedora-modularity-memo/</guid>
      <description> https://communityblog.fedoraproject.org/factory-2-0-mean-modularity/ The Productization Pipeline and the so-called &amp;ldquo;Factory 2.0&amp;rdquo;   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 08 Oct 2017 12:52:13 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 忘れないうちに１行パッチをopenQAに。 openSUSE asia summitの発表の練習をしてみる。15分にはなんとか収まりそう。 Debian JPのサイト、9.2リリースを反映しておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 07 Oct 2017 11:50:39 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/07/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>リリースノートの更新に気がついたので追従しておいた。 openSUSEをいじってたらsnapperのアップデートがあったが、そのバージョンのタグがgit repositoryに打たれてない。。。 openQAやos-autoinstもタグが打たれてないので、お願いを出すなど&amp;hellip;。  openQAを漸くビルドし始めたのだけど、早速モジュールが足りないというエラーが&amp;hellip;
Can&#39;t locate Mojolicious/Plugin/AssetPack/Backcompat.pm in @INC (you may need to install the Mojolicious::Plugin::AssetPack::Backcompat module)  なんでupstreamの依存関係には含まれとらんのだろう？
んじゃさくっとdh-make-perl&amp;hellip;したらcpanに無い？？？どうやら消されているようだ。仕方がないのでupstreamに質問 → backpanというところに消したのは置いてあるよ、と教えてもらった。しかし、本来これは必要ないはず、なんだけども&amp;hellip;？
兎にも角にも、とりあえずぶち込んでみてtestを実行してみると&amp;hellip;またエラーだ。以下が延々と。
Uncaught exception from user code: Plugin &amp;quot;bootstrap3&amp;quot; missing, maybe you need to install it? Mojolicious::Plugins::load_plugin(Mojolicious::Plugins=HASH(0x562086593f80), &amp;quot;bootstrap3&amp;quot;) called at /usr/share/perl5/Mojolicious/Plugins.pm line 46 Mojolicious::Plugins::register_plugin(Mojolicious::Plugins=HASH(0x562086593f80), &amp;quot;bootstrap3&amp;quot;, OpenQA::WebAPI=HASH(0x562086540380), HASH(0x5620867fe6d8)) called at /usr/share/perl5/Mojolicious.pm line 186 Mojolicious::plugin(OpenQA::WebAPI=HASH(0x562086540380), &amp;quot;bootstrap3&amp;quot;, HASH(0x5620867fe6d8)) called at lib/OpenQA/WebAPI.pm line 185 OpenQA::WebAPI::startup(OpenQA::WebAPI=HASH(0x562086540380)) called at /usr/share/perl5/Mojolicious.pm line 179 Mojolicious::new(&amp;quot;OpenQA::WebAPI&amp;quot;) called at /usr/share/perl5/Mojo/Server.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 06 Oct 2017 20:34:59 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/06/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Updated mirror list on JP site  texliveの-docなパッケージがデカくて毎度のアップデートに時間取られるのが嫌だよねーという話から、色々と改善を模索してみる
 PDFのバージョンを上げてサイズを落とす作戦を深掘り。  1.4GBが1.0GBになるのは大きいと思う  -docパッケージがRecommendsになっていて引っ張られるのをSuggestsにしてインストールされないようにする作戦  そもそもインストールされなければ気にしなくて済むよね、という話  texlive-fullを-docs-と-utilsに分けて、-docなパッケージをインストールしないようにする作戦  わかんないから-fullを入れるのだけど、-docはいらないという人は多そうだから  -docパッケージがtexに依存してるのを確認する問題提起 逆に-docなパッケージ内でgzipでcompressされてるのはいいのか？という問題提起  </description>
    </item>
    
    <item>
      <title>実験実験。</title>
      <link>https://henrich.github.io/blog/2017/10/04/%E5%AE%9F%E9%A8%93%E5%AE%9F%E9%A8%93/</link>
      <pubDate>Wed, 04 Oct 2017 20:29:38 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/04/%E5%AE%9F%E9%A8%93%E5%AE%9F%E9%A8%93/</guid>
      <description>go-apt-cacherによるキャッシュプロキシ実験、今度はもっと大きなパッケージ2つで試してみましょう。
Package: texlive-latex-extra-doc Download-Size: 384 MB Package: texlive-pstricks-doc Download-Size: 248 MB  まずは普通にftp.jp.debian.orgからの取得。  Fetched 412 MB in 36s (11.3 MB/s) real 0m36.643s
Fetched 412 MB in 30s (13.4 MB/s) real 0m30.864s
Fetched 412 MB in 26s (15.4 MB/s) real 0m27.031s
 次に西日本から取得。  Fetched 412 MB in 19s (20.7 MB/s) real 0m20.026s
Fetched 412 MB in 19s (21.1 MB/s) real 0m19.688s
Fetched 412 MB in 18s (22.2 MB/s) real 0m18.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 03 Oct 2017 20:05:29 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>JPのページの誤りの指摘を頂いたので修正した IDCFクラウドのDebianテンプレートで問題を見つけたのでチケットを切っておいた。  「VPSサービスに対して、高速なDebianミラーを提供したい」というのを思いつきました。ただ、あらゆるサービスでフルミラーを内部に置くのは難しいでしょうから、キャッシュプロキシを設置して対応するのはどうでしょう？
 思いついた対象候補  さくらのVPS ConoHa IDCFクラウド(←ここではこれをチョイス)   IDCFクラウドは、500円クーポンがあったのでこの範囲内で収めたいと思います（この後、さらに1000円クーポンを見つけたので今回の実験には十分ですね）。
 Debian8 と Ubuntu16.04 なテンプレートがあったので、こちらから仮想マシンを作ります（ファイアウォールの許可設定を忘れてSSHが通らなかった&amp;hellip;）。 次にgo-apt-cacherをダウンロードしてちょっと設定して起動します。 最後に/etc/apt/sources.listをいじってcache proxyを参照するようにします。2つのマシンは同じローカルセグメント内に居るので、apt lineのサーバー名はローカルIPを指定しました。
# apt show openclipart-png Package: openclipart-png Source: openclipart Version: 1:0.18+dfsg-14 Installed-Size: 148 MB   有意な差を確認したいので、そこそこの大きさのパッケージを見つけておきました。約150MBなら違いもでるでしょう。
# time apt-get download openclipart-png Get:1 http://10.6.0.179:3142/debian/ jessie/main openclipart-png all 1:0.18+dfsg-14 [128 MB] Fetched 128 MB in 10s (12.2 MB/s) real 0m10.742s user 0m2.204s sys 0m0.420s  まだキャッシュされていない状態からの取得は10.7秒（12.2MB/s）
# time apt-get download openclipart-png Get:1 http://10.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/10/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 01 Oct 2017 14:39:09 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/10/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> libmojolicious-plugin-assetpack-perlの更新をアップロード ftpsyncスクリプトが新しくなったよ、というメールをもらっていたので入れ替えた。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 30 Sep 2017 22:18:59 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>体調を崩して諸々が進まず&amp;hellip;。
 libmojolicious-plugin-renderfile-perlの更新をアップロード  lintianでUNRELEASEDだったらWarning入れてくれないかな&amp;hellip;（ドジッた）  sphinx-intlをアップデートした上でバイナリパッケージ名をsphinx-intlにしてアップロード。 一旦消えたcutter-testing-frameworkのDebianパッケージを復活させない？と打診だけ。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 27 Sep 2017 22:43:43 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>さくらの夕べ「さくらのVPS ユーザーミートアップ」のLT枠に参加してdebianミラーの宣伝をしてきました。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 25 Sep 2017 22:41:30 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>openSUSE.Asia Summit 2017のトークが通ったので返信。openSUSE tools on Debianというタイトルで15分喋る予定です。資料も大体作成完了。
 fonts-arphic-uming FTBFS修正。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 18 Sep 2017 04:39:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> さくら専用サーバーのOSバージョンについては問い合わせておいた。手伝えることがあるとよいのだけども。 IDCFクラウドのはそろそろ一ヶ月なのでなんとかならんか。１０月まで待つか&amp;hellip;。 Cloudgarade、規約改定は早かったがDebian対応はまだ。。。  10/5に対応いただいた。  IIJのミラーはできないものかをわかりそうな人に尋ねることに  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 17 Sep 2017 20:14:49 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>gbp-import-origのこのオプション、multiple upstream tarball用じゃないか。いつ追加されてた？
--component=COMPONENT When importing the upstream tarball also look for an additional tarball with component name COMPONENT. E.g. in hello-debhelper_1.0.orig-foo.tar.gz the component would be foo. The additional tarball is expected to be in the same directory than the upstream tarball and to use the same compression type. Using additional original tarballs is a feature of the 3.0 (quilt) source format. See the dpkg-source manpage for details. This is currently considered an experimental feature and might change incompatibly.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 15 Sep 2017 21:24:55 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今回はパッケージメンテナじゃなくてサーバーのメンテナンスの話。
さくらの専用サーバーでDebian7だけになってるのが気になったのだけど、今貸してもらっているサーバーはHPのRAID使ってた関係でhp側のアップデートが無いと使えないんじゃないか？という点に思い至った。あ、でも仕様によると、今はNEC Express5800 E120f-MかFujitsu PRIMERGY RX1330 M2/RX2530 M2 だから違うのかな？
何にせよ、debian-mirror.sakura.ne.jpのアップデートはしたいので問い合わせモードに。昔この件でhp側のサポートの人とやり取りしたから、とりあえずhp側の対応をもう一度確認してみるか。。。あ、hpからhpeになったから送れない&amp;hellip;→s/hp/hpe/だけだったのでサクッと。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 12 Sep 2017 22:30:07 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonts-oradano-mincho-gsrrをアップロード  フォントの内部バージョンがアーカイブ名と違っていた様子。次回に気をつけるか？   gnome-todoをアップロードした、のだけど、色々変更が多かったのでメモ
 build systemがautotoolsからmesonに変わった。  Build-Depends: meson (&amp;gt;= 0.41.0) が追加、autoconf周りをdropした。 debian/rules で dh $@ --with gnome --buildsystem=meson のように--buildsystem=meson の指定が必要。 依存関係は meson.build ファイルに書いてある&amp;hellip;のだけど、どうも全体の指定ではなく、サブディレクトリにも置かれてるパターンがあるので、注意が必要だった。 何か見落としがあるのかな？と思って dh_install &amp;ndash;list-mising しようかと思ったら、今は dh_missing --list-missing のように dh_missing を使え、とのこと。適当なブランチで debian/rules に override_dh_missing で記述して実行したが漏れはなかった様子。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 11 Sep 2017 20:57:06 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> python3-sphinx-intlをITPした。  何故かpristine-tarブランチがgbpでエラーでまくりで作れなかったので、手作業でgit checkout --orphan pristine-tar; rm *; git commit --allow-emptyみたいなことをして作った。何故だ。  cutter-testing-frameworkがリポジトリから削除されていたので、upstreamの須藤さんにpingしておいた。ついでにissueを見てみると過去にsidでビルド出来なかった問題はgit repositoryでは修正されていたので、そちらを使うように手元でパッケージを更新してみた。別の問題でビルドに失敗したが、すぐに検討がついたのでpull request。  他にもpo/Makefile.in.inファイルが無くてintltoolize --force || exit 1が必要だったり。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 05 Sep 2017 22:13:45 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/05/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> elpa-migemo をアップロード nailgun をアップロード。全く変えてないのに殆どのアーキテクチャでビルドが成功している（失敗はm68kぐらい）ので、前にbuild failureが各アーキテクチャで出ていたのはやっぱりJava周りのビルド環境がおかしかったんじゃないか疑惑。 os-autoinstのビルド。１年ぶりにupstreamのgitからmergeしたので色々変化が&amp;hellip;（タグ打ってほしいなぁ。。。）。まだビルドには成功せず（テストが終わらない&amp;hellip;これ動くのかな。）  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 04 Sep 2017 20:58:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/04/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> RFS: elpa-migemoのレビューを実施。 libsql-splitstatement-perlを修正したのでアップロード。 OpenQAのdebian/copyrightをアップデート。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/09/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 03 Sep 2017 18:20:18 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/09/03/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fonttoolsをunstableに入れた octiconsの新しいバージョンについてのメモを残しておいた。 来年のDebConfに向けてスポンサー探している話を流しておいた。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 30 Aug 2017 21:31:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> -usersに流れてきたメールをチラ見、ざっくり調べて原因見つけたのでパッチ送っとく。stretchにも入れたほうがいいんじゃない？  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 29 Aug 2017 19:54:04 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> xfonts-kappa20をアップロードしておいた  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 28 Aug 2017 21:21:32 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日のfonttoolsの続き。conf.pyにモジュール読み込みを記述することで対応できた。
--- a/Doc/source/conf.py +++ b/Doc/source/conf.py @@ -20,6 +20,8 @@ # import sys # sys.path.insert(0, os.path.abspath(&#39;.&#39;)) +import sys,os +sys.path.append(os.path.dirname(os.path.abspath(__file__)) + &#39;/../../Lib&#39;) # -- General configuration ------------------------------------------------  あとはdh_sphinxdocの使い方が間違っていたので修正（ビルドディレクトリを指定するものばかりだと&amp;hellip;）。
override_dh_sphinxdoc: sphinx-build $(CURDIR)/Doc/source $(CURDIR)/debian/fonttools/usr/share/doc/fonttools/html/ dh_sphinxdoc  色々変更をぶっ込んだのでexperimentalに。で、アップロードしてからバグを閉じ忘れていたことに気づいた&amp;hellip;のだが時既に遅し。cancelコマンドが働く前に入ってしまった&amp;hellip;のでコマンドメールを別途。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 27 Aug 2017 16:49:13 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>jcodingsのアップデートがmaintainer dashboardで出てたのを見つけたので、アップロード。  fonttoolsのアップデートをしようということで作業を始める。
 upstreamの更新に合わせて対応 そろそろbusterを視野に入れてpython3限定でビルド  Build-Dependsは python-* が python3-* になるのはわかっていたが、Dependsも　${python:Depends} ではなく ${python3:Depends} だった。  ドキュメントがsphinx前提になっていたのでdh-sphinxdocを導入  dh-sphinxdoc周りが今まで作業していなかったので勝手がわからずに苦労。
 Build-Dependsに python-sphinx 指定。dh-sphinxdocを含んでいるsphinx-common だけでもいいのかしら？ dh @ --with sphinxdoc しないと発動しない。 Depends: ${sphinxdoc:Depends}加えとくのも忘れずに。 ビルド時にsphinx起動していなかったのでoverrideした。  で、sphinx動かすと以下のエラー。
Traceback (most recent call last): File &amp;quot;/usr/lib/python2.7/dist-packages/sphinx/ext/autodoc.py&amp;quot;, line 560, in import_object /build/fonttools-3.15.1/Doc/source/varLib/models.rst:5: WARNING: autodoc: failed to import module u&#39;fontTools.varLib.models&#39;; the following exception was raised:  これは.. automodule::というディレクティブを指定しているためで、ビルドしたモジュールからdocstringを抽出してドキュメントにする機能を持つ、と。しかし、今回ビルドしたモジュールを読み込むのってどうやるんだろうね？</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 26 Aug 2017 08:49:03 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> pkg-perl以下に移動したパッケージを更新してpush。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 24 Aug 2017 07:35:53 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontパッケージにバグレポートパッチをもらっていたのでこちらを適用した。
んで、パッケージをビルドしたら以下のlintianエラーがでた
W: birdfont: appstream-metadata-in-legacy-location usr/share/appdata/birdfont.appdata.xml E: birdfont: appstream-metadata-legacy-format usr/share/appdata/birdfont.appdata.xml  のでパッチ作成、忘れないうちにPullRequest。
しかし
E: birdfont changes: orig-tarball-missing-upstream-signature birdfont_2.19.4.orig.tar.xz  が残っている。orig-tarball-missing-upstream-signatureはキツすぎるだろう？ということで既にBTSに登録されていてgitでwarningに落とされたようなんだけども、本当は対処するのがよいのだ？今回はoverrideしておこうと思う。あと、BTSでdupな感じのがあったのでmergeしておいた。
う、overrideしようとしたら
E: birdfont: malformed-override Override of orig-tarball-missing-upstream-signature for package type changes (expecting binary) at line 1  と言われてしまった。changes? どうやって置くのだ？？&amp;hellip;ignoreできそうにないので、ビルド時のlintianチェックをgbp.confで指定しないように変更＆pbuilder hookのファイル名をいじってすっ飛ばすようにした（hook scriptの存在に気が付かなくて「何故またlintianが走ってるのだ？？」となったバカ）。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 23 Aug 2017 20:00:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> MSのドキュメントでDebianがDe&amp;rdquo;v&amp;rdquo;ianと書かれているtypoがあるよ、というのを見て、該当ページで「編集」を押してみたらGitHubのプルリクエスト画面になった。すげぇな。  直してプルリクエスト送ったけど、botがContribution License Agreement必要かどうか判断してた。はー。  pkg-perlチームのドキュメントを読む。まずは https://pkg-perl.alioth.debian.org/git.html  pkg-perl-tools をインストールするところから始めるようだ インストールが終わると dpt コマンドが使える。メンテのためのお役立ちツールの様子。pkg-perlに絞ってるからシンプルにできてるのかな？ echo &amp;ldquo;DPT_PACKAGES=$HOME/src/pkg-perl/packages&amp;rdquo; &amp;gt;&amp;gt; $HOME/.config/dpt.conf して設定を追加。 &amp;ldquo;Non-pkg-perl methods such as gbp-create-remote-repo will not set up this infrastructure.&amp;rdquo; とあるな。先日gbp-create-remote-repoでpushしたけど消して再度作り直しておくか&amp;hellip;。 dpt alioth-repo とかして作った。これ、aliothから新しいホスト名（salsaだっけ？）になったら変わるのかな。 いじって、dpt pushで反映。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 22 Aug 2017 22:09:13 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> debian-policy 4.1.0がアップロードされた&amp;hellip;のだけども、Webサイトの方はCSSなどのファイルが一切アップロードされて無くて見栄えが悪い。問い合わせしてみた。  どうやらウェブサイト側の問題のようでSeanがバグを登録してくれた。  昨日のpkg-perlチームへの加入がOKされてたのでgit pushしておく。パッケージ自体の修正はまだ。  何故かpristine-tarブランチが切られてないパッケージがあった。どうやって作るかな？と思ったが git checkout debian/; gbp buildpackage &amp;ndash;git-pristine-tar-commit &amp;ndash;git-pbuilder &amp;ndash;git-ignore-branch を繰り返して作成した。古いバージョンだとビルドができなくなっていたのにちょっと驚いたのと、testがskipしてるのを見逃していたなーという点。 teamのroot直下じゃなくてpackagesというディレクトリを切っていたのに後で気づいて慌ててsshで入って移動した。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 21 Aug 2017 04:55:42 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> 「君のPerl moduleパッケージ、pkg-perlチームでメンテしない？」と頂けたので、これ幸いと参加申請しておく。 日経Linuxをチラ見したらpdfsamなる良さそうなソフトを取り上げてるが、「リポジトリのパッケージは古いから削除してダウンロードして使おう！」みたいなこと書いてあった。https://github.com/torakiki/pdfsam/releases とdebian/changelog比較すると大きな乖離。どうやらpkg-javaチーム傘下なのでアップデートしていいか聞いてみるか。  まぁ、それにしてもDebianで作業しても全部「Ubuntuすげー！」だけになるかと思うとやるせないので、とっととsnapshot releaseをするようにせねばならんよなーとは思う。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 17 Aug 2017 06:26:14 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> poppler-dataが新しいバージョンが上がっていたので、これ幸いとアップロード。popconいわく、非常に利用者数の多いパッケージなのでurgency=lowにして様子見。  別の登録されてるバグ、サッパリ糸口が見えないので「新しいバージョン取ってきて試してくれる？」とだけ送っておく。  libtest-time-perlの新しいバージョン&amp;hellip;が古いソースどこやったかサッパリ分からないのでapt sourceして改めてgit repositoryにして作業、アップロード。  d-perlかd-qaかのリポジトリに上げないといかんなぁ、と思いつつ&amp;hellip;。  fonts-sawarabi-minchoをアップロード libxmlbirdのFTBFS修正をアップロード、1文字だけの違いだけども。 https://wiki.debian.org/LocalGroups/Debian-JP の情報が若干古い気がしたので多少追記しといた。残りは誰かがやってくれるだろう、多分。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 16 Aug 2017 06:26:10 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>無事に帰宅して猫と遊んだ。
 jruby-joni をアップデート libuninameslist をアップデート  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 13 Aug 2017 06:32:58 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> libsql-splitstatement-perl がreject
please mention at least: libsql-splitstatement-perl-1.00020/t/data/sakila-schema.sql in your debian/copyright.  libmojo-rabbitmq-client-perl もreject
please also mention at least: libmojo-rabbitmq-client-perl-0.0.9/share/amqp0-9-1.stripped.extended.xml libmojo-rabbitmq-client-perl-0.0.9/share/fixed_amqp0-8.xml in your debian/copyright.   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 12 Aug 2017 06:51:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> Debian PolicyをSphinxへのコンバートは目処が着いてきたので、リリース前のchangelogにも記載された。細かい修正は残っているとは言え、だいぶ楽な状態になりました。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/08/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 01 Aug 2017 20:16:29 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/08/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 jcodings、もう一つ xfonts-ayu。regressionを作ってしまっていたのでそれを修正。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 31 Jul 2017 22:19:31 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/31/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 fonts-wqy-zenhei  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 30 Jul 2017 09:57:32 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング
 fonts-mikachan、deley-15 に放り込み。 fonts-f500 fonts-manchufont  何か作業しようと思っていたのだが、続きをすっかり忘れていたDebian PolicyのSphinx変換提案、どうやって作業していたのかを思い出したのでhistoryから5行ほどの手順を送りつけておいた。8/1にSprintがあるらしいので、そこで話題にしてくれるといいなぁ。とりあえずIRCチャンネルに接続だけしてログを取っておこう。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 29 Jul 2017 00:37:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日の gnome-todo の続き。
lintian warningを確認。 W: gnome-todo: gir-section-not-libdevel usr/share/gir-1.0/Gtd-1.0.gir gnome N: N: GObject-Introspection XML files (/usr/share/gir-1.0/Foo-23.gir) must be N: made available in a development package in the libdevel section of the N: archive. This is normally the same libfoo-dev package that contains N: other development files. N: N: Refer to /usr/share/doc/gobject-introspection/policy.txt for details. N: N: Severity: normal, Certainty: certain N: N: Check: gir, Type: binary, source   W: gnome-todo: typelib-section-not-introspection usr/lib/x86_64-linux-gnu/girepository-1.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 28 Jul 2017 09:25:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/28/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 fonts-ipafont-nonfree fonts-ipafont-nonfree-jisx0208 jcodings gnome-todo をちょっとだけ。  appstream-metadata-in-legacy-location は grep で検索して gbp pq import して Makefile.am を少し書き換え、git commit してパッチを作って対応。   </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 27 Jul 2017 09:25:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/27/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング
 yudit fonts-tomsontalks fonts-kacst nailgun fonts-bpg-georgian を見てみたら、upstreamがBoxに色々ソースを置いているようだ、が読めなくて何が最善なのかが全くわからん&amp;hellip; fonts-manchufont は途中まで&amp;hellip;。 fonts-wqy-zenhei は途中まで&amp;hellip;。 fonts-mikachan は途中まで&amp;hellip;で、アップロード予告だけしておく。  yudit は以下をなんとかしたいところではある&amp;hellip;とりあえずtypoは直した。
I: yudit: spelling-error-in-binary usr/bin/uniprint pres press I: yudit: spelling-error-in-binary usr/bin/yudit preceed precede I: yudit: spelling-error-in-binary usr/bin/yudit pres press I: yudit: spelling-error-in-manpage usr/share/man/man1/uniconv.1.gz enconding encoding I: yudit: spelling-error-in-manpage usr/share/man/man1/uniconv.1.gz enconding encoding I: yudit: spelling-error-in-manpage usr/share/man/man1/uniconv.1.gz recommened recommended I: yudit: desktop-entry-lacks-keywords-entry usr/share/applications/yudit.desktop I: yudit-common: font-in-non-font-package usr/share/yudit/fonts/yudit.ttf  mplus-fontsのCVS-&amp;gt;Gitリポジトリ変換を依頼しておく。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 26 Jul 2017 21:33:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/26/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 fonts-mmceder  DebConf17の申し込み確認を見ていたら、到着日を1日勘違いしていたのに気づいた。危ない&amp;hellip;とりあえず「1日早められる？」と問い合わせてみる。→無事調整された。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 25 Jul 2017 21:46:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/25/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業。
 grcompiler&amp;hellip;を見てみた。  upstreamがGitHubに移動していて新しいバージョンが出ていたのでimportして作業したのだが、testcaseがコケる&amp;hellip;gitのmasterから取ってきてもコケる&amp;hellip;これは一体？ upstreamがdebianディレクトリ追加してる&amp;hellip;困るなぁ。しかもoverride_dh_autotestでoverrideしてtest実行しないようにしてる&amp;hellip;なんだこりゃ。  fonts-vlgothic fonts-kacst-one fonts-motoya-l-cedar fonts-motoya-l-maruberi  モトヤLマルベリ3・Lシーダ3がAndroidのリポジトリから消えていた   mplusフォントのリポジトリ権限もらったので、bitmapの方はgitにしようかなーと思ったのだが、CVSの生データ持ってこないと変換できないよね&amp;hellip;。shellアクセスできる範囲には無いっぽいし。ダウンロードでいけるのかな？
$ zcat /usr/share/doc/cvs2svn/examples/cvs2git-example.options.gz &amp;gt; ./cvs2git.options $ vi cvs2git.options $ cvs2git --options=./cvs2git.options  などとやってみたが、必要な情報がtarballの中にはないようだ。サポートリクエストを出して欲しい、ということらしい。あとで問い合わせよう。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 24 Jul 2017 21:45:44 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/24/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 fonts-kacst-one  アップロードしてから「あ、ttf-パッケージがあった&amp;hellip;落とし忘れ&amp;hellip;」と気付く。あとでもう一度アップロードしよう。  fonts-takao  pristine-tarブランチにコミットし忘れてたのが発覚。apt source fonts-takaoとsnapshot.debian.orgからダウンロードして、gbp pristine-tar commitで追加。   </description>
    </item>
    
    <item>
      <title>digging into gpgme on hurd</title>
      <link>https://henrich.github.io/blog/2017/07/24/digging-into-gpgme-on-hurd/</link>
      <pubDate>Mon, 24 Jul 2017 00:11:24 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/24/digging-into-gpgme-on-hurd/</guid>
      <description>gpgme1.0 on Hurdの続き。
Running tests using /usr/bin/python2 (2.7)... PASS: initial.py PASS: t-wrapper.py PASS: t-callbacks.py FAIL: t-data.py FAIL: t-encrypt.py FAIL: t-encrypt-sym.py FAIL: t-encrypt-sign.py FAIL: t-sign.py FAIL: t-signers.py FAIL: t-decrypt.py FAIL: t-verify.py FAIL: t-decrypt-verify.py FAIL: t-sig-notation.py PASS: t-export.py PASS: t-import.py PASS: t-trustlist.py PASS: t-edit.py PASS: t-keylist.py PASS: t-keylist-from-data.py PASS: t-wait.py PASS: t-encrypt-large.py FAIL: t-file-name.py PASS: t-idiomatic.py PASS: t-protocol-assuan.py FAIL: t-quick-key-creation.py FAIL: t-quick-subkey-creation.py PASS: t-quick-key-manipulation.py PASS: t-quick-key-signing.py PASS: final.py Running tests using /usr/bin/python3 (3.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 23 Jul 2017 21:37:26 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/23/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業
 fonts-breip。メンテナが引退してるからUploadersから削除して、というバグ登録を見かけて作業したのだけど、結構大掛かりになった。
* Team upload. * add epoch to version since upstream releases it as 0.5.1 and previous packaging introduced unnecessary non-upstream files * debian/control - remove Mauro Lizaur &amp;lt;mauro@debian.org&amp;gt; from Uploaders, thank you for your work! (Closes: #869339) - add myself to Uploaders. - update Vcs-* and use https - set Standards-Version: 4.0.0 - set Build-Depends: debhelper (&amp;gt;= 10) * debian/compat - set 10 * add debian/watch * add debian/gbp.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 22 Jul 2017 06:46:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/22/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のグルーミング作業。
 vmdk-stream-converter  LaunchPadでBug登録されてたから何かね？と思ったらMIR&amp;hellip;まじかよ。「debhelper compatibility levelが8でちょっと古い」とか書いてあったから「10にしたわ」とコメント残しておく。  psphere fonts-kanjistrokeorders fonts-komatuna fonts-ipafont svn-workbench。desktopファイルにkeywordが足りないので、追加しておく。GNOME Shellのキーワード入力でsubversion/svnでsvn-workbenchが出てくるようになった。 fonts-monapo は copyright format 1.0にしている最中でスクリプトのライセンスが不明瞭だったので問い合わせ。→PDだと回答をいただく。short-nameでは「public-domain」とハイフン入れるのね。→アップロードした。  珍しくMLでの質問に答えた。debian/watchファイルはversion4になってからバージョン名とアーカイブの種類をそれぞれ@ANY_VERSION@・@ARCHIVE_EXT@ と書けるのでそれを使うと良いよ、という話をした。
sylpheedのビルドが全部揃ってないのが気になったので調査。
sylpheed build-depends on missing: - libgpgme-dev:hurd-i386 (&amp;gt;= 1.0.0)  これか。https://buildd.debian.org/status/package.php?p=gpgme1.0&amp;amp;suite=sid を見るとoverride_dh_auto_configureでコケてビルドが失敗している&amp;hellip;って、それならビルドしなおしでもいける可能性があるんじゃないか？ということで立ち上げっぱなしのhurdのVBoxイメージで動かして調査しよう。。。としたらapt updateで止まってしまうという謎の現象。qemuイメージの配布で新しいイメージが出てたのでそれをベースにやり直してみよう。
$ VBoxManage convertfromraw debian-hurd-20170613.img debian-hurd-converted-20170613.vdi --format VDI Converting from raw image file=&amp;quot;debian-hurd-20170613.img&amp;quot; to file=&amp;quot;debian-hurd-converted-20170613.vdi&amp;quot;... Creating dynamic image with size 5243928576 bytes (5001MB)...  で、起動しなおしたらmodprobe vboxdrvしろ、とでてくる。あれ？VBoxが更新されたせいかな、と思ってsudo modprobe vboxdrvしてVBoxを立ち上げなおしてみても同じエラー。&amp;hellip;あ、kernelが変わったせい？ sudo dpkg-reconfigure virtualbox-dkmsしてみる。動いた。…がやっぱりapt updateが止まる現象は変わらず。間を置いて再起動したら動くようになった&amp;hellip;という謎の対処療法的な解決の仕方でスッキリしない。
あれ？パッケージの取得場所がdeb.debian.orgからsnapshot.debian.orgとdebian-portsに変わってる？？？不便だなぁ＞Hurdイメージ
ゴソゴソと作業するが、Perl 5.26 transitionの影響でパッケージの依存関係が一時的に破損しているので諦め。後日に回そう&amp;hellip;</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 21 Jul 2017 21:26:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/21/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> fontforgeで新しいバージョンになってからhurdだけがビルドできてないなーと気づいたので、問い合わせだけしておく。。。 VcsWatchでどうやってチェックするブランチを指定するかわからなかったので、問い合わせだけしておく。。。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 20 Jul 2017 05:00:31 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/20/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> riece、見落としてたバグを閉じた fonts-misaki fonts-seto fonts-dejima-mincho quiltのchangelogを見て、ふと指摘をもらっていたtiarraを確認したらパッチまでもらっていた。適用してアップロード * Fix &amp;quot;FTBFS with perl 5.26: Unescaped left brace in regex&amp;quot;: escape literal left braces in perl regexp in debian/rules; patch from Niko Tyni. (Closes: #826502)  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 19 Jul 2017 19:51:41 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/19/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>パッケージ一覧を眺めてのグルーミング作業。
 snapper jruby-joni。「missing-classpath」なるwarningを消したい、ということでClass-Path: jcodings.jarの1行パッチをMANIFEST.MFに追加。  d-iがrootパスワードの定期変更を推奨しているというツイートを見たのでパッチ作ってBTSしておいた。
silversearcher-ag-elにRCバグが登録されたので、対応を依頼してたのをレビュー。同じような移行をしたdash-elをみると良いんじゃないかということでコメント→翌日アップロードしておいた</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 18 Jul 2017 06:40:16 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/18/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>どうやら3時間ほどdebian-mirror.sakura.ne.jpが繋がらなくなっていたようだ。
maintainer dashboardより。
 libmojolicious-plugin-renderfile-perlの#839621を修正。manのtypoはPR送った。 libmojolicious-plugin-assetpack-perlもついでに更新&amp;hellip;しようとしたら手元のリポジトリが作業途中で放棄したものになっていた&amp;hellip;  パッケージ一覧を眺めてのグルーミング作業。
 fonts-kouzan-mouhitsu。サイトを見に行ったら更新されていたので反映。  octiconsのビルドにはnpmモジュールが必要 octiconsのビルドに必要なのを見てみるか&amp;hellip;コイツの場合、buildすることになるのでdevDependenciesみた方が良いよね。
 &amp;quot;devDependencies&amp;quot;: { &amp;quot;autoprefixer&amp;quot;: &amp;quot;^6.3.6&amp;quot;, &amp;quot;ava&amp;quot;: &amp;quot;^0.16.0&amp;quot;, &amp;quot;grunt&amp;quot;: &amp;quot;^1.0.1&amp;quot;, &amp;quot;grunt-contrib-clean&amp;quot;: &amp;quot;^1.0.0&amp;quot;, &amp;quot;grunt-contrib-copy&amp;quot;: &amp;quot;^1.0.0&amp;quot;, &amp;quot;grunt-cssnano&amp;quot;: &amp;quot;^2.1.0&amp;quot;, &amp;quot;grunt-svgmin&amp;quot;: &amp;quot;^4.0.0&amp;quot;, &amp;quot;grunt-svgstore&amp;quot;: &amp;quot;^1.0.0&amp;quot; },  grunt,grunt-contrib-clean,grunt-contrib-copyはパッケージがある。逆に言うと他のは全部無い&amp;hellip;のでパッケージングが必要。ではnpm2debでチャレンジしてみるか。autoprefixerをnpm2debすると
 [error] num2fraction: dependency node-num2fraction not in debian [error] browserslist: dependency node-browserslist not in debian [error] normalize-range: dependency node-normalize-range not in debian [error] postcss-value-parser: dependency node-postcss-value-parser not in debian [error] caniuse-lite: dependency node-caniuse-lite not in debian [error] postcss: dependency node-postcss not in debian  browserslistをnpm2debすると</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 17 Jul 2017 08:45:27 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/17/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>グルーミング作業。
 fonts-aoyagi-kouzan-t。サイトを見に行ったら更新されていたのでこちらも反映してアップロード。uscanで自動で確認できるように、ファイル名に日付付けてもらうのをあとでお願いしよう。。 fonts-aoyagi-soseki。  READMEなmanのファイル名がおかしい件はdebian-perlに飛ばしてヘルプを乞うてみる&amp;hellip;「READMEは削除しとるで。こんな風に」&amp;hellip;な、なるほど。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 16 Jul 2017 09:12:33 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/16/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日のケアリスト。
 xfonts-efont-unicode、その２ xfonts-kaname、その２ xfonts-shinonome、その２ xfonts-naga10、その２ tiarra libspiro xfonts-ayu fonts-horai-umefont xfonts-kappa20もアップロードしたが、xfonts-kappa20_0.396-3.dsc: Does not match file already existing in the pool.と言われてrejectされる&amp;hellip;  恐らく推測ではあるが、oldstableに(epochが付かない)0.396-3があるので、poolにあるのとコンフリクトしてしまってるのだろう。これってDAKの問題？それともビルドしたファイルのファイル名が1:0.396-3にならないからgbpかdebhelperの問題？   xfonts-*はupstreamのMakefileがベタ書きでparallel buildがおかしいのが多い&amp;hellip;のだけど、Makeの知識が乏しく書き直せない。今後の課題ではなかろうか(Todoということで&amp;hellip;)。
その他、ruby-interpriterのdropなど。なぜかruby2.1がarm64のdeb-portsに残ってる状況なのが不思議。
apt-listchangesのdebconfメッセージを訳しておく&amp;hellip;と思ったら、本体側のpo訳してた＼(^o^)／
Selenium::Remote::Driverの作業がすごい昔で止まってるのがローカルのディスクで複数あって自分で混乱したので整理。最新版を追いかけられるよう、GitHubを見るようにする。以下、試行錯誤の結果。
$ dh-make-perl --cpan Selenium::Remote::Driver $ cd libselenium-remote-driver-perl (せっかく作ってくれたupstreamブランチとタグだが消してしまう) $ git branch -D upstream $ git tag -d upstream/1.20 (空のブランチを作る) $ git checkout --orphan upstream $ git rm -rf * (upstreamブランチはGithubのmasterから取得するようにする) $ git remote add github https://github.com/gempesaw/Selenium-Remote-Driver.git $ git pull github $ git fetch $ git branch -u github/master upstream  ------------------------------ 前に一応チェックした[screenfetchのLaunchPadへの報告](https://bugs.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 15 Jul 2017 09:12:35 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/15/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>M+ BITMAP FONTSのパッチをupstreamに送付完了。やれやれ。
openSUSE Conference Asia の情報を見てCfP書いてみる。snapperとかメンテしてるし、openQAは今作業中だし、その内容を、ということで。
さてsubmit&amp;hellip;としようと思ったら登録が必要とな。しかし、「アドレス登録済み』と言われて跳ねられる&amp;hellip;あ、昔Novellのアカウント作ったな、そう言えば。探してみたけど見つからず、リセットしようにもユーザー名は「存在しない」とな？？どういうことやねん。メールアドレスからユーザー名を割り出し→秘密の質問の答えを割り出し→ようやくリセットして登録したところ&amp;hellip;
You have used 99 words. Abstracts must be between 150 and 500 words.  &amp;hellip;150 wordsつらい(´・ω・`)
今日はcollab-maintな奴を更新
 docx2txt riece g-wrap  libselenium-remote-driver-perlのパッケージングが止まったままになっていたのを突かれていたので、思い出す作業から&amp;hellip;
E: libselenium-remote-driver-perl source: source-is-missing lib/Selenium/Firefox/x86/libibushandler.so E: libselenium-remote-driver-perl source: source-is-missing lib/Selenium/Firefox/x86/x_ignore_nofocus.so  これか。upstreamに「どうしたらこのバイナリ作れるの？」を問い合わせ。
それと最近のバージョンではMock::Timeが必要なようなのでlibmock-time-perlをITP。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 14 Jul 2017 23:11:35 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/14/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>maintainer dashboardを覗く。
 ちょっとした待ち時間でバグ報告の内容を調査。かち合ってるパッケージを見ると両方共README.podファイルを誤ったファイル名でインストールしようとしてるようだ。mv README.pod READMEしたら回避はできる、けどどう考えてもworkaroundである。Makefile.PLを実行した時点で生成されるMakefileがおかしいのだが、はてさて。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 13 Jul 2017 19:35:47 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/13/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>maintainer dashboardを覗く。
 screenfetchのwatchファイルを直した。 twittering-modeのwatchファイルを直してたやつをNMUした。 先日のfonts-konatuの更新でwatchファイルが漏れていたので対応した。  その他も少し。
 osdn.jp→.netへの切り替えを作業&amp;hellip;してる間に他にもアップデートできそうなところを見つけたのでxfonts-ayuを更新&amp;hellip;何故かpristine-tarブランチのデータがorig.tar.xzと違うようだ。しかたがないのであとから再度インポート。 xfonts-mplusを更新。M+ BITMAP FONTSのパッチをupstreamに送付&amp;hellip;したのだが届かない。添付だと跳ねられるのかしら？  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Wed, 12 Jul 2017 20:16:20 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/12/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>maintainer dashboardを覗く。
 fonts-tomsontalksのdebian/watchファイルを修正、他 もう一つmadfuloadについてもwatchファイルの修正他 さらにfonts-ocr-aもwatchファイルの修正他   Todoリストから「libuninameslistのmulti-arch対応」実施。&amp;ndash;deleyed 2 で放り込んでおく。  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Tue, 11 Jul 2017 21:32:30 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/11/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>maintainer dashboardを覗いて、fonts-konatuのupstreamのURLが変わっていたのを思い出したので対応。さらにfonts-kilojiもupstreamのURLが変わってたようなのでこちらも対応。
krb5でsaslバックエンドなLDAPが使えるようになってない、というのを見かけたので判る範囲でBTSしておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Mon, 10 Jul 2017 04:41:24 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/10/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>昨日に引き続いてopenQAがらみ。パッケージになっていなかったlibmojo-rabbitmq-client-perlをITPしてアップロード。
 pbuilder-satisfydepends-dummy : Depends: libnet-amqp-perl (&amp;gt;= 0.06) but it is not going to be installed  とビルドの際にエラーが出たが、これはパッケージバージョンが0.06~dfsg-2だったため。(&amp;gt;= 0.06~dfsg)を指定するようにして回避。
試しにcowbuilderに必要なローカルパッケージをインストールしたものを作ってビルドしてみるが、sidのlibmojolicious-perlのバージョンが低い&amp;hellip;一時的に依存バージョンを下げたブランチを作ってビルドすることにする。
E: openqa source: source-is-missing public/javascripts/chosen.jquery.js line length is 292 characters (&amp;gt;256)  libjs-chosenを提供してもダメっぽいので、明示的にoverrideした&amp;hellip;これで何も考えてないビルドは完了。ここからテスト時依存パッケージをひたすら追加していく作業をする予定。その次にspecファイルから必要なビルド作業を追加していく。&amp;hellip;まだまだ先が長い。
 $ dh-make-perl &amp;ndash;cpan Mojolicious::Plugin::Bootstrap3 (snip) Can&amp;rsquo;t find &amp;lsquo;Mojolicious::Plugin::Bootstrap3&amp;rsquo; module or distribution on CPAN ``` なんですと？
検索するとhttps://metacpan.org/pod/release/JHTHORSEN/Mojolicious-Plugin-Bootstrap3-3.1003/lib/Mojolicious/Plugin/Bootstrap3.pm にあるのだけども。。。？…おおぅMojolicious::Plugin::Bootstrap3 will be DEPRECATED.とある ということでMojolicious::Plugin::Bootstrap3は無しで良いようだ。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 09 Jul 2017 15:12:24 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/09/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>birdfontのtag打ちが抜けてたのでupstreamにping、pushしてもらえたのでuploadした。
openQAをビルドできるように、必要なツールをパッケージにする そもそも何が足りてないのか？という問題があるので、ソースを確認。cpanfilesにはやたら多くのパッケージがあるが、手元で作業中のdebian/controlファイルには指定してないパッケージが幾つかある？upstreamのspecファイルを確認すると、testを実行するときだけ指定するとかなのかな。
%if %{with tests} cpanm --installdeps --with-feature=test . %endif  ファイルに書かれていた require されているモジュール、Debianでは基本的にlib&amp;rdquo;モジュール名&amp;rdquo;-perlという名前に変換されるけど、そうじゃないものは以下のパッケージが提供していたのまでは確認。
libmojolicious-perl libwww-perl libtimedate-perl perltidy libdbix-class-perl libscalar-list-utils-perl libtest-simple-perl liburi-perl libcgi-pm-perl  SQL::SplitStatementがパッケージになってないので依存パッケージをアップロード $ dh-make-perl --cpan SQL::SplitStatement == dh-make-perl 0.95 == (snip) Needs the following debian packages during building: perl (&amp;gt;= 5.8.9), libtest-exception-perl (&amp;gt;= 0.27) Needs the following modules for which there are no debian packages available: - SQL::Tokenizer  あら、また足りない&amp;hellip;
$ dh-make-perl --cpan SQL::Tokenizer  とりあえずlibsql-tokenizer-perlをITP、Bug#867750として登録。そしてNEW queueへとアップロードしておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 08 Jul 2017 10:36:32 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/08/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>mecab-jumandicパッケージのリグレッションを作ってしまったので、直した。
autopkgtestのネタとかとして使えないかなぁ、と思う。
libmojolicious-plugin-assetpack-perlアップロード。 Lintianがtypoを報告してきていたのでpull request。しかし、PRするだけでテストビルドが走るとか、こういうのが欲しいよねぇ。
poppler-dataアップロードは何度やってもリポジトリ側からエラーが出るのでftpmasterに問い合わせ。
poppler-data_0.4.7-1.dsc: Does not match file already existing in the pool.  libuninameslistのdebian/copyright を 1.0 にしてアップロード。次はmulti-arch絡みのsuggestion対応するかね&amp;hellip;
libuninameslist-dev could be marked Multi-Arch: same libuninameslist1 could be marked Multi-Arch: same  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sun, 02 Jul 2017 08:08:23 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/02/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>今日はNew upstream releaseがあったpleiadesから。
まずは適当にビルド&amp;hellip;ってpatchが通らない。ですよねー。ということでquiltでセコセコとpush -fして .rej ファイルを確認して修正する作業から。パッチを見てると./lib/javassist/javassist.jar ./lib/apache/commons-io.jar ./lib/apache/commons-lang.jar が./lib/javassist/javassist.jar だけになってた。ということはcommons-ioと-langは要らないの？
・Pleiades に含まれる Commons IO などのライブリが他のプラグインと競合しないようにソースを取り込んでパッケージ変更 (依存は Javassist のみ)  なるほど&amp;hellip;取り込んじゃったのか。ということで依存関係落として作ったdebをインストールしてみて動作に支障は無いことを確認して依存関係をdropしたものをマージ&amp;hellip;したけど、よく考えたら作業環境には他の依存でlibcommons-*が含まれてるんだった&amp;hellip;改めてVM作ってその中で動作確認（&amp;hellip;これこそautopkgtestしたほうが良いよね、私）。
パッチで無効化していた機能、よくよくみたらビルドオプションで無効にできるじゃん、ということで動作確認してdrop。
昔debconfでpleiadesを自動で有効化しようとしたが、他のパッケージを触るので無効にした際に消してしまったREADME.Debianを復活させた。今まで相当不親切だったな&amp;hellip;いかんいかん。
その他lintianに従って諸々&amp;hellip;と作業記録のまとめ。
debian-mirror.sakura.ne.jp にHTTPS有効にしようとLet&amp;rsquo;s Encryptを入れるべく作業。certbotを使うことにして、Jessieなのでbackports有効になってるのを確認して $ sudo apt-get install python-certbot-apache -t jessie-backports してパッケージをインストール、$ sudo certbot --apache して進める。
(snip) Generating key (2048 bits): /etc/letsencrypt/keys/0000_key-certbot.pem Creating CSR: /etc/letsencrypt/csr/0000_csr-certbot.pem An unexpected error occurred: There were too many requests of a given type :: Error creating new cert :: too many certificates already issued for: sakura.</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/07/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Sat, 01 Jul 2017 08:28:22 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/07/01/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description> darts をアップデート。未だにVcs-* をhttpsにしてなかったとは&amp;hellip; mecab-naist-jdic をアップデート。特にこれということもなく。 unidic-mecab をアップデート 。dh10でスッキリと。 naist-jdic、LPのバグ報告がまったく原因が思いつかない。なんでiconvがusage出すんだ？ 報告にあったUbuntu 16.10はもう終わりになってたのかと思ったが、まだEOLになってなかったようなので、検証のためにイメージをダウンロードして仮想マシンを&amp;hellip;と思ったが、よくよく考えたらdebootstrapしたら良かったんじゃないか？ということで、$ sudo debootstrap xenial /srv/chroot/xenial http://ftp.riken.jp/pub/Linux/ubuntu/ などとしてchroot作ってテスト。再現せず。だよねー mecab、バグ報告を確認。どうすっかなーというところで今日は見送りかな。 mecab-jumandic をアップデート。あれ？pristine-tarブランチがないよ？ということで先日の方法と思ったのだけど、つい先日にアップデートされたgit-buildpackageにpristine-tarコマンドが追加されてたのでそれを。$ gbp pristine-tar commit ~/ダウンロード/mecab-jumandic_7.0-20130310.orig.tar.gzっと。
git-buildpackage (0.8.17) unstable; urgency=medium (snip) * [956982c] New command &#39;pristine-tar&#39; This allows one to run the pristine-tar import at a later point. This is useful when using component tarballs and we need to reference the right trees for the commits.    消えたら可哀想だな、ということでplumをAdoptした。  </description>
    </item>
    
    <item>
      <title>提案めも</title>
      <link>https://henrich.github.io/blog/2017/06/30/%E6%8F%90%E6%A1%88%E3%82%81%E3%82%82/</link>
      <pubDate>Fri, 30 Jun 2017 23:48:25 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/30/%E6%8F%90%E6%A1%88%E3%82%81%E3%82%82/</guid>
      <description> pkg-configとpkgconfigの入れ替え話もDebianに適用できたりするのかな？という気が。両方のメンテナに振ってみるのはありかな。 https://fedoraproject.org/wiki/Releases/26/ChangeSet のようなChangeSetをリリースの度に作っておいて、それをリリースノートに反映するのはどうだろうか？Pros,Consを整理して提案したい。  現在、リリーススケジュールがタイトに決まってないからあまり考慮されていないが、リリースマネジメントするのにGo/NoGo出す（あるいはその前にフォローする）のに重要だろう 開発の現状を潜在的Contributorに伝えて開発を上手く進めていくのに重要だろう ユーザーに開発中のDebianをアピールするのに重要だろう（リリースまでの空白期間を無くす） リリースノートの記述が楽になるし、少ない労力で漏れ無く記述できるだろう  https://fedoraproject.org/wiki/Releases/26/Schedule を参考にDebian Wikiにupstream-scheduleページを作っておくべきだな。  → https://wiki.debian.org/upstream-schedule を作ってみた。  debian-mirror.sakura.ne.jp をHTTPS対応にするのはどうしたら良いか、を確認すること。Let&amp;rsquo;s encryptを利用する？さくらインターネットさんがwildcard証明書を取得していたらそれを利用する？  </description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/06/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Fri, 30 Jun 2017 23:26:36 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/30/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>snapperのdebcheckを見るとbtrfs-toolsはLinux specificだから、Arch:linux-anyにしたほうが良いのだろうか？&amp;hellip;と思って中身見たが、既にlinux-anyだった。なんなんだ。btrfs-toolsは既にbtrfs-progsに置き換わってたので、そちらだけ反映。アップロードはまだ。
I: snapper: systemd-service-file-missing-documentation-key lib/systemd/system/snapper-boot.service I: snapper: systemd-service-file-missing-install-key lib/systemd/system/snapper-cleanup.service I: snapper: systemd-service-file-missing-install-key lib/systemd/system/snapper-timeline.service I: libsnapper4: no-symbols-control-file usr/lib/x86_64-linux-gnu/libsnapper.so.4.1.0  これは減らせるだろうか？
os-autoinstも同様かな？ビルドが失敗してたのが気になるが、どうなんだろう。KVM依存とかがあるとしたら外すのが妥当なんだけど。
qemu依存はあったので、こちらはqemuと合わせる形にしてみた。armだけは死んでるし取り除いたのだけど。qemuのArchのズラッと並んだ感じ、linux-anyに出来ない理由はあるのだろうか？
アップロードはまだ。それよりもupstreamがタグを打たないのが気になる&amp;hellip;。
美咲フォントのバグレポート、内容を精査。直ってたので閉じておいた。</description>
    </item>
    
    <item>
      <title>めんてなのおしごと</title>
      <link>https://henrich.github.io/blog/2017/06/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</link>
      <pubDate>Thu, 29 Jun 2017 20:30:03 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/29/%E3%82%81%E3%82%93%E3%81%A6%E3%81%AA%E3%81%AE%E3%81%8A%E3%81%97%E3%81%94%E3%81%A8/</guid>
      <description>screenfetch、Ubuntu側のバグ登録を確認。Power7なマシンにログインするのは、porterboxがあるだろうから出来なくもないけど面倒くさそう…最新版でも同じかを確認する返事。
トレーニング用のサンプルにでも使うか、と思っていたWhizzytexパッケージがビルドできなくなっているのを発見してしまった。FTBFSって奴ですな（通常のバイナリパッケージはmass rebuildする奇特な人が居て見つけられるのだけど、これはArch: allだから逃れてしまったんじゃないかな、という推測）。
 cowbuilderでビルドしようとしたらpgfは仮想パッケージだからビルドできないよ、と出てきた&amp;hellip; apt show pgf&amp;hellip;パッケージは確かに存在しない。 trackerのページで確認すると、最後のは[2014-11-03] Removed 2.10-1 from unstable&amp;hellip;なになに？「integrated into texlive」？ ということで、texliveなパッケージにpgfが含まれてるようだと言うことを踏まえてapt searchしてtexlive-picturesを追加（よく考えたらapt-fileの方が正確だったか？） debsignしてdputして終わり。
diff -Nru whizzytex-1.3.2/debian/changelog whizzytex-1.3.2/debian/changelog --- whizzytex-1.3.2/debian/changelog 2014-09-15 11:44:18.000000000 +0900 +++ whizzytex-1.3.2/debian/changelog 2017-06-29 20:11:36.000000000 +0900 @@ -1,3 +1,11 @@ +whizzytex (1.3.2-1.4) unstable; urgency=medium + + * Non-maintainer upload. + * debian/control + - fix Build-Depends since pgf is intergrated into TeXLive. + + -- Hideki Yamane &amp;lt;henrich@debian.org&amp;gt; Thu, 29 Jun 2017 20:11:36 +0900 + whizzytex (1.</description>
    </item>
    
    <item>
      <title>aptの奇妙な出力</title>
      <link>https://henrich.github.io/blog/2017/06/28/apt%E3%81%AE%E5%A5%87%E5%A6%99%E3%81%AA%E5%87%BA%E5%8A%9B/</link>
      <pubDate>Wed, 28 Jun 2017 22:00:45 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/28/apt%E3%81%AE%E5%A5%87%E5%A6%99%E3%81%AA%E5%87%BA%E5%8A%9B/</guid>
      <description>582 MB を 7分 1秒 で取得しました (1,382 kB/s) Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;console-setup-linux=1.165&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;libavutil55=7:3.2.6-1+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;gvfs-backends=1.30.4-1+b1&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;vlc-plugin-notify=2.2.6-2+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;vlc-plugin-visualization=2.2.6-2+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;vlc-plugin-skins2=2.2.6-2+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;vlc=2.2.6-2+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;mplayer=2:1.3.0-6+b3&#39;] to retrive changelog Calling [&#39;apt-get&#39;, &#39;-qq&#39;, &#39;changelog&#39;, &#39;gstreamer1.</description>
    </item>
    
    <item>
      <title>久々にbackports</title>
      <link>https://henrich.github.io/blog/2017/06/28/%E4%B9%85%E3%80%85%E3%81%ABbackports/</link>
      <pubDate>Wed, 28 Jun 2017 20:44:08 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/28/%E4%B9%85%E3%80%85%E3%81%ABbackports/</guid>
      <description>そういえばjdがstretchに入らなかったのだった。stretch-backportsに入れるか。久々にbackportsを使うのでサッパリ忘れていた。debian/stretch-backportsブランチを作り、dch &amp;ndash;bpoでchangelog作成&amp;hellip;（この時点ではdevscriptsが更新されて無くてjessie-backportsが指定されてしまったのでそれも直す。）
次にbase.cowを作る。
$ sudo cowbuilder --create --distribution stretch --basepath /var/cache/pbuilder/stretch.cow  あとはビルドするだけ。。。でもlintianがbackports-changes-missingなる警告を出す。ふむふむ。。。
It is recommended to include all changelog entries since the last version on debian-backports or since stable if it&#39;s the first version. You should do this by passing &amp;quot;-v&amp;quot; to dpkg-buildpackage. Eg: &amp;quot;debuild -v0.7.5-2&amp;quot;, where &amp;quot;0.7.5-2&amp;quot; is the version in stable. If the package wasn&#39;t in stable or backports before you don&#39;t have include the changelog entries (but you are free to do so).</description>
    </item>
    
    <item>
      <title>epoch付きバージョンだとpristine-tarブランチからチェックアウトできない</title>
      <link>https://henrich.github.io/blog/2017/06/27/epoch%E4%BB%98%E3%81%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A0%E3%81%A8pristine-tar%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%A2%E3%82%A6%E3%83%88%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/</link>
      <pubDate>Tue, 27 Jun 2017 21:22:43 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/27/epoch%E4%BB%98%E3%81%8D%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A0%E3%81%A8pristine-tar%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%8B%E3%82%89%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%A2%E3%82%A6%E3%83%88%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/</guid>
      <description>$ gbp buildpackage --git-pbuilder --git-pristine-tar --git-tag gbp:info: Tarballs &#39;xfonts-kappa20_0.396.orig.tar.xz&#39; not found at &#39;../tarballs/&#39; gbp:error: Pristine-tar couldn&#39;t checkout &amp;quot;xfonts-kappa20_0.396.orig.tar.xz&amp;quot;: fatal: Path &#39;xfonts-kappa20_0.396.orig.tar.xz.delta&#39; does not exist in &#39;refs/heads/pristine-tar&#39; pristine-tar: git show refs/heads/pristine-tar:xfonts-kappa20_0.396.orig.tar.xz.delta failed  何故かprsistine-tarブランチからtarballがチェックアウトできないとな。
henrich@hp:~/src/pkg-fonts/xfonts-kappa20(master)$ git checkout pristine-tar Switched to branch &#39;pristine-tar&#39; henrich@hp:~/src/pkg-fonts/xfonts-kappa20(pristine-tar)$ ls Kappa20-0.396.tar.bz2.delta Kappa20-0.396.tar.bz2.id xfonts-kappa20_1:0.396.orig.tar.xz.delta xfonts-kappa20_1:0.396.orig.tar.xz.id  ある。どうやら、バージョン番号にepochが付くとダメっぽい。どうするよ。。。</description>
    </item>
    
    <item>
      <title>ハッシュ値が一致しないorig.tarballでアップロードが蹴られる時</title>
      <link>https://henrich.github.io/blog/2017/06/26/%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%8C%E4%B8%80%E8%87%B4%E3%81%97%E3%81%AA%E3%81%84orig.tarball%E3%81%A7%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E8%B9%B4%E3%82%89%E3%82%8C%E3%82%8B%E6%99%82/</link>
      <pubDate>Mon, 26 Jun 2017 22:01:11 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2017/06/26/%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%8C%E4%B8%80%E8%87%B4%E3%81%97%E3%81%AA%E3%81%84orig.tarball%E3%81%A7%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E8%B9%B4%E3%82%89%E3%82%8C%E3%82%8B%E6%99%82/</guid>
      <description>git-buildpackageでビルドしたのだけど、pristine-tarブランチに作られたファイルから生成されるtarballと最初にアップロードしたorig.tarballとハッシュ値が違うということで蹴られることがある。tarballは都度若干違う値になっちゃうから、そもそもgbp import-origした際にキチンとpristine-tar作るようにしてあるはず、なんだけど、ミスをすることが多々&amp;hellip;
で、どうやってリカバリするかというと、apt source して orig.tarball を差し替える（ダメな場当たり対応。良くやる）というのが思いつくのだけど、ちゃんとpristine-tarブランチのファイルを置き換えた方が良い。
とはいうものの、このブランチのファイル、どうやって生成しているのかよく分かってない。いっつも単にimport-origしてただけだし。うーん。
色々試行錯誤した末に、こうしてみた。
 適当なところに apt source  でリポジトリにあるorig.tarballを持ってくる 適当なところで debcheckout  してテンポラリ作業用のgitリポジトリを持ってくる テンポラリgitリポジトリで
$ cd /tmp/&amp;lt;package repo&amp;gt; $ git checkout pristine-tar $ git rm &amp;lt;該当バージョンのファイル&amp;gt;; git commit -a $ git checkout master; git tag -d upstream/&amp;lt;version&amp;gt; $ gbp import-orig &amp;lt;orig.tarball&amp;gt;  などとしてpristine-tarブランチのファイルを更新して、実際のgitリポジトリに移動して、更新分だけ貰う
$ cd ~/&amp;lt;package repo&amp;gt; $ git checkout pristine-tar $ git pull file:::/tmp/&amp;lt;package repo&amp;gt; pristine-tar   回りくどいなーとは思うのだけども。</description>
    </item>
    
    <item>
      <title>ISOファイルのマウントが残っていてemergency modeで起動</title>
      <link>https://henrich.github.io/blog/2016/02/13/iso%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%9E%E3%82%A6%E3%83%B3%E3%83%88%E3%81%8C%E6%AE%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%81%A6emergency-mode%E3%81%A7%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Sat, 13 Feb 2016 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2016/02/13/iso%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%9E%E3%82%A6%E3%83%B3%E3%83%88%E3%81%8C%E6%AE%8B%E3%81%A3%E3%81%A6%E3%81%84%E3%81%A6emergency-mode%E3%81%A7%E8%B5%B7%E5%8B%95/</guid>
      <description>デスクトップを再起動したらemergency modeになってしまった。ううん？なんか変なののアップグレード踏んだかな、でもここ数日そんなクリティカルな情報は見た記憶がない。Sidを使ってるからこういう事態はあり得る…とはいえ、嬉しいものでもない。とりあえずカーネルを差し替えて再起動…1分半ほど待たされた後、同じくemergency modeになった。はて、systemdかX.org周りか。でもアップデートした記憶ないな…と、メッセージ通りrootでログインしてjournalctl -xbでログを見る…あれ？なんかマウントしようとして失敗してる？（ログは消えたので例示できないけど）
前にnautilus経由でイメージマウントしたISOファイルが/etc/fstabにマウントポイントが残っていたのでコメントアウトして、再起動…うまくいった。
#/dev/loop0 /media/henrich/IRM_SHV_X64FRE_JA-JP_DV5 udf ro,nosuid,nodev,relatime,uid=1000,gid=1000,iocharset=utf8 0 0 #/dev/loop2 /media/henrich/IRM_SHV_X64FRE_JA-JP_DV51 udf ro,nosuid,nodev,relatime,uid=1000,gid=1000,iocharset=utf8 0 0 #Entry for /dev/loop1 : #UUID=2015-10-30-20-02-13-00 /media/henrich/J_SSS_X64FRE_JA-JP_DV91 udf ro,nosuid,nodev,relatime,uid=1000,gid=1000,iocharset=utf8 0 0  なんなんだこれは。</description>
    </item>
    
    <item>
      <title>debsnapコケた</title>
      <link>https://henrich.github.io/blog/2015/11/28/debsnap%E3%82%B3%E3%82%B1%E3%81%9F/</link>
      <pubDate>Sat, 28 Nov 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/11/28/debsnap%E3%82%B3%E3%82%B1%E3%81%9F/</guid>
      <description>gbp import-dscs &amp;ndash;debsnapで過去のパッケージを取得してgit repoを作る…のは前にやったことがあるのだが、何故か今回はorig.tar.gzを取得できていなくてエラーになった。何故？
$ debsnap sylpheed 3.2.0-1 --force -v Getting json http://snapshot.debian.org/mr/package/sylpheed/ Getting json http://snapshot.debian.org/mr/package/sylpheed//3.2.0-1/srcfiles?fileinfo=1 Getting file sylpheed_3.2.0-1.dsc: http://snapshot.debian.org/file/13df739bd3cac3d58d46a06154c5fcdfe27110a6 Getting file sylpheed_3.2.0-1.debian.tar.gz: http://snapshot.debian.org/file/36a9145a40f5c2197950acd525e15e7c493a552c Getting file sylpheed_3.2.0~rc0.orig.tar.gz: http://snapshot.debian.org/file/a41a8e2fc3c5e4935f30c7bacff8d72508546e35 It downloads sylpheed_3.2.0~rc0.orig.tar.gz, instead of sylpheed_3.2.0.orig.tar.gz a41a8e2fc3c5e4935f30c7bacff8d72508546e35: sylpheed_3.2.0~rc0.orig.tar.gz Seen in debian on 2012-06-25 16:23:22 in /pool/main/s/sylpheed. Size: 4925789 sylpheed_3.2.0.orig.tar.gz Seen in debian on 2012-06-29 16:11:26 in /pool/main/s/sylpheed. Size: 4925789 Yes, those files are exactly same one. [{&amp;quot;name&amp;quot;: &amp;quot;sylpheed_3.2.0~rc0.orig.tar.gz&amp;quot;, &amp;quot;archive_name&amp;quot;: &amp;quot;debian&amp;quot;, &amp;quot;path&amp;quot;: &amp;quot;/pool/main/s/sylpheed&amp;quot;, &amp;quot;first_seen&amp;quot;: &amp;quot;20120625T162322Z&amp;quot;, &amp;quot;size&amp;quot;: 4925789}, {&amp;quot;name&amp;quot;: &amp;quot;sylpheed_3.</description>
    </item>
    
    <item>
      <title>libxmlbird のビルド直してた</title>
      <link>https://henrich.github.io/blog/2015/11/15/libxmlbird-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E7%9B%B4%E3%81%97%E3%81%A6%E3%81%9F/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/11/15/libxmlbird-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E7%9B%B4%E3%81%97%E3%81%A6%E3%81%9F/</guid>
      <description>libxmlbirdのビルドが1.0.7になってこけるのだが、理由はpkgconfigファイルをビルドするタスクがデフォルトで外れているので、.pcファイルがないにも関わらず、install.pyで指定されているためだった。upstreamに報告済み。あと、git repoでタグ打ちがないのも。</description>
    </item>
    
    <item>
      <title>libxmlbird のビルド直してた</title>
      <link>https://henrich.github.io/blog/2015/06/29/libxmlbird-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E7%9B%B4%E3%81%97%E3%81%A6%E3%81%9F/</link>
      <pubDate>Mon, 29 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/29/libxmlbird-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E7%9B%B4%E3%81%97%E3%81%A6%E3%81%9F/</guid>
      <description>libxmlbirdのビルド、*kfreeBSDなプラットフォームでビルド死んでるのはscripts/bavala.pyでのバグかなぁ。あとdodo.pyもbsdで定義していたところがあったので、ちょっと見てみてkfreebsdな場合、というのを追加してワークアラウンドした。
sparcでのビルド失敗は
Traceback (most recent call last): File &amp;quot;/usr/bin/doit&amp;quot;, line 5, in &amp;lt;module&amp;gt; from pkg_resources import load_entry_point ImportError: No module named pkg_resources  …なんでモジュールが無いというのか？
ビルドログを比較するとsparcではpython-configparserが余分だな。余分なら「存在しない」エラーが起きなさそうなものだけど。。。 さらにビルドログを比較して、パッケージのバージョンを比較するのはどうか…おぉ、python-doitのバージョンが違う。sparcの方が新しい…ということでcowbuilder環境をアップデートしてビルドしたらamd64でも同じエラーでコケた。
新しいバージョンになると
python-pkg-resources: /usr/lib/python2.7/dist-packages/pkg_resources.py  を必要とするっぽい。追加するとビルドできた。依存パッケージの方の変更なので、これCIしてないと気づかないよね。。。アップロード後に「FTBFSあるで」とバグレポートが来てたが、その後すぐに「incomingで直ってるのね」と。
それからbirdfontもpython-doit使ってるのでこれも直した。</description>
    </item>
    
    <item>
      <title>autopkgtest触ってみた（らしい）</title>
      <link>https://henrich.github.io/blog/2015/06/28/autopkgtest%E8%A7%A6%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F%E3%82%89%E3%81%97%E3%81%84/</link>
      <pubDate>Sun, 28 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/28/autopkgtest%E8%A7%A6%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F%E3%82%89%E3%81%97%E3%81%84/</guid>
      <description>Perlパッケージのautopkgtestについてはサイトに記述がある。
Testsuite: autopkgtest-pkg-perl
をdebian/controlファイルに指定するだけで、debian/test以下で色々しなくても、/usr/share/pkg-perl-autopkgtest/*.d にあるテストを実行するそうな。このファイルはpkg-perl-autopkgtestパッケージにある（名前とテストスイートが一致してない…）
実施されるテストは * smoke * use.t * syntax.t で、どうしてもエラーになるようであれば debian/tests/pkg-perl/SKIP に記載すれば良いようだ。
実施についてはschrootを使った記述があるのだけれども、後述するようにうまくいかない。。。
$ sudo apt-get install sbuild $ sudo mkdir -p /srv/chroot/sid $ sudo sbuild-createchroot sid /srv/chroot/sid http://debian-mirror.sakura.ne.jp/debian  [sid-amd64-sbuild] type=directory description=Debian sid/amd64 autobuilder directory=/srv/chroot/sid groups=root,sbuild root-groups=root,sbuild profile=sbuild users=henrich root-users=henrich  $ adt-run libdbix-class-optimisticlocking-perl_0.02-1_amd64.changes --- schroot sid-amd64-sbuild adt-run [20:22:46]: version 3.14.3 adt-run [20:22:46]: command line: /usr/bin/adt-run libdbix-class-optimisticlocking-perl_0.02-1_amd64.changes --- schroot sid-amd64-sbuild adt-virt-schroot requires ephemeral schroot sessions. Set a &amp;quot;union-type&amp;quot; or use a tarball schroot adt-run [20:22:46]: ERROR: testbed failed: cannot send to testbed: [&#39;BrokenPipeError: [Errno 32] Broken pipe\n&#39;]  最初はunion-typeの指定エラーがでたのでこれを追加</description>
    </item>
    
    <item>
      <title>dh-make-perlでPerlモジュールが半自動でDebianパッケージに</title>
      <link>https://henrich.github.io/blog/2015/06/28/dh-make-perl%E3%81%A7perl%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%8C%E5%8D%8A%E8%87%AA%E5%8B%95%E3%81%A7debian%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AB/</link>
      <pubDate>Sun, 28 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/28/dh-make-perl%E3%81%A7perl%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%8C%E5%8D%8A%E8%87%AA%E5%8B%95%E3%81%A7debian%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AB/</guid>
      <description>dh-make-perlを使えばperl moduleのパッケージは容易にできるというのは知ってたけど、どう使うのかな、と。
$ dh-make-perl == dh-make-perl 0.86 == Trying /home/henrich/src/qa/../qa.tar.gz... not found. Trying /home/henrich/src/qa/../qa.tar.bz2... not found. Trying /home/henrich/src/qa/../qa.tar.xz... not found. Trying /home/henrich/src/qa/../qa.tar.lzma... not found. WARNING: Neither META.json nor META.yml was found Unable to determine dist name, no Build.PL, no Makefile.PL Please use --cpan.  ダウンロードしたtarballに対して使う、と思い込んでたんだけども、&amp;ndash;cpanなんてオプションがある。もしかして、モジュール名を指定したら…
$ dh-make-perl --cpan DBIx-Class-OptimisticLocking == dh-make-perl 0.86 == CPAN.pm requires configuration, but most of it can be done automatically. If you answer &#39;no&#39; below, you will enter an interactive dialog for each configuration option instead.</description>
    </item>
    
    <item>
      <title>testでskippedが多い場合は依存関係が満たされてないかもしれない</title>
      <link>https://henrich.github.io/blog/2015/06/28/test%E3%81%A7skipped%E3%81%8C%E5%A4%9A%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AF%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%81%8C%E6%BA%80%E3%81%9F%E3%81%95%E3%82%8C%E3%81%A6%E3%81%AA%E3%81%84%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84/</link>
      <pubDate>Sun, 28 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/28/test%E3%81%A7skipped%E3%81%8C%E5%A4%9A%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AF%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%81%8C%E6%BA%80%E3%81%9F%E3%81%95%E3%82%8C%E3%81%A6%E3%81%AA%E3%81%84%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84/</guid>
      <description>さて、ドキュメントにはテストについて色々書いてありました。
PERL_DL_NONLAZY=1 /usr/bin/perl &amp;quot;-MExtUtils::Command::MM&amp;quot; &amp;quot;-MTest::Harness&amp;quot; &amp;quot;-e&amp;quot; &amp;quot;undef *Test::Harness::Switches; test_harness(1, &#39;blib/lib&#39;, &#39;blib/arch&#39;)&amp;quot; t/*.t t/00-compile.t ................ 1..1 ok 1 - DBIx::Class::OptimisticLocking loaded ok ok t/01-dirty.t .................. skipped: needs DBD::SQLite for testing t/02-dirty-ignored.t .......... skipped: needs DBD::SQLite for testing t/03-all.t .................... skipped: needs DBD::SQLite for testing t/04-all-ignored.t ............ skipped: needs DBD::SQLite for testing t/05-version.t ................ skipped: needs DBD::SQLite for testing t/06-version-custom-column.t .. skipped: needs DBD::SQLite for testing t/07-version-with-ignored.t ... skipped: needs DBD::SQLite for testing t/08-none.</description>
    </item>
    
    <item>
      <title>git repoとdh-make</title>
      <link>https://henrich.github.io/blog/2015/06/23/git-repo%E3%81%A8dh-make/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/23/git-repo%E3%81%A8dh-make/</guid>
      <description>一度upstream tarballを元にdh-makeでパッケージを作った。 で、それを元にupstreamのgit repoにdebianディレクトリを追加する形を作ってみた。
git clone https://github.com/os-autoinst/os-autoinst.git cd os-autoinst git checkout 4.1 git tag upstream/4.1 git checkout -b debian cp -arp ../os-autoinst-4.1/debian ./ git add debian git commit  debian/gbp.conf はこんな感じ。
[DEFAULT] debian-branch=debian gbp buildpackage  これで出来た。終わり。(ここで色々.git/configいじった。aliothとしてgit repoを追加）
git config remote.pushdefault alioth   .git/configでoriginじゃないのを追加するコマンドはなんだろう？ dh-makeでgit repositoryに対応するにはどうすれば良いのだろう  </description>
    </item>
    
    <item>
      <title>proposed-updatesリポジトリを指定する際にはstableなのかコードネームなのか</title>
      <link>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/22/proposed-updates%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B%E9%9A%9B%E3%81%AB%E3%81%AFstable%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%B3%E3%83%BC%E3%83%89%E3%83%8D%E3%83%BC%E3%83%A0%E3%81%AA%E3%81%AE%E3%81%8B/</guid>
      <description>proposed-updatesリポジトリにパッケージをアップロードする際、 changelogのdistribution名を何にするのが良いのか？とふと思ったので、調べてみた。debian-releaseメーリングリストではstable派、jessie派が混ざっていたが、はて？この前まではstable-proposed-updatesが推奨じゃなかったのか？
疑問が晴れなかったのでdebian-develに質問したら「jessieとかって書くほうがいいんじゃない？」という示唆が。ふむふむ。でも「dchだとワーニング出るよね？」という指摘も。だよね。「んならバグファイルすれば？」というreplyがついていたので、そっかーと思って登録しておいた。Bug#789587です。
しかし、jessie-proposed-updatesとかはダメなのかな？という新たな疑問が出てきてたので、それも投稿してみた。</description>
    </item>
    
    <item>
      <title>gbpとpbuilderのオプション</title>
      <link>https://henrich.github.io/blog/2015/06/19/gbp%E3%81%A8pbuilder%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3/</link>
      <pubDate>Fri, 19 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/19/gbp%E3%81%A8pbuilder%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3/</guid>
      <description>gbp buildpackage --git-pbuilder-options=&amp;quot;-sa&amp;quot;  上記だとorig.tar.xzが.dscファイルに含まれないため、パッケージのアップロードが蹴られた。
sudo cowbuilder --build --debbuildopt=&amp;quot;-sa&amp;quot; libxmlbird_1.0.4-2.dsc  だとうまくいった。おかしいな、基本的に&amp;ndash;git-pbuilder-optionsと&amp;ndash;debbuildoptは等価ではないのか？
$ gbp buildpackage --git-tag --git-pbuilder-options=-sa gbp:info: Orig tarball &#39;libxmlbird_1.0.4.orig.tar.xz&#39; not found at &#39;../tarballs/&#39; gbp:info: Exporting &#39;HEAD&#39; to &#39;/home/henrich/src/pkg-fonts/build-area/libxmlbird-tmp&#39; gbp:info: Moving &#39;/home/henrich/src/pkg-fonts/build-area/libxmlbird-tmp&#39; to &#39;/home/henrich/src/pkg-fonts/build-area/libxmlbird-1.0.4&#39; Building with cowbuilder for distribution sid I: using cowbuilder as pbuilder (snip) dpkg-source: info: building libxmlbird in libxmlbird_1.0.4-2.dsc dpkg-genchanges -S &amp;gt;../libxmlbird_1.0.4-2_source.changes dpkg-genchanges: not including original source code in upload  </description>
    </item>
    
    <item>
      <title>reproducible build対応作業</title>
      <link>https://henrich.github.io/blog/2015/06/06/reproducible-build%E5%AF%BE%E5%BF%9C%E4%BD%9C%E6%A5%AD/</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/06/reproducible-build%E5%AF%BE%E5%BF%9C%E4%BD%9C%E6%A5%AD/</guid>
      <description>JDのreproducible buildがエラーになってるのはDATEとかを展開するMacroが入ってるから、ということでその部分を削除するパッチを追加してアップロード。無事成功しました。
fonts-kilojiパッケージ、単にアーカイブから展開するだけなのに&amp;ldquo;timestamps_difference_by_unzip&amp;rdquo;でunreproducibleだったのは「TZ=UTCを指定せよ」とのことなのでそうすることに。無事成功しました。
jruby-joniパッケージはJava .jar files contain user login in the Built-By of MANIFEST.MFてなことだったので、この辺りを削るパッチを追加することにしました。
reproducible buildの旅はまだ続く。今度はgrcompilerパッケージ。
&amp;gt; export DEB_BUILD_MAINT_OPTIONS = hardening=+all DPKG_EXPORT_BUILDFLAGS = 1 include /usr/share/dpkg/buildflags.mk  という感じでhardeningもプラスしてみてどうなるのか、を見てみることにする…成功。
birdfontについてもreproducible buildを。問題は「Embed build time」だそうで、ソースの行が示されていた。
&amp;gt; def write_config (prefix): print (&amp;quot;Writing Config.vala&amp;quot;) vars = ((&#39;VERSION&#39;, VERSION), (&#39;BUILD_TIMESTAMP&#39;, time.asctime( time.localtime(time.time()))), (&#39;PREFIX&#39;, prefix), )  という感じで入ってるので、BUILD_TIMESTAMPの行を削除するパッチを追加。でもこれだけだとbuild failureになるので、libbirdfont/BirdFont.valaも修正。こちらも成功。</description>
    </item>
    
    <item>
      <title>twitter-textパッケージとか</title>
      <link>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/02/twitter-text%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%A8%E3%81%8B/</guid>
      <description>ruby-twitter-textのここ暫くのアップデートで、バージョン謎の「+conformance」が追加されている？と中身を見たらtest用に別のソースからのコードが必要になっているのでそれを放り込んでいるらしい。さらによくよく見ると、upstreamでは複数のtwitter-text-*パッケージが単一のtwitter-textにまとめられていた。 これはtwitter-textパッケージから色々生成するほうがいいよね、ということでTodoをバグとして登録しておくことにした。
あとはjcodingsをアップデートして放り込みなど。</description>
    </item>
    
    <item>
      <title>Debian Policyはi18nできないかな</title>
      <link>https://henrich.github.io/blog/2015/06/01/debian-policy%E3%81%AFi18n%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%8B%E3%81%AA/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/06/01/debian-policy%E3%81%AFi18n%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%81%8B%E3%81%AA/</guid>
      <description>$ po4a-gettextize -f sgml -m policy.sgml -l ja/policy.ja.sgml -p ja.po policy.sgml:178: (po4a::sgml) 不明なタグ HTTPSITE  で終わってしまう。httpsite自体は/usr/share/sgml/debiandoc/dtd/sgml/1.0/debiandoc.dtdで定義されている。po4aでサポートしているフォーマットを見ると、
$ po4a-gettextize --help-format 有効フォーマット一覧: (snip) - sgml: DebianDoc DTD と DocBook DTD。 (snip)  とあり、明確にDebianDoc DTDをサポートしているはず、なんだけど。po4aのバグっぽい気がする。</description>
    </item>
    
    <item>
      <title>bash-completionとか</title>
      <link>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/bash-completion%E3%81%A8%E3%81%8B/</guid>
      <description>ほぼ寝込んでいたので、dcut のbash completionをコピペで作って投げただけです。</description>
    </item>
    
    <item>
      <title>os-autoinst</title>
      <link>https://henrich.github.io/blog/2015/05/31/os-autoinst/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/os-autoinst/</guid>
      <description>ITPして2年ぐらい放置していたos-autoinstが最近また気になったのでもう一度作業再開。手元ではパッケージができて動いたところまでは確認したので、RFPになっていたのをITPに戻しました。
ただ、openSUSEパッケージとFedoraパッケージとの差異を確認して吸収していかなければならないのと、そのままだとコマンドがエラーになっちゃってるのがあるので、その点を修正しなければいけないですな。
あと、実際に放り込むとしたら、ライセンスは明確なんだけど著作権保持者が不明なのでissue作っておきました。</description>
    </item>
    
    <item>
      <title>まだまだdevelopers-reference</title>
      <link>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/31/%E3%81%BE%E3%81%A0%E3%81%BE%E3%81%A0developers-reference/</guid>
      <description>相変わらずdevelopers-referenceにちょっかいを出している。
 Bug#172892は既にCVSの時代じゃないだろう、ということでwontfixタグを勝手につけておいた。 Bug#540975は直っていたので閉じておいた。 Bug#544135とBug#604193についてはパッチにコメントをした。  </description>
    </item>
    
    <item>
      <title>Hyper-Vサポートまわりとか</title>
      <link>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/30/hyper-v%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%A8%E3%81%8B/</guid>
      <description>色々と便宜を図ってもらっているので、恩返ししないとなーと。LIS(Linux Integration Srevices)というのは、見ていくとこんな感じかな * カーネル内のドライバ * カーネルのソースに含まれているtools/hv内のデーモン
ドライバについては、Jessieの3.16のに4.0ベースのとかをそのままbackportして大丈夫なのかな。ビルドできれば影響範囲はhvドライバのみに収まるような気もする。とりあえず、今のカーネルのをそのまま使うでも使えるっぽい。
デーモンについてはこちらにまとめられているが、RHEL/Fedora系統だとhyperv-daemonsメタパッケージに依存している各パッケージで提供しているようだ（はて、デーモンごとにパッケージが細分化されていて、なぜかライセンスも別パッケージになってる…？）。Ubuntuはバージョンごとに色々違うようだ。さて、どうするかな…と思ったが、hyperv-daemonsパッケージでいいかな、と。あとはsystemdサービスをFedoraからパチってきた。それから調整、っと。。。
dh-systemdは以下の理由から使わない方向で、installファイルでコピーするだけにした * そもそものパッケージの構成が複雑でdh使ってないので dh $@ &amp;ndash;with systemd が指定できない * パッケージ名とサービス名が違う（サービスが３つもある）
途中までで、とりあえず無くならないようにパッチを投げておく。
あとはdescriptionをまともにする
実際にHyper-V上のDebianで動作を確認する…ってどうやるんだ？Azureでいいか。
Azureで仮想マシンを作る…ってそのままだとギャラリーにはDebianイメージ無いので、VMDepotという ここで有志が作っているイメージを使わせてもらう。とはいえ、どの程度の信頼性が置けるものかというものはあるけども。 ログインしたらshellが/bin/shだった。chshして、bash-completion入れて、upgradeしてrebootして再度。。。って妙にrebootに時間がかかるな。繋がらない？
sudo systemctl start Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory Failed to get D-Bus connection: No such file or directory  あれ。service見当たらないな…手動で起動した。これはパッケージを直す必要があるなぁ。 でも、３つのサービスのうち、一つが起動しない。ってserviceファイルに/dev/vmbus/hv_fcopyが必要って書いたけど/dev/vmbusが無いんだな。これはHyper-VだとあってAzureだと無いのか、それともVMDepotのJessieがアレで見つからないのか？→CentOSベースのをAzureで立ち上げたが同様に/dev/vmbusは無い。はて、Hyper-VとAzureのは若干違うのか、それとも元にしたFedoraのがアレなのか。皿に検索すると何かへのパッチの投稿が見つかった、がこれだと「/sys/bus/vmbus」って書いてあるけど、こっちが正解じゃない？…いや/dev/vmbusがあるのもあるな。。。</description>
    </item>
    
    <item>
      <title>xmltoがらみとOrphanという言葉の語感</title>
      <link>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/30/xmlto%E3%81%8C%E3%82%89%E3%81%BF%E3%81%A8orphan%E3%81%A8%E3%81%84%E3%81%86%E8%A8%80%E8%91%89%E3%81%AE%E8%AA%9E%E6%84%9F/</guid>
      <description>upstreamの方にパッチの話をしたら「もうsvnに取り込み済みやっちゅーねん」って返信が。おぉ、tarballしか見てなかった…大変失礼。
あと、メンテナが「手放すよー」ってメールしてた。引き金引いちゃったかなーと思いつつ、健全なことだなとも思う。 個人的にはOrphanという言葉はあまりよくなく、彼のメールにもあった「fresh blood」を使うのが良いんじゃないかな、と感じる。Needs Fresh Blood, 略してNFB。</description>
    </item>
    
    <item>
      <title>developers-referenceへパッチ</title>
      <link>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/28/developers-reference%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
      <description>developers-referenceがここの所ずっとアップデートされていない。 せっかくfuzzyを潰したというのに、パッケージのほうが更新されないため、サイトの方は未訳のままに見える。
どうするんだろう？ということでuploaderにメールしたら「I would welcome a patch.」とな。 ああそうかい、やるよやるよ、ということでBTSに溜まっていたパッチをまとめたものと、epubがらみでのエラーの修正やら、wheezy-&amp;gt;jessieに合わせた変更などをgit format-patchで作って送りつけた。
その際にepubの方のエラーでxmltoを見る機会があったのだけど、これもアップデートが3年ぐらい滞ってるし、パッチも放置されてたのでメンテナに「アップデートしたいんだけど」とメールして、忘れないうちにDeleyed queue/15に放り込み。upstreamの方にもBTSにあったパッチを送りつけておいた。やれやれ。</description>
    </item>
    
    <item>
      <title>debcheckoutへパッチ</title>
      <link>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</link>
      <pubDate>Mon, 18 May 2015 01:00:00 +0900</pubDate>
      <author>henrich@debian.org (Hideki Yamane)</author>
      <guid>https://henrich.github.io/blog/2015/05/18/debcheckout%E3%81%B8%E3%83%91%E3%83%83%E3%83%81/</guid>
      <description>Debianパッケージのソースを取得したいときには「apt-get source」を使う。 だが、これだと開発用のソースリポジトリで色々変更されている場合にパッチを送られた側が微調整することになるので嬉しくない。できればgit cloneとかsvn coしたものをゲットしてそれを元に作業したほうが良い。
とはいえ、一々「このパッケージのリポジトリはどこにあるんだ？」なんて探しまわりたくはない。そんな時に便利なツール「debcheckout」。これでDebianパッケージ内のdebian/controlファイルで指定されているVcs-* (Vcs-Git や Vcs-Svn) を見てcheckoutができる。
debcheckoutのあとでgit-buildpackageでnew upstream versionをimportしようとすると毎回エラーになる。回避策としては一旦git checkout upstream; git checkout masterするだけなんだけど、鬱陶しいことには変わりない。で、今日思い立ってdebcheckoutの中身を覗いてみた。gitコマンドを発行しているのはsystem()使ってるのね、じゃぁこれで…と対応パッチがかけた。1行。
じゃぁ早速バグレポート…とreportbugを実行したら既存の報告済みバグが大量に出てきた。一応同じ内容が無いか…と確認した所、同じではないがよく似た内容のものがあったので、それにも対応して Bug#739104 へパッチをポストしておいた。</description>
    </item>
    
  </channel>
</rss>